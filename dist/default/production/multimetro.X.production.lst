

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Sep 26 17:21:42 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  007C4A                     __pidataCOMRAM:
    54                           	callstack 0
    55                           
    56                           ;initializer for main@F3164
    57  007C4A  0000               	dw	0
    58  007C4C  0000               	dw	0
    59  007C4E  0000               	dw	0
    60  007C50  3F80               	dw	16256
    61  007C52  0000               	dw	0
    62  007C54  4000               	dw	16384
    63  007C56  0000               	dw	0
    64  007C58  4040               	dw	16448
    65  007C5A  0000               	dw	0
    66  007C5C  4080               	dw	16512
    67  0000                     _PORTD	set	3971
    68  0000                     _TRISD	set	3989
    69  0000                     _PORTDbits	set	3971
    70                           
    71                           ; #config settings
    72                           
    73                           	psect	cinit
    74  007C5E                     __pcinit:
    75                           	callstack 0
    76  007C5E                     start_initialization:
    77                           	callstack 0
    78  007C5E                     __initialization:
    79                           	callstack 0
    80                           
    81                           ; Initialize objects allocated to COMRAM (20 bytes)
    82                           ; load TBLPTR registers with __pidataCOMRAM
    83  007C5E  0E4A               	movlw	low __pidataCOMRAM
    84  007C60  6EF6               	movwf	tblptrl,c
    85  007C62  0E7C               	movlw	high __pidataCOMRAM
    86  007C64  6EF7               	movwf	tblptrh,c
    87  007C66  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    88  007C68  6EF8               	movwf	tblptru,c
    89  007C6A  EE00  F02C         	lfsr	0,__pdataCOMRAM
    90  007C6E  EE10 F014          	lfsr	1,20
    91  007C72                     copy_data0:
    92  007C72  0009               	tblrd		*+
    93  007C74  CFF5 FFEE          	movff	tablat,postinc0
    94  007C78  50E5               	movf	postdec1,w,c
    95  007C7A  50E1               	movf	fsr1l,w,c
    96  007C7C  E1FA               	bnz	copy_data0
    97  007C7E                     end_of_initialization:
    98                           	callstack 0
    99  007C7E                     __end_of__initialization:
   100                           	callstack 0
   101  007C7E  0100               	movlb	0
   102  007C80  EF42  F03E         	goto	_main	;jump to C main() function
   103                           
   104                           	psect	dataCOMRAM
   105  00002C                     __pdataCOMRAM:
   106                           	callstack 0
   107  00002C                     main@F3164:
   108                           	callstack 0
   109  00002C                     	ds	20
   110                           
   111                           	psect	cstackCOMRAM
   112  000001                     __pcstackCOMRAM:
   113                           	callstack 0
   114  000001                     ___flge@ff1:
   115                           	callstack 0
   116                           
   117                           ; 4 bytes @ 0x0
   118  000001                     	ds	4
   119  000005                     ___flge@ff2:
   120                           	callstack 0
   121                           
   122                           ; 4 bytes @ 0x4
   123  000005                     	ds	4
   124  000009                     ??___flge:
   125                           
   126                           ; 1 bytes @ 0x8
   127  000009                     	ds	4
   128  00000D                     verificaTensao@tensao:
   129                           	callstack 0
   130                           
   131                           ; 4 bytes @ 0xC
   132  00000D                     	ds	4
   133  000011                     ??_verificaTensao:
   134                           
   135                           ; 1 bytes @ 0x10
   136  000011                     	ds	1
   137  000012                     main@vetorDeTensao:
   138                           	callstack 0
   139                           
   140                           ; 20 bytes @ 0x11
   141  000012                     	ds	20
   142  000026                     main@tensao:
   143                           	callstack 0
   144                           
   145                           ; 4 bytes @ 0x25
   146  000026                     	ds	4
   147  00002A                     main@i:
   148                           	callstack 0
   149                           
   150                           ; 2 bytes @ 0x29
   151  00002A                     	ds	2
   152                           
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   155 ;;
   156 ;; *************** function _main *****************
   157 ;; Defined at:
   158 ;;		line 40 in file "newmain.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;  i               2   41[COMRAM] int 
   163 ;;  vetorDeTensa   20   17[COMRAM] float [5]
   164 ;;  tensao          4   37[COMRAM] float 
   165 ;; Return value:  Size  Location     Type
   166 ;;                  1    wreg      void 
   167 ;; Registers used:
   168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   169 ;; Tracked objects:
   170 ;;		On entry : 0/0
   171 ;;		On exit  : 0/0
   172 ;;		Unchanged: 0/0
   173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   174 ;;      Params:         0       0       0       0       0       0       0       0       0
   175 ;;      Locals:        26       0       0       0       0       0       0       0       0
   176 ;;      Temps:          0       0       0       0       0       0       0       0       0
   177 ;;      Totals:        26       0       0       0       0       0       0       0       0
   178 ;;Total ram usage:       26 bytes
   179 ;; Hardware stack levels required when called: 2
   180 ;; This function calls:
   181 ;;		_verificaTensao
   182 ;; This function is called by:
   183 ;;		Startup code after reset
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187                           	psect	text0
   188  007C84                     __ptext0:
   189                           	callstack 0
   190  007C84                     _main:
   191                           	callstack 29
   192  007C84                     
   193                           ;newmain.c: 41:     TRISD = 0x0;
   194  007C84  0E00               	movlw	0
   195  007C86  6E95               	movwf	149,c	;volatile
   196                           
   197                           ;newmain.c: 42:     PORTD = 0;
   198  007C88  0E00               	movlw	0
   199  007C8A  6E83               	movwf	131,c	;volatile
   200                           
   201                           ;newmain.c: 43:     PORTD = 0;
   202  007C8C  0E00               	movlw	0
   203  007C8E  6E83               	movwf	131,c	;volatile
   204  007C90                     
   205                           ;newmain.c: 45:     float vetorDeTensao [] = {0, 1, 2, 3, 4};
   206  007C90  EE20  F02C         	lfsr	2,main@F3164
   207  007C94  EE10  F012         	lfsr	1,main@vetorDeTensao
   208  007C98  0E13               	movlw	19
   209  007C9A                     u321:
   210  007C9A  CFDB FFE3          	movff	plusw2,plusw1
   211  007C9E  06E8               	decf	wreg,f,c
   212  007CA0  E2FC               	bc	u321
   213  007CA2                     l842:
   214                           
   215                           ;newmain.c: 47:         int i=0;
   216  007CA2  0E00               	movlw	0
   217  007CA4  6E2B               	movwf	(main@i+1)^0,c
   218  007CA6  0E00               	movlw	0
   219  007CA8  6E2A               	movwf	main@i^0,c
   220  007CAA                     
   221                           ;newmain.c: 48:         tensao = vetorDeTensao[i];
   222  007CAA  C012  F026         	movff	main@vetorDeTensao,main@tensao
   223  007CAE  C013  F027         	movff	main@vetorDeTensao+1,main@tensao+1
   224  007CB2  C014  F028         	movff	main@vetorDeTensao+2,main@tensao+2
   225  007CB6  C015  F029         	movff	main@vetorDeTensao+3,main@tensao+3
   226  007CBA                     
   227                           ;newmain.c: 49:         i++;
   228  007CBA  4A2A               	infsnz	main@i^0,f,c
   229  007CBC  2A2B               	incf	(main@i+1)^0,f,c
   230  007CBE                     
   231                           ;newmain.c: 50:         verificaTensao(tensao);
   232  007CBE  C026  F00D         	movff	main@tensao,verificaTensao@tensao
   233  007CC2  C027  F00E         	movff	main@tensao+1,verificaTensao@tensao+1
   234  007CC6  C028  F00F         	movff	main@tensao+2,verificaTensao@tensao+2
   235  007CCA  C029  F010         	movff	main@tensao+3,verificaTensao@tensao+3
   236  007CCE  ECEF  F03E         	call	_verificaTensao	;wreg free
   237  007CD2  EF51  F03E         	goto	l842
   238  007CD6  EF00  F000         	goto	start
   239  007CDA                     __end_of_main:
   240                           	callstack 0
   241                           
   242 ;; *************** function _verificaTensao *****************
   243 ;; Defined at:
   244 ;;		line 16 in file "newmain.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;  tensao          4   12[COMRAM] float 
   247 ;; Auto vars:     Size  Location     Type
   248 ;;		None
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, status,2, status,0, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : 0/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   258 ;;      Params:         4       0       0       0       0       0       0       0       0
   259 ;;      Locals:         0       0       0       0       0       0       0       0       0
   260 ;;      Temps:          1       0       0       0       0       0       0       0       0
   261 ;;      Totals:         5       0       0       0       0       0       0       0       0
   262 ;;Total ram usage:        5 bytes
   263 ;; Hardware stack levels used: 1
   264 ;; Hardware stack levels required when called: 1
   265 ;; This function calls:
   266 ;;		___flge
   267 ;; This function is called by:
   268 ;;		_main
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           	psect	text1
   273  007DDE                     __ptext1:
   274                           	callstack 0
   275  007DDE                     _verificaTensao:
   276                           	callstack 29
   277  007DDE                     
   278                           ;newmain.c: 17:     if(tensao >=0 && tensao <1){
   279  007DDE  BE10               	btfsc	(verificaTensao@tensao+3)^0,7,c
   280  007DE0  EFF4  F03E         	goto	u221
   281  007DE4  EFF6  F03E         	goto	u220
   282  007DE8                     u221:
   283  007DE8  EF17  F03F         	goto	l806
   284  007DEC                     u220:
   285  007DEC  C00D  F001         	movff	verificaTensao@tensao,___flge@ff1
   286  007DF0  C00E  F002         	movff	verificaTensao@tensao+1,___flge@ff1+1
   287  007DF4  C00F  F003         	movff	verificaTensao@tensao+2,___flge@ff1+2
   288  007DF8  C010  F004         	movff	verificaTensao@tensao+3,___flge@ff1+3
   289  007DFC  0E00               	movlw	0
   290  007DFE  6E05               	movwf	___flge@ff2^0,c
   291  007E00  0E00               	movlw	0
   292  007E02  6E06               	movwf	(___flge@ff2+1)^0,c
   293  007E04  0E80               	movlw	128
   294  007E06  6E07               	movwf	(___flge@ff2+2)^0,c
   295  007E08  0E3F               	movlw	63
   296  007E0A  6E08               	movwf	(___flge@ff2+3)^0,c
   297  007E0C  EC6D  F03E         	call	___flge	;wreg free
   298  007E10  B0D8               	btfsc	status,0,c
   299  007E12  EF0D  F03F         	goto	u231
   300  007E16  EF0F  F03F         	goto	u230
   301  007E1A                     u231:
   302  007E1A  EF17  F03F         	goto	l806
   303  007E1E                     u230:
   304  007E1E                     
   305                           ;newmain.c: 18:         PORTDbits.RD0 = 0xFF;
   306  007E1E  8083               	bsf	131,0,c	;volatile
   307  007E20                     
   308                           ;newmain.c: 19:         _delay((unsigned long)((100)*(4000000/4000.0)));
   309  007E20  0E82               	movlw	130
   310  007E22  6E11               	movwf	??_verificaTensao^0,c
   311  007E24  0EDE               	movlw	222
   312  007E26                     u337:
   313  007E26  2EE8               	decfsz	wreg,f,c
   314  007E28  D7FE               	bra	u337
   315  007E2A  2E11               	decfsz	??_verificaTensao^0,f,c
   316  007E2C  D7FC               	bra	u337
   317  007E2E                     l806:
   318                           
   319                           ;newmain.c: 21:     if(tensao >= 1 && tensao < 2){
   320  007E2E  C00D  F001         	movff	verificaTensao@tensao,___flge@ff1
   321  007E32  C00E  F002         	movff	verificaTensao@tensao+1,___flge@ff1+1
   322  007E36  C00F  F003         	movff	verificaTensao@tensao+2,___flge@ff1+2
   323  007E3A  C010  F004         	movff	verificaTensao@tensao+3,___flge@ff1+3
   324  007E3E  0E00               	movlw	0
   325  007E40  6E05               	movwf	___flge@ff2^0,c
   326  007E42  0E00               	movlw	0
   327  007E44  6E06               	movwf	(___flge@ff2+1)^0,c
   328  007E46  0E80               	movlw	128
   329  007E48  6E07               	movwf	(___flge@ff2+2)^0,c
   330  007E4A  0E3F               	movlw	63
   331  007E4C  6E08               	movwf	(___flge@ff2+3)^0,c
   332  007E4E  EC6D  F03E         	call	___flge	;wreg free
   333  007E52  A0D8               	btfss	status,0,c
   334  007E54  EF2E  F03F         	goto	u241
   335  007E58  EF30  F03F         	goto	u240
   336  007E5C                     u241:
   337  007E5C  EF51  F03F         	goto	l814
   338  007E60                     u240:
   339  007E60  C00D  F001         	movff	verificaTensao@tensao,___flge@ff1
   340  007E64  C00E  F002         	movff	verificaTensao@tensao+1,___flge@ff1+1
   341  007E68  C00F  F003         	movff	verificaTensao@tensao+2,___flge@ff1+2
   342  007E6C  C010  F004         	movff	verificaTensao@tensao+3,___flge@ff1+3
   343  007E70  0E00               	movlw	0
   344  007E72  6E05               	movwf	___flge@ff2^0,c
   345  007E74  0E00               	movlw	0
   346  007E76  6E06               	movwf	(___flge@ff2+1)^0,c
   347  007E78  0E00               	movlw	0
   348  007E7A  6E07               	movwf	(___flge@ff2+2)^0,c
   349  007E7C  0E40               	movlw	64
   350  007E7E  6E08               	movwf	(___flge@ff2+3)^0,c
   351  007E80  EC6D  F03E         	call	___flge	;wreg free
   352  007E84  B0D8               	btfsc	status,0,c
   353  007E86  EF47  F03F         	goto	u251
   354  007E8A  EF49  F03F         	goto	u250
   355  007E8E                     u251:
   356  007E8E  EF51  F03F         	goto	l814
   357  007E92                     u250:
   358  007E92                     
   359                           ;newmain.c: 22:         PORTDbits.RD1 = 0xFF;
   360  007E92  8283               	bsf	131,1,c	;volatile
   361  007E94                     
   362                           ;newmain.c: 23:         _delay((unsigned long)((100)*(4000000/4000.0)));
   363  007E94  0E82               	movlw	130
   364  007E96  6E11               	movwf	??_verificaTensao^0,c
   365  007E98  0EDE               	movlw	222
   366  007E9A                     u347:
   367  007E9A  2EE8               	decfsz	wreg,f,c
   368  007E9C  D7FE               	bra	u347
   369  007E9E  2E11               	decfsz	??_verificaTensao^0,f,c
   370  007EA0  D7FC               	bra	u347
   371  007EA2                     l814:
   372                           
   373                           ;newmain.c: 25:     if(tensao >= 2 && tensao < 3){
   374  007EA2  C00D  F001         	movff	verificaTensao@tensao,___flge@ff1
   375  007EA6  C00E  F002         	movff	verificaTensao@tensao+1,___flge@ff1+1
   376  007EAA  C00F  F003         	movff	verificaTensao@tensao+2,___flge@ff1+2
   377  007EAE  C010  F004         	movff	verificaTensao@tensao+3,___flge@ff1+3
   378  007EB2  0E00               	movlw	0
   379  007EB4  6E05               	movwf	___flge@ff2^0,c
   380  007EB6  0E00               	movlw	0
   381  007EB8  6E06               	movwf	(___flge@ff2+1)^0,c
   382  007EBA  0E00               	movlw	0
   383  007EBC  6E07               	movwf	(___flge@ff2+2)^0,c
   384  007EBE  0E40               	movlw	64
   385  007EC0  6E08               	movwf	(___flge@ff2+3)^0,c
   386  007EC2  EC6D  F03E         	call	___flge	;wreg free
   387  007EC6  A0D8               	btfss	status,0,c
   388  007EC8  EF68  F03F         	goto	u261
   389  007ECC  EF6A  F03F         	goto	u260
   390  007ED0                     u261:
   391  007ED0  EF8B  F03F         	goto	l822
   392  007ED4                     u260:
   393  007ED4  C00D  F001         	movff	verificaTensao@tensao,___flge@ff1
   394  007ED8  C00E  F002         	movff	verificaTensao@tensao+1,___flge@ff1+1
   395  007EDC  C00F  F003         	movff	verificaTensao@tensao+2,___flge@ff1+2
   396  007EE0  C010  F004         	movff	verificaTensao@tensao+3,___flge@ff1+3
   397  007EE4  0E00               	movlw	0
   398  007EE6  6E05               	movwf	___flge@ff2^0,c
   399  007EE8  0E00               	movlw	0
   400  007EEA  6E06               	movwf	(___flge@ff2+1)^0,c
   401  007EEC  0E40               	movlw	64
   402  007EEE  6E07               	movwf	(___flge@ff2+2)^0,c
   403  007EF0  0E40               	movlw	64
   404  007EF2  6E08               	movwf	(___flge@ff2+3)^0,c
   405  007EF4  EC6D  F03E         	call	___flge	;wreg free
   406  007EF8  B0D8               	btfsc	status,0,c
   407  007EFA  EF81  F03F         	goto	u271
   408  007EFE  EF83  F03F         	goto	u270
   409  007F02                     u271:
   410  007F02  EF8B  F03F         	goto	l822
   411  007F06                     u270:
   412  007F06                     
   413                           ;newmain.c: 26:         PORTDbits.RD2 = 0xFF;
   414  007F06  8483               	bsf	131,2,c	;volatile
   415  007F08                     
   416                           ;newmain.c: 27:         _delay((unsigned long)((100)*(4000000/4000.0)));
   417  007F08  0E82               	movlw	130
   418  007F0A  6E11               	movwf	??_verificaTensao^0,c
   419  007F0C  0EDE               	movlw	222
   420  007F0E                     u357:
   421  007F0E  2EE8               	decfsz	wreg,f,c
   422  007F10  D7FE               	bra	u357
   423  007F12  2E11               	decfsz	??_verificaTensao^0,f,c
   424  007F14  D7FC               	bra	u357
   425  007F16                     l822:
   426                           
   427                           ;newmain.c: 29:     if(tensao >= 3 && tensao < 4){
   428  007F16  C00D  F001         	movff	verificaTensao@tensao,___flge@ff1
   429  007F1A  C00E  F002         	movff	verificaTensao@tensao+1,___flge@ff1+1
   430  007F1E  C00F  F003         	movff	verificaTensao@tensao+2,___flge@ff1+2
   431  007F22  C010  F004         	movff	verificaTensao@tensao+3,___flge@ff1+3
   432  007F26  0E00               	movlw	0
   433  007F28  6E05               	movwf	___flge@ff2^0,c
   434  007F2A  0E00               	movlw	0
   435  007F2C  6E06               	movwf	(___flge@ff2+1)^0,c
   436  007F2E  0E40               	movlw	64
   437  007F30  6E07               	movwf	(___flge@ff2+2)^0,c
   438  007F32  0E40               	movlw	64
   439  007F34  6E08               	movwf	(___flge@ff2+3)^0,c
   440  007F36  EC6D  F03E         	call	___flge	;wreg free
   441  007F3A  A0D8               	btfss	status,0,c
   442  007F3C  EFA2  F03F         	goto	u281
   443  007F40  EFA4  F03F         	goto	u280
   444  007F44                     u281:
   445  007F44  EFC5  F03F         	goto	l830
   446  007F48                     u280:
   447  007F48  C00D  F001         	movff	verificaTensao@tensao,___flge@ff1
   448  007F4C  C00E  F002         	movff	verificaTensao@tensao+1,___flge@ff1+1
   449  007F50  C00F  F003         	movff	verificaTensao@tensao+2,___flge@ff1+2
   450  007F54  C010  F004         	movff	verificaTensao@tensao+3,___flge@ff1+3
   451  007F58  0E00               	movlw	0
   452  007F5A  6E05               	movwf	___flge@ff2^0,c
   453  007F5C  0E00               	movlw	0
   454  007F5E  6E06               	movwf	(___flge@ff2+1)^0,c
   455  007F60  0E80               	movlw	128
   456  007F62  6E07               	movwf	(___flge@ff2+2)^0,c
   457  007F64  0E40               	movlw	64
   458  007F66  6E08               	movwf	(___flge@ff2+3)^0,c
   459  007F68  EC6D  F03E         	call	___flge	;wreg free
   460  007F6C  B0D8               	btfsc	status,0,c
   461  007F6E  EFBB  F03F         	goto	u291
   462  007F72  EFBD  F03F         	goto	u290
   463  007F76                     u291:
   464  007F76  EFC5  F03F         	goto	l830
   465  007F7A                     u290:
   466  007F7A                     
   467                           ;newmain.c: 30:         PORTDbits.RD3 = 0xFF;
   468  007F7A  8683               	bsf	131,3,c	;volatile
   469  007F7C                     
   470                           ;newmain.c: 31:         _delay((unsigned long)((100)*(4000000/4000.0)));
   471  007F7C  0E82               	movlw	130
   472  007F7E  6E11               	movwf	??_verificaTensao^0,c
   473  007F80  0EDE               	movlw	222
   474  007F82                     u367:
   475  007F82  2EE8               	decfsz	wreg,f,c
   476  007F84  D7FE               	bra	u367
   477  007F86  2E11               	decfsz	??_verificaTensao^0,f,c
   478  007F88  D7FC               	bra	u367
   479  007F8A                     l830:
   480                           
   481                           ;newmain.c: 33:     if(tensao >= 4 && tensao <= 5){
   482  007F8A  C00D  F001         	movff	verificaTensao@tensao,___flge@ff1
   483  007F8E  C00E  F002         	movff	verificaTensao@tensao+1,___flge@ff1+1
   484  007F92  C00F  F003         	movff	verificaTensao@tensao+2,___flge@ff1+2
   485  007F96  C010  F004         	movff	verificaTensao@tensao+3,___flge@ff1+3
   486  007F9A  0E00               	movlw	0
   487  007F9C  6E05               	movwf	___flge@ff2^0,c
   488  007F9E  0E00               	movlw	0
   489  007FA0  6E06               	movwf	(___flge@ff2+1)^0,c
   490  007FA2  0E80               	movlw	128
   491  007FA4  6E07               	movwf	(___flge@ff2+2)^0,c
   492  007FA6  0E40               	movlw	64
   493  007FA8  6E08               	movwf	(___flge@ff2+3)^0,c
   494  007FAA  EC6D  F03E         	call	___flge	;wreg free
   495  007FAE  A0D8               	btfss	status,0,c
   496  007FB0  EFDC  F03F         	goto	u301
   497  007FB4  EFDE  F03F         	goto	u300
   498  007FB8                     u301:
   499  007FB8  EFFF  F03F         	goto	l16
   500  007FBC                     u300:
   501  007FBC  0E00               	movlw	0
   502  007FBE  6E01               	movwf	___flge@ff1^0,c
   503  007FC0  0E00               	movlw	0
   504  007FC2  6E02               	movwf	(___flge@ff1+1)^0,c
   505  007FC4  0EA0               	movlw	160
   506  007FC6  6E03               	movwf	(___flge@ff1+2)^0,c
   507  007FC8  0E40               	movlw	64
   508  007FCA  6E04               	movwf	(___flge@ff1+3)^0,c
   509  007FCC  C00D  F005         	movff	verificaTensao@tensao,___flge@ff2
   510  007FD0  C00E  F006         	movff	verificaTensao@tensao+1,___flge@ff2+1
   511  007FD4  C00F  F007         	movff	verificaTensao@tensao+2,___flge@ff2+2
   512  007FD8  C010  F008         	movff	verificaTensao@tensao+3,___flge@ff2+3
   513  007FDC  EC6D  F03E         	call	___flge	;wreg free
   514  007FE0  A0D8               	btfss	status,0,c
   515  007FE2  EFF5  F03F         	goto	u311
   516  007FE6  EFF7  F03F         	goto	u310
   517  007FEA                     u311:
   518  007FEA  EFFF  F03F         	goto	l16
   519  007FEE                     u310:
   520  007FEE                     
   521                           ;newmain.c: 34:         PORTDbits.RD4 = 0xFF;
   522  007FEE  8883               	bsf	131,4,c	;volatile
   523  007FF0                     
   524                           ;newmain.c: 35:         _delay((unsigned long)((100)*(4000000/4000.0)));
   525  007FF0  0E82               	movlw	130
   526  007FF2  6E11               	movwf	??_verificaTensao^0,c
   527  007FF4  0EDE               	movlw	222
   528  007FF6                     u377:
   529  007FF6  2EE8               	decfsz	wreg,f,c
   530  007FF8  D7FE               	bra	u377
   531  007FFA  2E11               	decfsz	??_verificaTensao^0,f,c
   532  007FFC  D7FC               	bra	u377
   533  007FFE                     l16:
   534  007FFE  0012               	return		;funcret
   535  008000                     __end_of_verificaTensao:
   536                           	callstack 0
   537                           
   538 ;; *************** function ___flge *****************
   539 ;; Defined at:
   540 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;  ff1             4    0[COMRAM] void 
   543 ;;  ff2             4    4[COMRAM] void 
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;		None               void
   548 ;; Registers used:
   549 ;;		wreg, status,2, status,0
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   555 ;;      Params:         8       0       0       0       0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0       0       0       0       0
   557 ;;      Temps:          4       0       0       0       0       0       0       0       0
   558 ;;      Totals:        12       0       0       0       0       0       0       0       0
   559 ;;Total ram usage:       12 bytes
   560 ;; Hardware stack levels used: 1
   561 ;; This function calls:
   562 ;;		Nothing
   563 ;; This function is called by:
   564 ;;		_verificaTensao
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           	psect	text2
   569  007CDA                     __ptext2:
   570                           	callstack 0
   571  007CDA                     ___flge:
   572                           	callstack 29
   573  007CDA  0E00               	movlw	0
   574  007CDC  1401               	andwf	___flge@ff1^0,w,c
   575  007CDE  6E09               	movwf	??___flge^0,c
   576  007CE0  0E00               	movlw	0
   577  007CE2  1402               	andwf	(___flge@ff1+1)^0,w,c
   578  007CE4  6E0A               	movwf	(??___flge+1)^0,c
   579  007CE6  0E80               	movlw	128
   580  007CE8  1403               	andwf	(___flge@ff1+2)^0,w,c
   581  007CEA  6E0B               	movwf	(??___flge+2)^0,c
   582  007CEC  0E7F               	movlw	127
   583  007CEE  1404               	andwf	(___flge@ff1+3)^0,w,c
   584  007CF0  6E0C               	movwf	(??___flge+3)^0,c
   585  007CF2  5009               	movf	??___flge^0,w,c
   586  007CF4  100A               	iorwf	(??___flge+1)^0,w,c
   587  007CF6  100B               	iorwf	(??___flge+2)^0,w,c
   588  007CF8  100C               	iorwf	(??___flge+3)^0,w,c
   589  007CFA  A4D8               	btfss	status,2,c
   590  007CFC  EF82  F03E         	goto	u171
   591  007D00  EF84  F03E         	goto	u170
   592  007D04                     u171:
   593  007D04  EF8C  F03E         	goto	l780
   594  007D08                     u170:
   595  007D08  0E00               	movlw	0
   596  007D0A  6E01               	movwf	___flge@ff1^0,c
   597  007D0C  0E00               	movlw	0
   598  007D0E  6E02               	movwf	(___flge@ff1+1)^0,c
   599  007D10  0E00               	movlw	0
   600  007D12  6E03               	movwf	(___flge@ff1+2)^0,c
   601  007D14  0E00               	movlw	0
   602  007D16  6E04               	movwf	(___flge@ff1+3)^0,c
   603  007D18                     l780:
   604  007D18  0E00               	movlw	0
   605  007D1A  1405               	andwf	___flge@ff2^0,w,c
   606  007D1C  6E09               	movwf	??___flge^0,c
   607  007D1E  0E00               	movlw	0
   608  007D20  1406               	andwf	(___flge@ff2+1)^0,w,c
   609  007D22  6E0A               	movwf	(??___flge+1)^0,c
   610  007D24  0E80               	movlw	128
   611  007D26  1407               	andwf	(___flge@ff2+2)^0,w,c
   612  007D28  6E0B               	movwf	(??___flge+2)^0,c
   613  007D2A  0E7F               	movlw	127
   614  007D2C  1408               	andwf	(___flge@ff2+3)^0,w,c
   615  007D2E  6E0C               	movwf	(??___flge+3)^0,c
   616  007D30  5009               	movf	??___flge^0,w,c
   617  007D32  100A               	iorwf	(??___flge+1)^0,w,c
   618  007D34  100B               	iorwf	(??___flge+2)^0,w,c
   619  007D36  100C               	iorwf	(??___flge+3)^0,w,c
   620  007D38  A4D8               	btfss	status,2,c
   621  007D3A  EFA1  F03E         	goto	u181
   622  007D3E  EFA3  F03E         	goto	u180
   623  007D42                     u181:
   624  007D42  EFAB  F03E         	goto	l784
   625  007D46                     u180:
   626  007D46  0E00               	movlw	0
   627  007D48  6E05               	movwf	___flge@ff2^0,c
   628  007D4A  0E00               	movlw	0
   629  007D4C  6E06               	movwf	(___flge@ff2+1)^0,c
   630  007D4E  0E00               	movlw	0
   631  007D50  6E07               	movwf	(___flge@ff2+2)^0,c
   632  007D52  0E00               	movlw	0
   633  007D54  6E08               	movwf	(___flge@ff2+3)^0,c
   634  007D56                     l784:
   635  007D56  AE04               	btfss	(___flge@ff1+3)^0,7,c
   636  007D58  EFB0  F03E         	goto	u191
   637  007D5C  EFB2  F03E         	goto	u190
   638  007D60                     u191:
   639  007D60  EFBB  F03E         	goto	l788
   640  007D64                     u190:
   641  007D64  6C01               	negf	___flge@ff1^0,c
   642  007D66  1E02               	comf	(___flge@ff1+1)^0,f,c
   643  007D68  B0D8               	btfsc	status,0,c
   644  007D6A  2A02               	incf	(___flge@ff1+1)^0,f,c
   645  007D6C  1E03               	comf	(___flge@ff1+2)^0,f,c
   646  007D6E  B0D8               	btfsc	status,0,c
   647  007D70  2A03               	incf	(___flge@ff1+2)^0,f,c
   648  007D72  0E80               	movlw	128
   649  007D74  5604               	subfwb	(___flge@ff1+3)^0,f,c
   650  007D76                     l788:
   651  007D76  AE08               	btfss	(___flge@ff2+3)^0,7,c
   652  007D78  EFC0  F03E         	goto	u201
   653  007D7C  EFC2  F03E         	goto	u200
   654  007D80                     u201:
   655  007D80  EFCB  F03E         	goto	l294
   656  007D84                     u200:
   657  007D84  6C05               	negf	___flge@ff2^0,c
   658  007D86  1E06               	comf	(___flge@ff2+1)^0,f,c
   659  007D88  B0D8               	btfsc	status,0,c
   660  007D8A  2A06               	incf	(___flge@ff2+1)^0,f,c
   661  007D8C  1E07               	comf	(___flge@ff2+2)^0,f,c
   662  007D8E  B0D8               	btfsc	status,0,c
   663  007D90  2A07               	incf	(___flge@ff2+2)^0,f,c
   664  007D92  0E80               	movlw	128
   665  007D94  5608               	subfwb	(___flge@ff2+3)^0,f,c
   666  007D96                     l294:
   667  007D96  0E00               	movlw	0
   668  007D98  1A01               	xorwf	___flge@ff1^0,f,c
   669  007D9A  0E00               	movlw	0
   670  007D9C  1A02               	xorwf	(___flge@ff1+1)^0,f,c
   671  007D9E  0E00               	movlw	0
   672  007DA0  1A03               	xorwf	(___flge@ff1+2)^0,f,c
   673  007DA2  0E80               	movlw	128
   674  007DA4  1A04               	xorwf	(___flge@ff1+3)^0,f,c
   675  007DA6  0E00               	movlw	0
   676  007DA8  1A05               	xorwf	___flge@ff2^0,f,c
   677  007DAA  0E00               	movlw	0
   678  007DAC  1A06               	xorwf	(___flge@ff2+1)^0,f,c
   679  007DAE  0E00               	movlw	0
   680  007DB0  1A07               	xorwf	(___flge@ff2+2)^0,f,c
   681  007DB2  0E80               	movlw	128
   682  007DB4  1A08               	xorwf	(___flge@ff2+3)^0,f,c
   683  007DB6  5005               	movf	___flge@ff2^0,w,c
   684  007DB8  5C01               	subwf	___flge@ff1^0,w,c
   685  007DBA  5006               	movf	(___flge@ff2+1)^0,w,c
   686  007DBC  5802               	subwfb	(___flge@ff1+1)^0,w,c
   687  007DBE  5007               	movf	(___flge@ff2+2)^0,w,c
   688  007DC0  5803               	subwfb	(___flge@ff1+2)^0,w,c
   689  007DC2  5008               	movf	(___flge@ff2+3)^0,w,c
   690  007DC4  5804               	subwfb	(___flge@ff1+3)^0,w,c
   691  007DC6  B0D8               	btfsc	status,0,c
   692  007DC8  EFE8  F03E         	goto	u211
   693  007DCC  EFEA  F03E         	goto	u210
   694  007DD0                     u211:
   695  007DD0  EFED  F03E         	goto	l794
   696  007DD4                     u210:
   697  007DD4  90D8               	bcf	status,0,c
   698  007DD6  EFEE  F03E         	goto	l299
   699  007DDA                     l794:
   700  007DDA  80D8               	bsf	status,0,c
   701  007DDC                     l299:
   702  007DDC  0012               	return		;funcret
   703  007DDE                     __end_of___flge:
   704                           	callstack 0
   705  0000                     
   706                           	psect	rparam
   707  0000                     
   708                           	psect	idloc
   709                           
   710                           ;Config register IDLOC0 @ 0x200000
   711                           ;	unspecified, using default values
   712  200000                     	org	2097152
   713  200000  FF                 	db	255
   714                           
   715                           ;Config register IDLOC1 @ 0x200001
   716                           ;	unspecified, using default values
   717  200001                     	org	2097153
   718  200001  FF                 	db	255
   719                           
   720                           ;Config register IDLOC2 @ 0x200002
   721                           ;	unspecified, using default values
   722  200002                     	org	2097154
   723  200002  FF                 	db	255
   724                           
   725                           ;Config register IDLOC3 @ 0x200003
   726                           ;	unspecified, using default values
   727  200003                     	org	2097155
   728  200003  FF                 	db	255
   729                           
   730                           ;Config register IDLOC4 @ 0x200004
   731                           ;	unspecified, using default values
   732  200004                     	org	2097156
   733  200004  FF                 	db	255
   734                           
   735                           ;Config register IDLOC5 @ 0x200005
   736                           ;	unspecified, using default values
   737  200005                     	org	2097157
   738  200005  FF                 	db	255
   739                           
   740                           ;Config register IDLOC6 @ 0x200006
   741                           ;	unspecified, using default values
   742  200006                     	org	2097158
   743  200006  FF                 	db	255
   744                           
   745                           ;Config register IDLOC7 @ 0x200007
   746                           ;	unspecified, using default values
   747  200007                     	org	2097159
   748  200007  FF                 	db	255
   749                           
   750                           	psect	config
   751                           
   752                           ;Config register CONFIG1L @ 0x300000
   753                           ;	unspecified, using default values
   754                           ;	PLL Prescaler Selection bits
   755                           ;	PLLDIV = 0x0, unprogrammed default
   756                           ;	System Clock Postscaler Selection bits
   757                           ;	CPUDIV = 0x0, unprogrammed default
   758                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   759                           ;	USBDIV = 0x0, unprogrammed default
   760  300000                     	org	3145728
   761  300000  00                 	db	0
   762                           
   763                           ;Config register CONFIG1H @ 0x300001
   764                           ;	Oscillator Selection bits
   765                           ;	FOSC = HS, HS oscillator (HS)
   766                           ;	Fail-Safe Clock Monitor Enable bit
   767                           ;	FCMEN = 0x0, unprogrammed default
   768                           ;	Internal/External Oscillator Switchover bit
   769                           ;	IESO = 0x0, unprogrammed default
   770  300001                     	org	3145729
   771  300001  0C                 	db	12
   772                           
   773                           ;Config register CONFIG2L @ 0x300002
   774                           ;	unspecified, using default values
   775                           ;	Power-up Timer Enable bit
   776                           ;	PWRT = 0x1, unprogrammed default
   777                           ;	Brown-out Reset Enable bits
   778                           ;	BOR = 0x3, unprogrammed default
   779                           ;	Brown-out Reset Voltage bits
   780                           ;	BORV = 0x3, unprogrammed default
   781                           ;	USB Voltage Regulator Enable bit
   782                           ;	VREGEN = 0x0, unprogrammed default
   783  300002                     	org	3145730
   784  300002  1F                 	db	31
   785                           
   786                           ;Config register CONFIG2H @ 0x300003
   787                           ;	Watchdog Timer Enable bit
   788                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   789                           ;	Watchdog Timer Postscale Select bits
   790                           ;	WDTPS = 0xF, unprogrammed default
   791  300003                     	org	3145731
   792  300003  1E                 	db	30
   793                           
   794                           ; Padding undefined space
   795  300004                     	org	3145732
   796  300004  FF                 	db	255
   797                           
   798                           ;Config register CONFIG3H @ 0x300005
   799                           ;	CCP2 MUX bit
   800                           ;	CCP2MX = 0x1, unprogrammed default
   801                           ;	PORTB A/D Enable bit
   802                           ;	PBADEN = 0x1, unprogrammed default
   803                           ;	Low-Power Timer 1 Oscillator Enable bit
   804                           ;	LPT1OSC = 0x0, unprogrammed default
   805                           ;	MCLR Pin Enable bit
   806                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   807  300005                     	org	3145733
   808  300005  83                 	db	131
   809                           
   810                           ;Config register CONFIG4L @ 0x300006
   811                           ;	unspecified, using default values
   812                           ;	Stack Full/Underflow Reset Enable bit
   813                           ;	STVREN = 0x1, unprogrammed default
   814                           ;	Single-Supply ICSP Enable bit
   815                           ;	LVP = 0x1, unprogrammed default
   816                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   817                           ;	ICPRT = 0x0, unprogrammed default
   818                           ;	Extended Instruction Set Enable bit
   819                           ;	XINST = 0x0, unprogrammed default
   820                           ;	Background Debugger Enable bit
   821                           ;	DEBUG = 0x1, unprogrammed default
   822  300006                     	org	3145734
   823  300006  85                 	db	133
   824                           
   825                           ; Padding undefined space
   826  300007                     	org	3145735
   827  300007  FF                 	db	255
   828                           
   829                           ;Config register CONFIG5L @ 0x300008
   830                           ;	unspecified, using default values
   831                           ;	Code Protection bit
   832                           ;	CP0 = 0x1, unprogrammed default
   833                           ;	Code Protection bit
   834                           ;	CP1 = 0x1, unprogrammed default
   835                           ;	Code Protection bit
   836                           ;	CP2 = 0x1, unprogrammed default
   837                           ;	Code Protection bit
   838                           ;	CP3 = 0x1, unprogrammed default
   839  300008                     	org	3145736
   840  300008  0F                 	db	15
   841                           
   842                           ;Config register CONFIG5H @ 0x300009
   843                           ;	unspecified, using default values
   844                           ;	Boot Block Code Protection bit
   845                           ;	CPB = 0x1, unprogrammed default
   846                           ;	Data EEPROM Code Protection bit
   847                           ;	CPD = 0x1, unprogrammed default
   848  300009                     	org	3145737
   849  300009  C0                 	db	192
   850                           
   851                           ;Config register CONFIG6L @ 0x30000A
   852                           ;	unspecified, using default values
   853                           ;	Write Protection bit
   854                           ;	WRT0 = 0x1, unprogrammed default
   855                           ;	Write Protection bit
   856                           ;	WRT1 = 0x1, unprogrammed default
   857                           ;	Write Protection bit
   858                           ;	WRT2 = 0x1, unprogrammed default
   859                           ;	Write Protection bit
   860                           ;	WRT3 = 0x1, unprogrammed default
   861  30000A                     	org	3145738
   862  30000A  0F                 	db	15
   863                           
   864                           ;Config register CONFIG6H @ 0x30000B
   865                           ;	unspecified, using default values
   866                           ;	Configuration Register Write Protection bit
   867                           ;	WRTC = 0x1, unprogrammed default
   868                           ;	Boot Block Write Protection bit
   869                           ;	WRTB = 0x1, unprogrammed default
   870                           ;	Data EEPROM Write Protection bit
   871                           ;	WRTD = 0x1, unprogrammed default
   872  30000B                     	org	3145739
   873  30000B  E0                 	db	224
   874                           
   875                           ;Config register CONFIG7L @ 0x30000C
   876                           ;	unspecified, using default values
   877                           ;	Table Read Protection bit
   878                           ;	EBTR0 = 0x1, unprogrammed default
   879                           ;	Table Read Protection bit
   880                           ;	EBTR1 = 0x1, unprogrammed default
   881                           ;	Table Read Protection bit
   882                           ;	EBTR2 = 0x1, unprogrammed default
   883                           ;	Table Read Protection bit
   884                           ;	EBTR3 = 0x1, unprogrammed default
   885  30000C                     	org	3145740
   886  30000C  0F                 	db	15
   887                           
   888                           ;Config register CONFIG7H @ 0x30000D
   889                           ;	unspecified, using default values
   890                           ;	Boot Block Table Read Protection bit
   891                           ;	EBTRB = 0x1, unprogrammed default
   892  30000D                     	org	3145741
   893  30000D  40                 	db	64
   894                           tosu	equ	0xFFF
   895                           tosh	equ	0xFFE
   896                           tosl	equ	0xFFD
   897                           stkptr	equ	0xFFC
   898                           pclatu	equ	0xFFB
   899                           pclath	equ	0xFFA
   900                           pcl	equ	0xFF9
   901                           tblptru	equ	0xFF8
   902                           tblptrh	equ	0xFF7
   903                           tblptrl	equ	0xFF6
   904                           tablat	equ	0xFF5
   905                           prodh	equ	0xFF4
   906                           prodl	equ	0xFF3
   907                           indf0	equ	0xFEF
   908                           postinc0	equ	0xFEE
   909                           postdec0	equ	0xFED
   910                           preinc0	equ	0xFEC
   911                           plusw0	equ	0xFEB
   912                           fsr0h	equ	0xFEA
   913                           fsr0l	equ	0xFE9
   914                           wreg	equ	0xFE8
   915                           indf1	equ	0xFE7
   916                           postinc1	equ	0xFE6
   917                           postdec1	equ	0xFE5
   918                           preinc1	equ	0xFE4
   919                           plusw1	equ	0xFE3
   920                           fsr1h	equ	0xFE2
   921                           fsr1l	equ	0xFE1
   922                           bsr	equ	0xFE0
   923                           indf2	equ	0xFDF
   924                           postinc2	equ	0xFDE
   925                           postdec2	equ	0xFDD
   926                           preinc2	equ	0xFDC
   927                           plusw2	equ	0xFDB
   928                           fsr2h	equ	0xFDA
   929                           fsr2l	equ	0xFD9
   930                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     43      63
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_verificaTensao
    _verificaTensao->___flge

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0    1918
                                             17 COMRAM    26    26      0
                     _verificaTensao
 ---------------------------------------------------------------------------------
 (1) _verificaTensao                                       5     1      4    1846
                                             12 COMRAM     5     1      4
                             ___flge
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1550
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _verificaTensao
     ___flge

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2B      3F       1       66.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F      20        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Sep 26 17:21:42 2021

                     l16 7FFE                      l294 7D96                      l800 7DEC  
                    l810 7E92                      l802 7E1E                      l299 7DDC  
                    l820 7F08                      l812 7E94                      l804 7E20  
                    l830 7F8A                      l822 7F16                      l814 7EA2  
                    l806 7E2E                      l832 7FBC                      l824 7F48  
                    l816 7ED4                      l808 7E60                      l840 7C90  
                    l834 7FEE                      l826 7F7A                      l818 7F06  
                    l842 7CA2                      l780 7D18                      l836 7FF0  
                    l828 7F7C                      l844 7CAA                      l790 7D84  
                    l782 7D46                      l846 7CBA                      l838 7C84  
                    l792 7DD4                      l784 7D56                      l776 7CDA  
                    l848 7CBE                      l794 7DDA                      l786 7D64  
                    l778 7D08                      l788 7D76                      l798 7DDE  
                    u200 7D84                      u201 7D80                      u210 7DD4  
                    u211 7DD0                      u300 7FBC                      u220 7DEC  
                    u301 7FB8                      u221 7DE8                      u310 7FEE  
                    u230 7E1E                      u311 7FEA                      u231 7E1A  
                    u240 7E60                      u241 7E5C                      u321 7C9A  
                    u170 7D08                      u250 7E92                      u171 7D04  
                    u251 7E8E                      u180 7D46                      u260 7ED4  
                    u181 7D42                      u261 7ED0                      u190 7D64  
                    u270 7F06                      u191 7D60                      u271 7F02  
                    u280 7F48                      u281 7F44                      u337 7E26  
                    u290 7F7A                      u291 7F76                      u347 7E9A  
                    u357 7F0E                      u367 7F82                      u377 7FF6  
                    wreg 000FE8          ?_verificaTensao 000D                     _main 7C84  
                   fsr1l 000FE1                     start 0000             ___param_bank 000000  
                  ?_main 0001                    _PORTD 000F83                    _TRISD 000F95  
                  main@i 002A                    tablat 000FF5                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8          __initialization 7C5E  
           __end_of_main 7CDA                   ??_main 0012            __activetblptr 000000  
                 ___flge 7CDA                   isa$std 000001             __pdataCOMRAM 002C  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             ___flge@ff1 0001               ___flge@ff2 0005               __accesstop 0060  
__end_of__initialization 7C7E            ___rparam_used 000001           __pcstackCOMRAM 0001  
       ??_verificaTensao 0011                  ?___flge 0001     verificaTensao@tensao 000D  
                __Hparam 0000                  __Lparam 0000          __size_of___flge 0104  
                __pcinit 7C5E                  __ramtop 0800                  __ptext0 7C84  
                __ptext1 7DDE                  __ptext2 7CDA     end_of_initialization 7C7E  
                postdec1 000FE5                  postinc0 000FEE                _PORTDbits 000F83  
             main@tensao 0026           __end_of___flge 7DDE            __pidataCOMRAM 7C4A  
    start_initialization 7C5E                 ??___flge 0009  __size_of_verificaTensao 0222  
              main@F3164 002C        main@vetorDeTensao 0012                copy_data0 7C72  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 0056  
               isa$xinst 000000           _verificaTensao 7DDE   __end_of_verificaTensao 8000  
