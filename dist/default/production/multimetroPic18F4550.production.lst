

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 27 23:43:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 12/02/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4550 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89                           	psect	idataBANK0
    90  003958                     __pidataBANK0:
    91                           	callstack 0
    92                           
    93                           ;initializer for main@F3660
    94  003958  0000               	dw	0
    95  00395A  0000               	dw	0
    96  00395C  0000               	dw	0
    97  00395E  3F80               	dw	16256
    98  003960  0000               	dw	0
    99  003962  4000               	dw	16384
   100  003964  0000               	dw	0
   101  003966  4040               	dw	16448
   102  003968  0000               	dw	0
   103  00396A  4080               	dw	16512
   104  0000                     _INTCON2bits	set	4081
   105  0000                     _INTCON3bits	set	4080
   106  0000                     _ADCON1	set	4033
   107  0000                     _TRISE	set	3990
   108  0000                     _TRISD	set	3989
   109  0000                     _TMR0L	set	4054
   110  0000                     _T0CON	set	4053
   111  0000                     _INTCONbits	set	4082
   112  0000                     _PORTDbits	set	3971
   113  0000                     _PORTD	set	3971
   114  0000                     _PORTEbits	set	3972
   115                           
   116                           	psect	smallconst
   117  000800                     __psmallconst:
   118                           	callstack 0
   119  000800  00                 	db	0
   120  000801                     STR_1:
   121  000801  56                 	db	86	;'V'
   122  000802  6F                 	db	111	;'o'
   123  000803  6C                 	db	108	;'l'
   124  000804  74                 	db	116	;'t'
   125  000805  61                 	db	97	;'a'
   126  000806  67                 	db	103	;'g'
   127  000807  65                 	db	101	;'e'
   128  000808  6D                 	db	109	;'m'
   129  000809  00                 	db	0
   130  00080A                     STR_2:
   131  00080A  25                 	db	37
   132  00080B  33                 	db	51	;'3'
   133  00080C  2E                 	db	46
   134  00080D  32                 	db	50	;'2'
   135  00080E  66                 	db	102	;'f'
   136  00080F  00                 	db	0
   137  000810                     STR_3:
   138  000810  49                 	db	73	;'I'
   139  000811  4E                 	db	78	;'N'
   140  000812  46                 	db	70	;'F'
   141  000813  00                 	db	0
   142  000814                     STR_7:
   143  000814  4E                 	db	78	;'N'
   144  000815  41                 	db	65	;'A'
   145  000816  4E                 	db	78	;'N'
   146  000817  00                 	db	0
   147  000818                     STR_4:
   148  000818  69                 	db	105	;'i'
   149  000819  6E                 	db	110	;'n'
   150  00081A  66                 	db	102	;'f'
   151  00081B  00                 	db	0
   152  00081C                     STR_8:
   153  00081C  6E                 	db	110	;'n'
   154  00081D  61                 	db	97	;'a'
   155  00081E  6E                 	db	110	;'n'
   156  00081F  00                 	db	0
   157  000820                     STR_11:
   158  000820  6C                 	db	108	;'l'
   159  000821  66                 	db	102	;'f'
   160  000822  00                 	db	0
   161  000823  00                 	db	0	; dummy byte at the end
   162  0000                     
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166  003730                     __pcinit:
   167                           	callstack 0
   168  003730                     start_initialization:
   169                           	callstack 0
   170  003730                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Initialize objects allocated to BANK0 (20 bytes)
   174                           ; load TBLPTR registers with __pidataBANK0
   175  003730  0E58               	movlw	low __pidataBANK0
   176  003732  6EF6               	movwf	tblptrl,c
   177  003734  0E39               	movlw	high __pidataBANK0
   178  003736  6EF7               	movwf	tblptrh,c
   179  003738  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   180  00373A  6EF8               	movwf	tblptru,c
   181  00373C  EE00  F0CA         	lfsr	0,__pdataBANK0
   182  003740  EE10 F014          	lfsr	1,20
   183  003744                     copy_data0:
   184  003744  0009               	tblrd		*+
   185  003746  CFF5 FFEE          	movff	tablat,postinc0
   186  00374A  50E5               	movf	postdec1,w,c
   187  00374C  50E1               	movf	fsr1l,w,c
   188  00374E  E1FA               	bnz	copy_data0
   189                           
   190                           ; Clear objects allocated to BANK1 (80 bytes)
   191  003750  EE01  F000         	lfsr	0,__pbssBANK1
   192  003754  0E50               	movlw	80
   193  003756                     clear_0:
   194  003756  6AEE               	clrf	postinc0,c
   195  003758  06E8               	decf	wreg,f,c
   196  00375A  E1FD               	bnz	clear_0
   197                           
   198                           ; Clear objects allocated to BANK0 (10 bytes)
   199  00375C  EE00  F0DE         	lfsr	0,__pbssBANK0
   200  003760  0E0A               	movlw	10
   201  003762                     clear_1:
   202  003762  6AEE               	clrf	postinc0,c
   203  003764  06E8               	decf	wreg,f,c
   204  003766  E1FD               	bnz	clear_1
   205                           
   206                           ; Clear objects allocated to COMRAM (6 bytes)
   207  003768  6A5F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   208  00376A  6A5E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   209  00376C  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   210  00376E  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   211  003770  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   212  003772  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   213  003774                     end_of_initialization:
   214                           	callstack 0
   215  003774                     __end_of__initialization:
   216                           	callstack 0
   217  003774  0E00               	movlw	low (__Lmediumconst shr (0+16))
   218  003776  6EF8               	movwf	tblptru,c
   219  003778  0100               	movlb	0
   220  00377A  EF30  F016         	goto	_main	;jump to C main() function
   221                           
   222                           	psect	bssCOMRAM
   223  00005A                     __pbssCOMRAM:
   224                           	callstack 0
   225  00005A                     _width:
   226                           	callstack 0
   227  00005A                     	ds	2
   228  00005C                     _prec:
   229                           	callstack 0
   230  00005C                     	ds	2
   231  00005E                     _flags:
   232                           	callstack 0
   233  00005E                     	ds	2
   234                           
   235                           	psect	bssBANK0
   236  0000DE                     __pbssBANK0:
   237                           	callstack 0
   238  0000DE                     floorf@F527:
   239                           	callstack 0
   240  0000DE                     	ds	4
   241  0000E2                     ___fpclassifyf@F465:
   242                           	callstack 0
   243  0000E2                     	ds	4
   244  0000E6                     _nout:
   245                           	callstack 0
   246  0000E6                     	ds	2
   247                           
   248                           	psect	dataBANK0
   249  0000CA                     __pdataBANK0:
   250                           	callstack 0
   251  0000CA                     main@F3660:
   252                           	callstack 0
   253  0000CA                     	ds	20
   254                           
   255                           	psect	bssBANK1
   256  000100                     __pbssBANK1:
   257                           	callstack 0
   258  000100                     _dbuf:
   259                           	callstack 0
   260  000100                     	ds	80
   261                           
   262                           	psect	cstackBANK0
   263  000060                     __pcstackBANK0:
   264                           	callstack 0
   265  000060                     _efgtoa$922:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x0
   269  000060                     	ds	2
   270  000062                     _efgtoa$923:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x2
   274  000062                     	ds	2
   275  000064                     _efgtoa$928:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x4
   279  000064                     	ds	2
   280  000066                     _efgtoa$932:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x6
   284  000066                     	ds	2
   285  000068                     _efgtoa$933:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x8
   289  000068                     	ds	2
   290  00006A                     _efgtoa$934:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0xA
   294  00006A                     	ds	2
   295  00006C                     efgtoa@t:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0xC
   299  00006C                     	ds	2
   300  00006E                     efgtoa@pp:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0xE
   304  00006E                     	ds	2
   305  000070                     efgtoa@ne:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x10
   309  000070                     	ds	2
   310  000072                     efgtoa@m:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x12
   314  000072                     	ds	2
   315  000074                     efgtoa@ou:
   316                           	callstack 0
   317                           
   318                           ; 4 bytes @ 0x14
   319  000074                     	ds	4
   320  000078                     efgtoa@d:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x18
   324  000078                     	ds	2
   325  00007A                     efgtoa@sign:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x1A
   329  00007A                     	ds	2
   330  00007C                     efgtoa@p:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x1C
   334  00007C                     	ds	2
   335  00007E                     efgtoa@w:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x1E
   339  00007E                     	ds	2
   340  000080                     efgtoa@nmode:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x20
   344  000080                     	ds	1
   345  000081                     efgtoa@mode:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x21
   349  000081                     	ds	1
   350  000082                     efgtoa@h:
   351                           	callstack 0
   352                           
   353                           ; 4 bytes @ 0x22
   354  000082                     	ds	4
   355  000086                     efgtoa@l:
   356                           	callstack 0
   357                           
   358                           ; 4 bytes @ 0x26
   359  000086                     	ds	4
   360  00008A                     efgtoa@i:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x2A
   364  00008A                     	ds	2
   365  00008C                     efgtoa@g:
   366                           	callstack 0
   367                           
   368                           ; 4 bytes @ 0x2C
   369  00008C                     	ds	4
   370  000090                     efgtoa@e:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x30
   374  000090                     	ds	2
   375  000092                     efgtoa@n:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x32
   379  000092                     	ds	2
   380  000094                     efgtoa@u:
   381                           	callstack 0
   382                           
   383                           ; 4 bytes @ 0x34
   384  000094                     	ds	4
   385  000098                     ?_sprintf:
   386                           	callstack 0
   387  000098                     sprintf@s:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x38
   391  000098                     	ds	2
   392  00009A                     sprintf@fmt:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x3A
   396  00009A                     	ds	6
   397  0000A0                     sprintf@ap:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x40
   401  0000A0                     	ds	2
   402  0000A2                     sprintf@f:
   403                           	callstack 0
   404                           
   405                           ; 6 bytes @ 0x42
   406  0000A2                     	ds	6
   407  0000A8                     main@vetorDeTensao:
   408                           	callstack 0
   409                           
   410                           ; 20 bytes @ 0x48
   411  0000A8                     	ds	20
   412  0000BC                     main@V:
   413                           	callstack 0
   414                           
   415                           ; 8 bytes @ 0x5C
   416  0000BC                     	ds	8
   417  0000C4                     main@i:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x64
   421  0000C4                     	ds	2
   422  0000C6                     main@tensao:
   423                           	callstack 0
   424                           
   425                           ; 4 bytes @ 0x66
   426  0000C6                     	ds	4
   427                           
   428                           	psect	cstackCOMRAM
   429  000001                     __pcstackCOMRAM:
   430                           	callstack 0
   431  000001                     ?_strlen:
   432                           	callstack 0
   433  000001                     ?___fpclassifyf:
   434                           	callstack 0
   435  000001                     ?_isupper:
   436                           	callstack 0
   437  000001                     ?_isdigit:
   438                           	callstack 0
   439  000001                     ?_strncmp:
   440                           	callstack 0
   441  000001                     ?_isspace:
   442                           	callstack 0
   443  000001                     ?___wmul:
   444                           	callstack 0
   445  000001                     ?___awdiv:
   446                           	callstack 0
   447  000001                     ?___awmod:
   448                           	callstack 0
   449  000001                     ?___fladd:
   450                           	callstack 0
   451  000001                     ?___fldiv:
   452                           	callstack 0
   453  000001                     ?___flmul:
   454                           	callstack 0
   455  000001                     ?___flneg:
   456                           	callstack 0
   457  000001                     ?___fltol:
   458                           	callstack 0
   459  000001                     comando_lcd@comando:
   460                           	callstack 0
   461  000001                     dado_lcd@dado:
   462                           	callstack 0
   463  000001                     ___wmul@multiplier:
   464                           	callstack 0
   465  000001                     ___awdiv@dividend:
   466                           	callstack 0
   467  000001                     ___awmod@dividend:
   468                           	callstack 0
   469  000001                     isdigit@c:
   470                           	callstack 0
   471  000001                     isspace@c:
   472                           	callstack 0
   473  000001                     isupper@c:
   474                           	callstack 0
   475  000001                     fputc@c:
   476                           	callstack 0
   477  000001                     strcpy@dest:
   478                           	callstack 0
   479  000001                     strlen@s:
   480                           	callstack 0
   481  000001                     strncmp@_l:
   482                           	callstack 0
   483  000001                     ___fleq@ff1:
   484                           	callstack 0
   485  000001                     ___flneg@f1:
   486                           	callstack 0
   487  000001                     ___fltol@f1:
   488                           	callstack 0
   489  000001                     ___fladd@b:
   490                           	callstack 0
   491  000001                     ___fldiv@b:
   492                           	callstack 0
   493  000001                     ___flmul@b:
   494                           	callstack 0
   495  000001                     ___fpclassifyf@x:
   496                           	callstack 0
   497                           
   498                           ; 4 bytes @ 0x0
   499  000001                     	ds	2
   500  000003                     ??_isupper:
   501  000003                     ??_isdigit:
   502  000003                     ??_isspace:
   503  000003                     ??_comando_lcd:
   504  000003                     ??_dado_lcd:
   505  000003                     ___wmul@multiplicand:
   506                           	callstack 0
   507  000003                     ___awdiv@divisor:
   508                           	callstack 0
   509  000003                     ___awmod@divisor:
   510                           	callstack 0
   511  000003                     fputc@fp:
   512                           	callstack 0
   513  000003                     strcpy@src:
   514                           	callstack 0
   515  000003                     strlen@a:
   516                           	callstack 0
   517  000003                     strncmp@_r:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x2
   521  000003                     	ds	1
   522  000004                     
   523                           ; 1 bytes @ 0x3
   524  000004                     	ds	1
   525  000005                     ??_fputc:
   526  000005                     ??___fpclassifyf:
   527  000005                     ??_strcpy:
   528  000005                     ??___fltol:
   529  000005                     ___awdiv@counter:
   530                           	callstack 0
   531  000005                     ___awmod@counter:
   532                           	callstack 0
   533  000005                     imprime_lcd@frase:
   534                           	callstack 0
   535  000005                     ___wmul@product:
   536                           	callstack 0
   537  000005                     strncmp@n:
   538                           	callstack 0
   539  000005                     ___fleq@ff2:
   540                           	callstack 0
   541  000005                     ___fladd@a:
   542                           	callstack 0
   543  000005                     ___fldiv@a:
   544                           	callstack 0
   545  000005                     ___flmul@a:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0x4
   549  000005                     	ds	1
   550  000006                     ___awdiv@sign:
   551                           	callstack 0
   552  000006                     ___awmod@sign:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x5
   556  000006                     	ds	1
   557  000007                     ??_strncmp:
   558  000007                     ??_imprime_lcd:
   559  000007                     ?_tolower:
   560                           	callstack 0
   561  000007                     _isspace$1018:
   562                           	callstack 0
   563  000007                     ___awdiv@quotient:
   564                           	callstack 0
   565  000007                     strcpy@s:
   566                           	callstack 0
   567  000007                     tolower@c:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x6
   571  000007                     	ds	1
   572  000008                     ?_atoi:
   573                           	callstack 0
   574  000008                     atoi@s:
   575                           	callstack 0
   576  000008                     strncmp@l:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x7
   580  000008                     	ds	1
   581  000009                     ??___fladd:
   582  000009                     ??___fldiv:
   583  000009                     ??___flmul:
   584  000009                     ??_tolower:
   585  000009                     ??___fleq:
   586  000009                     ___fltol@sign1:
   587                           	callstack 0
   588  000009                     ___fpclassifyf@e:
   589                           	callstack 0
   590  000009                     strcpy@d:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x8
   594  000009                     	ds	1
   595  00000A                     ??_atoi:
   596  00000A                     ___fltol@exp1:
   597                           	callstack 0
   598  00000A                     imprime_lcd@tamanho:
   599                           	callstack 0
   600  00000A                     fputs@s:
   601                           	callstack 0
   602  00000A                     strncmp@r:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x9
   606  00000A                     	ds	1
   607  00000B                     ___fpclassifyf@u:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0xA
   611  00000B                     	ds	1
   612  00000C                     imprime_lcd@indice:
   613                           	callstack 0
   614  00000C                     fputs@fp:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0xB
   618  00000C                     	ds	1
   619  00000D                     ___fladd@signs:
   620                           	callstack 0
   621  00000D                     ___flmul@sign:
   622                           	callstack 0
   623  00000D                     _tolower$1082:
   624                           	callstack 0
   625  00000D                     ___fldiv@rem:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0xC
   629  00000D                     	ds	1
   630  00000E                     ___fladd@aexp:
   631                           	callstack 0
   632  00000E                     fputs@c:
   633                           	callstack 0
   634  00000E                     atoi@neg:
   635                           	callstack 0
   636  00000E                     ___flmul@grs:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0xD
   640  00000E                     	ds	1
   641  00000F                     ___fladd@bexp:
   642                           	callstack 0
   643  00000F                     fputs@i:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0xE
   647  00000F                     	ds	1
   648  000010                     ___fladd@grs:
   649                           	callstack 0
   650  000010                     _atoi$987:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0xF
   654  000010                     	ds	1
   655  000011                     ?_pad:
   656                           	callstack 0
   657  000011                     ___fldiv@sign:
   658                           	callstack 0
   659  000011                     pad@fp:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x10
   663  000011                     	ds	1
   664  000012                     ___flmul@aexp:
   665                           	callstack 0
   666  000012                     ___fldiv@new_exp:
   667                           	callstack 0
   668  000012                     _atoi$989:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x11
   672  000012                     	ds	1
   673  000013                     ___flmul@bexp:
   674                           	callstack 0
   675  000013                     pad@buf:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x12
   679  000013                     	ds	1
   680  000014                     _atoi$988:
   681                           	callstack 0
   682  000014                     ___fldiv@grs:
   683                           	callstack 0
   684  000014                     ___flmul@prod:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0x13
   688  000014                     	ds	1
   689  000015                     pad@p:
   690                           	callstack 0
   691  000015                     atoi@n:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x14
   695  000015                     	ds	2
   696  000017                     ??_pad:
   697                           
   698                           ; 1 bytes @ 0x16
   699  000017                     	ds	1
   700  000018                     ___fldiv@bexp:
   701                           	callstack 0
   702  000018                     ___flmul@temp:
   703                           	callstack 0
   704  000018                     pad@i:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x17
   708  000018                     	ds	1
   709  000019                     ___fldiv@aexp:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x18
   713  000019                     	ds	1
   714  00001A                     ?___flsub:
   715                           	callstack 0
   716  00001A                     ?_floorf:
   717                           	callstack 0
   718  00001A                     pad@w:
   719                           	callstack 0
   720  00001A                     ___flge@ff1:
   721                           	callstack 0
   722  00001A                     ___flsub@b:
   723                           	callstack 0
   724  00001A                     floorf@x:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x19
   728  00001A                     	ds	4
   729  00001E                     ??_floorf:
   730  00001E                     ___flge@ff2:
   731                           	callstack 0
   732  00001E                     ___flsub@a:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x1D
   736  00001E                     	ds	4
   737  000022                     ??___flge:
   738                           
   739                           ; 1 bytes @ 0x21
   740  000022                     	ds	2
   741  000024                     floorf@m:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x23
   745  000024                     	ds	2
   746  000026                     verificaTensao@tensao:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x25
   750  000026                     	ds	2
   751  000028                     floorf@e:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x27
   755  000028                     	ds	2
   756  00002A                     verificaTensao@V:
   757                           	callstack 0
   758  00002A                     floorf@u:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x29
   762  00002A                     	ds	2
   763  00002C                     ??_verificaTensao:
   764                           
   765                           ; 1 bytes @ 0x2B
   766  00002C                     	ds	2
   767  00002E                     ?_efgtoa:
   768                           	callstack 0
   769  00002E                     efgtoa@fp:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x2D
   773  00002E                     	ds	2
   774  000030                     efgtoa@f:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x2F
   778  000030                     	ds	4
   779  000034                     efgtoa@c:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x33
   783  000034                     	ds	1
   784  000035                     ??_efgtoa:
   785                           
   786                           ; 1 bytes @ 0x34
   787  000035                     	ds	5
   788  00003A                     ?_vfpfcnvrt:
   789                           	callstack 0
   790  00003A                     vfpfcnvrt@fp:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x39
   794  00003A                     	ds	2
   795  00003C                     vfpfcnvrt@fmt:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x3B
   799  00003C                     	ds	2
   800  00003E                     vfpfcnvrt@ap:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x3D
   804  00003E                     	ds	2
   805  000040                     ??_vfpfcnvrt:
   806                           
   807                           ; 1 bytes @ 0x3F
   808  000040                     	ds	4
   809  000044                     _vfpfcnvrt$948:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x43
   813  000044                     	ds	2
   814  000046                     _vfpfcnvrt$949:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x45
   818  000046                     	ds	2
   819  000048                     _vfpfcnvrt$953:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x47
   823  000048                     	ds	2
   824  00004A                     vfpfcnvrt@f:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0x49
   828  00004A                     	ds	4
   829  00004E                     vfpfcnvrt@ct:
   830                           	callstack 0
   831                           
   832                           ; 3 bytes @ 0x4D
   833  00004E                     	ds	3
   834  000051                     vfpfcnvrt@c:
   835                           	callstack 0
   836                           
   837                           ; 1 bytes @ 0x50
   838  000051                     	ds	1
   839  000052                     ?_vfprintf:
   840                           	callstack 0
   841  000052                     vfprintf@fp:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x51
   845  000052                     	ds	2
   846  000054                     vfprintf@fmt:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x53
   850  000054                     	ds	2
   851  000056                     vfprintf@ap:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x55
   855  000056                     	ds	2
   856  000058                     vfprintf@cfmt:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x57
   860  000058                     	ds	2
   861  00005A                     
   862                           ; 1 bytes @ 0x59
   863 ;;
   864 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   865 ;;
   866 ;; *************** function _main *****************
   867 ;; Defined at:
   868 ;;		line 48 in file "newmain.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  i               2  100[BANK0 ] int 
   873 ;;  vetorDeTensa   20   72[BANK0 ] float [5]
   874 ;;  V               8   92[BANK0 ] unsigned char [8]
   875 ;;  tensao          4  102[BANK0 ] float 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   885 ;;      Params:         0       0       0       0       0       0       0       0       0
   886 ;;      Locals:         0      34       0       0       0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0       0       0       0       0
   888 ;;      Totals:         0      34       0       0       0       0       0       0       0
   889 ;;Total ram usage:       34 bytes
   890 ;; Hardware stack levels required when called: 8
   891 ;; This function calls:
   892 ;;		___flge
   893 ;;		_comando_lcd
   894 ;;		_imprime_lcd
   895 ;;		_sprintf
   896 ;;		_verificaTensao
   897 ;; This function is called by:
   898 ;;		Startup code after reset
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text0
   903  002C60                     __ptext0:
   904                           	callstack 0
   905  002C60                     _main:
   906                           	callstack 23
   907  002C60                     
   908                           ;newmain.c: 49:     char V[8];;newmain.c: 50:     INTCONbits.GIE =1;
   909  002C60  8EF2               	bsf	242,7,c	;volatile
   910                           
   911                           ;newmain.c: 51:     INTCONbits.TMR0IE = 1;
   912  002C62  8AF2               	bsf	242,5,c	;volatile
   913  002C64                     
   914                           ;newmain.c: 53:     T0CON = 0B11000111;
   915  002C64  0EC7               	movlw	199
   916  002C66  6ED5               	movwf	213,c	;volatile
   917                           
   918                           ;newmain.c: 54:     TMR0L = 5;
   919  002C68  0E05               	movlw	5
   920  002C6A  6ED6               	movwf	214,c	;volatile
   921                           
   922                           ;newmain.c: 56:     TRISD = 0x0;
   923  002C6C  0E00               	movlw	0
   924  002C6E  6E95               	movwf	149,c	;volatile
   925                           
   926                           ;newmain.c: 57:     TRISE = 0;
   927  002C70  0E00               	movlw	0
   928  002C72  6E96               	movwf	150,c	;volatile
   929                           
   930                           ;newmain.c: 58:     ADCON1 = 15;
   931  002C74  0E0F               	movlw	15
   932  002C76  6EC1               	movwf	193,c	;volatile
   933                           
   934                           ;newmain.c: 59:     PORTD = 0;
   935  002C78  0E00               	movlw	0
   936  002C7A  6E83               	movwf	131,c	;volatile
   937  002C7C                     
   938                           ;newmain.c: 61:     INTCON3bits.INT1IE = 1;
   939  002C7C  86F0               	bsf	240,3,c	;volatile
   940  002C7E                     
   941                           ;newmain.c: 63:     INTCON3bits.INT1IF = 0;
   942  002C7E  90F0               	bcf	240,0,c	;volatile
   943  002C80                     
   944                           ;newmain.c: 65:     INTCON2bits.INTEDG1 = 1;
   945  002C80  8AF1               	bsf	241,5,c	;volatile
   946  002C82                     
   947                           ;newmain.c: 67:     comando_lcd(0b00111100);
   948  002C82  0E00               	movlw	0
   949  002C84  6E02               	movwf	(comando_lcd@comando+1)^0,c
   950  002C86  0E3C               	movlw	60
   951  002C88  6E01               	movwf	comando_lcd@comando^0,c
   952  002C8A  EC92  F01C         	call	_comando_lcd	;wreg free
   953  002C8E                     
   954                           ;newmain.c: 68:     comando_lcd(0b00001100);
   955  002C8E  0E00               	movlw	0
   956  002C90  6E02               	movwf	(comando_lcd@comando+1)^0,c
   957  002C92  0E0C               	movlw	12
   958  002C94  6E01               	movwf	comando_lcd@comando^0,c
   959  002C96  EC92  F01C         	call	_comando_lcd	;wreg free
   960  002C9A                     
   961                           ;newmain.c: 71:     float vetorDeTensao [] = {0, 1, 2, 3, 4};
   962  002C9A  EE20  F0CA         	lfsr	2,main@F3660
   963  002C9E  EE10  F0A8         	lfsr	1,main@vetorDeTensao
   964  002CA2  0E13               	movlw	19
   965  002CA4                     u4951:
   966  002CA4  CFDB FFE3          	movff	plusw2,plusw1
   967  002CA8  06E8               	decf	wreg,f,c
   968  002CAA  E2FC               	bc	u4951
   969  002CAC                     l3857:
   970                           
   971                           ;newmain.c: 73:         int i=0;
   972  002CAC  0E00               	movlw	0
   973  002CAE  0100               	movlb	0	; () banked
   974  002CB0  6FC5               	movwf	(main@i+1)& (0+255),b
   975  002CB2  0E00               	movlw	0
   976  002CB4  6FC4               	movwf	main@i& (0+255),b
   977  002CB6                     
   978                           ; BSR set to: 0
   979                           ;newmain.c: 74:         tensao = vetorDeTensao[i];
   980  002CB6  C0A8  F0C6         	movff	main@vetorDeTensao,main@tensao
   981  002CBA  C0A9  F0C7         	movff	main@vetorDeTensao+1,main@tensao+1
   982  002CBE  C0AA  F0C8         	movff	main@vetorDeTensao+2,main@tensao+2
   983  002CC2  C0AB  F0C9         	movff	main@vetorDeTensao+3,main@tensao+3
   984  002CC6                     
   985                           ; BSR set to: 0
   986                           ;newmain.c: 75:         i++;
   987  002CC6  4BC4               	infsnz	main@i& (0+255),f,b
   988  002CC8  2BC5               	incf	(main@i+1)& (0+255),f,b
   989  002CCA                     
   990                           ; BSR set to: 0
   991                           ;newmain.c: 76:         comando_lcd(128);
   992  002CCA  0E00               	movlw	0
   993  002CCC  6E02               	movwf	(comando_lcd@comando+1)^0,c
   994  002CCE  0E80               	movlw	128
   995  002CD0  6E01               	movwf	comando_lcd@comando^0,c
   996  002CD2  EC92  F01C         	call	_comando_lcd	;wreg free
   997  002CD6                     
   998                           ;newmain.c: 77:         imprime_lcd("Voltagem");
   999  002CD6  0E01               	movlw	low STR_1
  1000  002CD8  6E05               	movwf	imprime_lcd@frase^0,c
  1001  002CDA  0E08               	movlw	high STR_1
  1002  002CDC  6E06               	movwf	(imprime_lcd@frase+1)^0,c
  1003  002CDE  EC79  F01A         	call	_imprime_lcd	;wreg free
  1004  002CE2                     
  1005                           ;newmain.c: 78:         comando_lcd(192);
  1006  002CE2  0E00               	movlw	0
  1007  002CE4  6E02               	movwf	(comando_lcd@comando+1)^0,c
  1008  002CE6  0EC0               	movlw	192
  1009  002CE8  6E01               	movwf	comando_lcd@comando^0,c
  1010  002CEA  EC92  F01C         	call	_comando_lcd	;wreg free
  1011  002CEE                     
  1012                           ;newmain.c: 79:         sprintf(V, "%3.2f", tensao);
  1013  002CEE  0EBC               	movlw	low main@V
  1014  002CF0  0100               	movlb	0	; () banked
  1015  002CF2  6F98               	movwf	sprintf@s& (0+255),b
  1016  002CF4  0E00               	movlw	high main@V
  1017  002CF6  6F99               	movwf	(sprintf@s+1)& (0+255),b
  1018  002CF8  0E0A               	movlw	low STR_2
  1019  002CFA  6F9A               	movwf	sprintf@fmt& (0+255),b
  1020  002CFC  0E08               	movlw	high STR_2
  1021  002CFE  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  1022  002D00  C0C6  F09C         	movff	main@tensao,?_sprintf+4
  1023  002D04  C0C7  F09D         	movff	main@tensao+1,?_sprintf+5
  1024  002D08  C0C8  F09E         	movff	main@tensao+2,?_sprintf+6
  1025  002D0C  C0C9  F09F         	movff	main@tensao+3,?_sprintf+7
  1026  002D10  EC46  F01B         	call	_sprintf	;wreg free
  1027  002D14                     
  1028                           ;newmain.c: 80:         verificaTensao(tensao, V);
  1029  002D14  C0C6  F026         	movff	main@tensao,verificaTensao@tensao
  1030  002D18  C0C7  F027         	movff	main@tensao+1,verificaTensao@tensao+1
  1031  002D1C  C0C8  F028         	movff	main@tensao+2,verificaTensao@tensao+2
  1032  002D20  C0C9  F029         	movff	main@tensao+3,verificaTensao@tensao+3
  1033  002D24  0EBC               	movlw	low main@V
  1034  002D26  6E2A               	movwf	verificaTensao@V^0,c
  1035  002D28  0E00               	movlw	high main@V
  1036  002D2A  6E2B               	movwf	(verificaTensao@V+1)^0,c
  1037  002D2C  EC2E  F013         	call	_verificaTensao	;wreg free
  1038  002D30                     
  1039                           ;newmain.c: 81:         if(tensao>=5){
  1040  002D30  C0C6  F01A         	movff	main@tensao,___flge@ff1
  1041  002D34  C0C7  F01B         	movff	main@tensao+1,___flge@ff1+1
  1042  002D38  C0C8  F01C         	movff	main@tensao+2,___flge@ff1+2
  1043  002D3C  C0C9  F01D         	movff	main@tensao+3,___flge@ff1+3
  1044  002D40  0E00               	movlw	0
  1045  002D42  6E1E               	movwf	___flge@ff2^0,c
  1046  002D44  0E00               	movlw	0
  1047  002D46  6E1F               	movwf	(___flge@ff2+1)^0,c
  1048  002D48  0EA0               	movlw	160
  1049  002D4A  6E20               	movwf	(___flge@ff2+2)^0,c
  1050  002D4C  0E40               	movlw	64
  1051  002D4E  6E21               	movwf	(___flge@ff2+3)^0,c
  1052  002D50  EC38  F017         	call	___flge	;wreg free
  1053  002D54  A0D8               	btfss	status,0,c
  1054  002D56  EFAF  F016         	goto	u4961
  1055  002D5A  EFB1  F016         	goto	u4960
  1056  002D5E                     u4961:
  1057  002D5E  EF56  F016         	goto	l3857
  1058  002D62                     u4960:
  1059  002D62  EF56  F016         	goto	l3857
  1060  002D66  EF00  F000         	goto	start
  1061  002D6A                     __end_of_main:
  1062                           	callstack 0
  1063                           
  1064 ;; *************** function _verificaTensao *****************
  1065 ;; Defined at:
  1066 ;;		line 19 in file "newmain.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;  tensao          4   37[COMRAM] float 
  1069 ;;  V               2   41[COMRAM] PTR unsigned char 
  1070 ;;		 -> main@V(8), 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;		None
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1082 ;;      Params:         6       0       0       0       0       0       0       0       0
  1083 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1084 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1085 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1086 ;;Total ram usage:        7 bytes
  1087 ;; Hardware stack levels used: 1
  1088 ;; Hardware stack levels required when called: 2
  1089 ;; This function calls:
  1090 ;;		___flge
  1091 ;;		_imprime_lcd
  1092 ;;		_limpa_lcd
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text1
  1099  00265C                     __ptext1:
  1100                           	callstack 0
  1101  00265C                     _verificaTensao:
  1102                           	callstack 28
  1103  00265C                     
  1104                           ;newmain.c: 20:     if(tensao >=0 && tensao <1){
  1105  00265C  BE29               	btfsc	(verificaTensao@tensao+3)^0,7,c
  1106  00265E  EF33  F013         	goto	u4851
  1107  002662  EF35  F013         	goto	u4850
  1108  002666                     u4851:
  1109  002666  EF5C  F013         	goto	l3787
  1110  00266A                     u4850:
  1111  00266A  C026  F01A         	movff	verificaTensao@tensao,___flge@ff1
  1112  00266E  C027  F01B         	movff	verificaTensao@tensao+1,___flge@ff1+1
  1113  002672  C028  F01C         	movff	verificaTensao@tensao+2,___flge@ff1+2
  1114  002676  C029  F01D         	movff	verificaTensao@tensao+3,___flge@ff1+3
  1115  00267A  0E00               	movlw	0
  1116  00267C  6E1E               	movwf	___flge@ff2^0,c
  1117  00267E  0E00               	movlw	0
  1118  002680  6E1F               	movwf	(___flge@ff2+1)^0,c
  1119  002682  0E80               	movlw	128
  1120  002684  6E20               	movwf	(___flge@ff2+2)^0,c
  1121  002686  0E3F               	movlw	63
  1122  002688  6E21               	movwf	(___flge@ff2+3)^0,c
  1123  00268A  EC38  F017         	call	___flge	;wreg free
  1124  00268E  B0D8               	btfsc	status,0,c
  1125  002690  EF4C  F013         	goto	u4861
  1126  002694  EF4E  F013         	goto	u4860
  1127  002698                     u4861:
  1128  002698  EF5C  F013         	goto	l3787
  1129  00269C                     u4860:
  1130  00269C                     
  1131                           ;newmain.c: 21:         PORTDbits.RD0 = 0xFF;
  1132  00269C  8083               	bsf	131,0,c	;volatile
  1133  00269E                     
  1134                           ;newmain.c: 22:         imprime_lcd(V);
  1135  00269E  C02A  F005         	movff	verificaTensao@V,imprime_lcd@frase
  1136  0026A2  C02B  F006         	movff	verificaTensao@V+1,imprime_lcd@frase+1
  1137  0026A6  EC79  F01A         	call	_imprime_lcd	;wreg free
  1138  0026AA                     
  1139                           ;newmain.c: 23:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1140  0026AA  0E0D               	movlw	13
  1141  0026AC  6E2C               	movwf	??_verificaTensao^0,c
  1142  0026AE  0EFC               	movlw	252
  1143  0026B0                     u4977:
  1144  0026B0  2EE8               	decfsz	wreg,f,c
  1145  0026B2  D7FE               	bra	u4977
  1146  0026B4  2E2C               	decfsz	??_verificaTensao^0,f,c
  1147  0026B6  D7FC               	bra	u4977
  1148  0026B8                     l3787:
  1149                           
  1150                           ;newmain.c: 25:     if(tensao >= 1 && tensao < 2){
  1151  0026B8  C026  F01A         	movff	verificaTensao@tensao,___flge@ff1
  1152  0026BC  C027  F01B         	movff	verificaTensao@tensao+1,___flge@ff1+1
  1153  0026C0  C028  F01C         	movff	verificaTensao@tensao+2,___flge@ff1+2
  1154  0026C4  C029  F01D         	movff	verificaTensao@tensao+3,___flge@ff1+3
  1155  0026C8  0E00               	movlw	0
  1156  0026CA  6E1E               	movwf	___flge@ff2^0,c
  1157  0026CC  0E00               	movlw	0
  1158  0026CE  6E1F               	movwf	(___flge@ff2+1)^0,c
  1159  0026D0  0E80               	movlw	128
  1160  0026D2  6E20               	movwf	(___flge@ff2+2)^0,c
  1161  0026D4  0E3F               	movlw	63
  1162  0026D6  6E21               	movwf	(___flge@ff2+3)^0,c
  1163  0026D8  EC38  F017         	call	___flge	;wreg free
  1164  0026DC  A0D8               	btfss	status,0,c
  1165  0026DE  EF73  F013         	goto	u4871
  1166  0026E2  EF75  F013         	goto	u4870
  1167  0026E6                     u4871:
  1168  0026E6  EF9C  F013         	goto	l3797
  1169  0026EA                     u4870:
  1170  0026EA  C026  F01A         	movff	verificaTensao@tensao,___flge@ff1
  1171  0026EE  C027  F01B         	movff	verificaTensao@tensao+1,___flge@ff1+1
  1172  0026F2  C028  F01C         	movff	verificaTensao@tensao+2,___flge@ff1+2
  1173  0026F6  C029  F01D         	movff	verificaTensao@tensao+3,___flge@ff1+3
  1174  0026FA  0E00               	movlw	0
  1175  0026FC  6E1E               	movwf	___flge@ff2^0,c
  1176  0026FE  0E00               	movlw	0
  1177  002700  6E1F               	movwf	(___flge@ff2+1)^0,c
  1178  002702  0E00               	movlw	0
  1179  002704  6E20               	movwf	(___flge@ff2+2)^0,c
  1180  002706  0E40               	movlw	64
  1181  002708  6E21               	movwf	(___flge@ff2+3)^0,c
  1182  00270A  EC38  F017         	call	___flge	;wreg free
  1183  00270E  B0D8               	btfsc	status,0,c
  1184  002710  EF8C  F013         	goto	u4881
  1185  002714  EF8E  F013         	goto	u4880
  1186  002718                     u4881:
  1187  002718  EF9C  F013         	goto	l3797
  1188  00271C                     u4880:
  1189  00271C                     
  1190                           ;newmain.c: 26:         PORTDbits.RD1 = 0xFF;
  1191  00271C  8283               	bsf	131,1,c	;volatile
  1192  00271E                     
  1193                           ;newmain.c: 27:         imprime_lcd(V);
  1194  00271E  C02A  F005         	movff	verificaTensao@V,imprime_lcd@frase
  1195  002722  C02B  F006         	movff	verificaTensao@V+1,imprime_lcd@frase+1
  1196  002726  EC79  F01A         	call	_imprime_lcd	;wreg free
  1197  00272A                     
  1198                           ;newmain.c: 28:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1199  00272A  0E0D               	movlw	13
  1200  00272C  6E2C               	movwf	??_verificaTensao^0,c
  1201  00272E  0EFC               	movlw	252
  1202  002730                     u4987:
  1203  002730  2EE8               	decfsz	wreg,f,c
  1204  002732  D7FE               	bra	u4987
  1205  002734  2E2C               	decfsz	??_verificaTensao^0,f,c
  1206  002736  D7FC               	bra	u4987
  1207  002738                     l3797:
  1208                           
  1209                           ;newmain.c: 30:     if(tensao >= 2 && tensao < 3){
  1210  002738  C026  F01A         	movff	verificaTensao@tensao,___flge@ff1
  1211  00273C  C027  F01B         	movff	verificaTensao@tensao+1,___flge@ff1+1
  1212  002740  C028  F01C         	movff	verificaTensao@tensao+2,___flge@ff1+2
  1213  002744  C029  F01D         	movff	verificaTensao@tensao+3,___flge@ff1+3
  1214  002748  0E00               	movlw	0
  1215  00274A  6E1E               	movwf	___flge@ff2^0,c
  1216  00274C  0E00               	movlw	0
  1217  00274E  6E1F               	movwf	(___flge@ff2+1)^0,c
  1218  002750  0E00               	movlw	0
  1219  002752  6E20               	movwf	(___flge@ff2+2)^0,c
  1220  002754  0E40               	movlw	64
  1221  002756  6E21               	movwf	(___flge@ff2+3)^0,c
  1222  002758  EC38  F017         	call	___flge	;wreg free
  1223  00275C  A0D8               	btfss	status,0,c
  1224  00275E  EFB3  F013         	goto	u4891
  1225  002762  EFB5  F013         	goto	u4890
  1226  002766                     u4891:
  1227  002766  EFDC  F013         	goto	l3807
  1228  00276A                     u4890:
  1229  00276A  C026  F01A         	movff	verificaTensao@tensao,___flge@ff1
  1230  00276E  C027  F01B         	movff	verificaTensao@tensao+1,___flge@ff1+1
  1231  002772  C028  F01C         	movff	verificaTensao@tensao+2,___flge@ff1+2
  1232  002776  C029  F01D         	movff	verificaTensao@tensao+3,___flge@ff1+3
  1233  00277A  0E00               	movlw	0
  1234  00277C  6E1E               	movwf	___flge@ff2^0,c
  1235  00277E  0E00               	movlw	0
  1236  002780  6E1F               	movwf	(___flge@ff2+1)^0,c
  1237  002782  0E40               	movlw	64
  1238  002784  6E20               	movwf	(___flge@ff2+2)^0,c
  1239  002786  0E40               	movlw	64
  1240  002788  6E21               	movwf	(___flge@ff2+3)^0,c
  1241  00278A  EC38  F017         	call	___flge	;wreg free
  1242  00278E  B0D8               	btfsc	status,0,c
  1243  002790  EFCC  F013         	goto	u4901
  1244  002794  EFCE  F013         	goto	u4900
  1245  002798                     u4901:
  1246  002798  EFDC  F013         	goto	l3807
  1247  00279C                     u4900:
  1248  00279C                     
  1249                           ;newmain.c: 31:         PORTDbits.RD2 = 0xFF;
  1250  00279C  8483               	bsf	131,2,c	;volatile
  1251  00279E                     
  1252                           ;newmain.c: 32:         imprime_lcd(V);
  1253  00279E  C02A  F005         	movff	verificaTensao@V,imprime_lcd@frase
  1254  0027A2  C02B  F006         	movff	verificaTensao@V+1,imprime_lcd@frase+1
  1255  0027A6  EC79  F01A         	call	_imprime_lcd	;wreg free
  1256  0027AA                     
  1257                           ;newmain.c: 33:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1258  0027AA  0E0D               	movlw	13
  1259  0027AC  6E2C               	movwf	??_verificaTensao^0,c
  1260  0027AE  0EFC               	movlw	252
  1261  0027B0                     u4997:
  1262  0027B0  2EE8               	decfsz	wreg,f,c
  1263  0027B2  D7FE               	bra	u4997
  1264  0027B4  2E2C               	decfsz	??_verificaTensao^0,f,c
  1265  0027B6  D7FC               	bra	u4997
  1266  0027B8                     l3807:
  1267                           
  1268                           ;newmain.c: 35:     if(tensao >= 3 && tensao < 4){
  1269  0027B8  C026  F01A         	movff	verificaTensao@tensao,___flge@ff1
  1270  0027BC  C027  F01B         	movff	verificaTensao@tensao+1,___flge@ff1+1
  1271  0027C0  C028  F01C         	movff	verificaTensao@tensao+2,___flge@ff1+2
  1272  0027C4  C029  F01D         	movff	verificaTensao@tensao+3,___flge@ff1+3
  1273  0027C8  0E00               	movlw	0
  1274  0027CA  6E1E               	movwf	___flge@ff2^0,c
  1275  0027CC  0E00               	movlw	0
  1276  0027CE  6E1F               	movwf	(___flge@ff2+1)^0,c
  1277  0027D0  0E40               	movlw	64
  1278  0027D2  6E20               	movwf	(___flge@ff2+2)^0,c
  1279  0027D4  0E40               	movlw	64
  1280  0027D6  6E21               	movwf	(___flge@ff2+3)^0,c
  1281  0027D8  EC38  F017         	call	___flge	;wreg free
  1282  0027DC  A0D8               	btfss	status,0,c
  1283  0027DE  EFF3  F013         	goto	u4911
  1284  0027E2  EFF5  F013         	goto	u4910
  1285  0027E6                     u4911:
  1286  0027E6  EF1C  F014         	goto	l3817
  1287  0027EA                     u4910:
  1288  0027EA  C026  F01A         	movff	verificaTensao@tensao,___flge@ff1
  1289  0027EE  C027  F01B         	movff	verificaTensao@tensao+1,___flge@ff1+1
  1290  0027F2  C028  F01C         	movff	verificaTensao@tensao+2,___flge@ff1+2
  1291  0027F6  C029  F01D         	movff	verificaTensao@tensao+3,___flge@ff1+3
  1292  0027FA  0E00               	movlw	0
  1293  0027FC  6E1E               	movwf	___flge@ff2^0,c
  1294  0027FE  0E00               	movlw	0
  1295  002800  6E1F               	movwf	(___flge@ff2+1)^0,c
  1296  002802  0E80               	movlw	128
  1297  002804  6E20               	movwf	(___flge@ff2+2)^0,c
  1298  002806  0E40               	movlw	64
  1299  002808  6E21               	movwf	(___flge@ff2+3)^0,c
  1300  00280A  EC38  F017         	call	___flge	;wreg free
  1301  00280E  B0D8               	btfsc	status,0,c
  1302  002810  EF0C  F014         	goto	u4921
  1303  002814  EF0E  F014         	goto	u4920
  1304  002818                     u4921:
  1305  002818  EF1C  F014         	goto	l3817
  1306  00281C                     u4920:
  1307  00281C                     
  1308                           ;newmain.c: 36:         PORTDbits.RD3 = 0xFF;
  1309  00281C  8683               	bsf	131,3,c	;volatile
  1310  00281E                     
  1311                           ;newmain.c: 37:         imprime_lcd(V);
  1312  00281E  C02A  F005         	movff	verificaTensao@V,imprime_lcd@frase
  1313  002822  C02B  F006         	movff	verificaTensao@V+1,imprime_lcd@frase+1
  1314  002826  EC79  F01A         	call	_imprime_lcd	;wreg free
  1315  00282A                     
  1316                           ;newmain.c: 38:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1317  00282A  0E0D               	movlw	13
  1318  00282C  6E2C               	movwf	??_verificaTensao^0,c
  1319  00282E  0EFC               	movlw	252
  1320  002830                     u5007:
  1321  002830  2EE8               	decfsz	wreg,f,c
  1322  002832  D7FE               	bra	u5007
  1323  002834  2E2C               	decfsz	??_verificaTensao^0,f,c
  1324  002836  D7FC               	bra	u5007
  1325  002838                     l3817:
  1326                           
  1327                           ;newmain.c: 40:     if(tensao >= 4 && tensao <= 5){
  1328  002838  C026  F01A         	movff	verificaTensao@tensao,___flge@ff1
  1329  00283C  C027  F01B         	movff	verificaTensao@tensao+1,___flge@ff1+1
  1330  002840  C028  F01C         	movff	verificaTensao@tensao+2,___flge@ff1+2
  1331  002844  C029  F01D         	movff	verificaTensao@tensao+3,___flge@ff1+3
  1332  002848  0E00               	movlw	0
  1333  00284A  6E1E               	movwf	___flge@ff2^0,c
  1334  00284C  0E00               	movlw	0
  1335  00284E  6E1F               	movwf	(___flge@ff2+1)^0,c
  1336  002850  0E80               	movlw	128
  1337  002852  6E20               	movwf	(___flge@ff2+2)^0,c
  1338  002854  0E40               	movlw	64
  1339  002856  6E21               	movwf	(___flge@ff2+3)^0,c
  1340  002858  EC38  F017         	call	___flge	;wreg free
  1341  00285C  A0D8               	btfss	status,0,c
  1342  00285E  EF33  F014         	goto	u4931
  1343  002862  EF35  F014         	goto	u4930
  1344  002866                     u4931:
  1345  002866  EF5C  F014         	goto	l3827
  1346  00286A                     u4930:
  1347  00286A  0E00               	movlw	0
  1348  00286C  6E1A               	movwf	___flge@ff1^0,c
  1349  00286E  0E00               	movlw	0
  1350  002870  6E1B               	movwf	(___flge@ff1+1)^0,c
  1351  002872  0EA0               	movlw	160
  1352  002874  6E1C               	movwf	(___flge@ff1+2)^0,c
  1353  002876  0E40               	movlw	64
  1354  002878  6E1D               	movwf	(___flge@ff1+3)^0,c
  1355  00287A  C026  F01E         	movff	verificaTensao@tensao,___flge@ff2
  1356  00287E  C027  F01F         	movff	verificaTensao@tensao+1,___flge@ff2+1
  1357  002882  C028  F020         	movff	verificaTensao@tensao+2,___flge@ff2+2
  1358  002886  C029  F021         	movff	verificaTensao@tensao+3,___flge@ff2+3
  1359  00288A  EC38  F017         	call	___flge	;wreg free
  1360  00288E  A0D8               	btfss	status,0,c
  1361  002890  EF4C  F014         	goto	u4941
  1362  002894  EF4E  F014         	goto	u4940
  1363  002898                     u4941:
  1364  002898  EF5C  F014         	goto	l3827
  1365  00289C                     u4940:
  1366  00289C                     
  1367                           ;newmain.c: 41:         PORTDbits.RD4 = 0xFF;
  1368  00289C  8883               	bsf	131,4,c	;volatile
  1369  00289E                     
  1370                           ;newmain.c: 42:         imprime_lcd(V);
  1371  00289E  C02A  F005         	movff	verificaTensao@V,imprime_lcd@frase
  1372  0028A2  C02B  F006         	movff	verificaTensao@V+1,imprime_lcd@frase+1
  1373  0028A6  EC79  F01A         	call	_imprime_lcd	;wreg free
  1374  0028AA                     
  1375                           ;newmain.c: 43:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1376  0028AA  0E0D               	movlw	13
  1377  0028AC  6E2C               	movwf	??_verificaTensao^0,c
  1378  0028AE  0EFC               	movlw	252
  1379  0028B0                     u5017:
  1380  0028B0  2EE8               	decfsz	wreg,f,c
  1381  0028B2  D7FE               	bra	u5017
  1382  0028B4  2E2C               	decfsz	??_verificaTensao^0,f,c
  1383  0028B6  D7FC               	bra	u5017
  1384  0028B8                     l3827:
  1385                           
  1386                           ;newmain.c: 45:     limpa_lcd( );
  1387  0028B8  ECB6  F01C         	call	_limpa_lcd	;wreg free
  1388  0028BC  0012               	return		;funcret
  1389  0028BE                     __end_of_verificaTensao:
  1390                           	callstack 0
  1391                           
  1392 ;; *************** function _limpa_lcd *****************
  1393 ;; Defined at:
  1394 ;;		line 26 in file "./lcd.intermed.h"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1408 ;;      Params:         0       0       0       0       0       0       0       0       0
  1409 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1411 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1412 ;;Total ram usage:        0 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; Hardware stack levels required when called: 1
  1415 ;; This function calls:
  1416 ;;		_comando_lcd
  1417 ;; This function is called by:
  1418 ;;		_verificaTensao
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text2
  1423  00396C                     __ptext2:
  1424                           	callstack 0
  1425  00396C                     _limpa_lcd:
  1426                           	callstack 28
  1427  00396C                     
  1428                           ;./lcd.intermed.h: 28:     comando_lcd(1);
  1429  00396C  0E00               	movlw	0
  1430  00396E  6E02               	movwf	(comando_lcd@comando+1)^0,c
  1431  003970  0E01               	movlw	1
  1432  003972  6E01               	movwf	comando_lcd@comando^0,c
  1433  003974  EC92  F01C         	call	_comando_lcd	;wreg free
  1434  003978  0012               	return		;funcret
  1435  00397A                     __end_of_limpa_lcd:
  1436                           	callstack 0
  1437                           
  1438 ;; *************** function _comando_lcd *****************
  1439 ;; Defined at:
  1440 ;;		line 7 in file "./lcd.intermed.h"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  comando         2    0[COMRAM] unsigned int 
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1454 ;;      Params:         2       0       0       0       0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1456 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1457 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1458 ;;Total ram usage:        3 bytes
  1459 ;; Hardware stack levels used: 1
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_limpa_lcd
  1464 ;;		_main
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text3
  1469  003924                     __ptext3:
  1470                           	callstack 0
  1471  003924                     _comando_lcd:
  1472                           	callstack 28
  1473  003924                     
  1474                           ;./lcd.intermed.h: 7: void comando_lcd(unsigned int comando);./lcd.intermed.h: 8: {;./lc
      +                          d.intermed.h: 9:     PORTEbits.RE2 = 0;
  1475  003924  9484               	bcf	132,2,c	;volatile
  1476                           
  1477                           ;./lcd.intermed.h: 10:     PORTEbits.RE1 = 1;
  1478  003926  8284               	bsf	132,1,c	;volatile
  1479                           
  1480                           ;./lcd.intermed.h: 11:     PORTD = comando;
  1481  003928  C001  FF83         	movff	comando_lcd@comando,3971	;volatile
  1482  00392C                     
  1483                           ;./lcd.intermed.h: 12:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1484  00392C  0E03               	movlw	3
  1485  00392E  6E03               	movwf	??_comando_lcd^0,c
  1486  003930  0E98               	movlw	152
  1487  003932                     u5027:
  1488  003932  2EE8               	decfsz	wreg,f,c
  1489  003934  D7FE               	bra	u5027
  1490  003936  2E03               	decfsz	??_comando_lcd^0,f,c
  1491  003938  D7FC               	bra	u5027
  1492  00393A                     
  1493                           ;./lcd.intermed.h: 13:     PORTEbits.RE1 = 0;
  1494  00393A  9284               	bcf	132,1,c	;volatile
  1495  00393C  0012               	return		;funcret
  1496  00393E                     __end_of_comando_lcd:
  1497                           	callstack 0
  1498                           
  1499 ;; *************** function _imprime_lcd *****************
  1500 ;; Defined at:
  1501 ;;		line 31 in file "./lcd.intermed.h"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;  frase           2    4[COMRAM] PTR unsigned char 
  1504 ;;		 -> main@V(8), STR_1(9), 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  indice          2   11[COMRAM] int 
  1507 ;;  tamanho         2    9[COMRAM] int 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1517 ;;      Params:         2       0       0       0       0       0       0       0       0
  1518 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1519 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1520 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1521 ;;Total ram usage:        9 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; Hardware stack levels required when called: 1
  1524 ;; This function calls:
  1525 ;;		_dado_lcd
  1526 ;;		_strlen
  1527 ;; This function is called by:
  1528 ;;		_verificaTensao
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text4
  1534  0034F2                     __ptext4:
  1535                           	callstack 0
  1536  0034F2                     _imprime_lcd:
  1537                           	callstack 28
  1538  0034F2                     
  1539                           ;./lcd.intermed.h: 31: void imprime_lcd(char frase[]);./lcd.intermed.h: 32: {;./lcd.inte
      +                          rmed.h: 33: int indice = 0;
  1540  0034F2  0E00               	movlw	0
  1541  0034F4  6E0D               	movwf	(imprime_lcd@indice+1)^0,c
  1542  0034F6  0E00               	movlw	0
  1543  0034F8  6E0C               	movwf	imprime_lcd@indice^0,c
  1544  0034FA                     
  1545                           ;./lcd.intermed.h: 34: int tamanho = strlen(frase);
  1546  0034FA  C005  F001         	movff	imprime_lcd@frase,strlen@s
  1547  0034FE  C006  F002         	movff	imprime_lcd@frase+1,strlen@s+1
  1548  003502  ECBF  F01B         	call	_strlen	;wreg free
  1549  003506  C001  F00A         	movff	?_strlen,imprime_lcd@tamanho
  1550  00350A  C002  F00B         	movff	?_strlen+1,imprime_lcd@tamanho+1
  1551                           
  1552                           ;./lcd.intermed.h: 35: while(indice<tamanho)
  1553  00350E  EFA7  F01A         	goto	l3767
  1554  003512                     l3763:
  1555                           
  1556                           ;./lcd.intermed.h: 36:     {;./lcd.intermed.h: 37: dado_lcd(frase[indice]);
  1557  003512  500C               	movf	imprime_lcd@indice^0,w,c
  1558  003514  2405               	addwf	imprime_lcd@frase^0,w,c
  1559  003516  6E07               	movwf	??_imprime_lcd^0,c
  1560  003518  500D               	movf	(imprime_lcd@indice+1)^0,w,c
  1561  00351A  2006               	addwfc	(imprime_lcd@frase+1)^0,w,c
  1562  00351C  6E08               	movwf	(??_imprime_lcd+1)^0,c
  1563  00351E  C007  FFF6         	movff	??_imprime_lcd,tblptrl
  1564  003522  C008  FFF7         	movff	??_imprime_lcd+1,tblptrh
  1565  003526  6AF8               	clrf	tblptru,c
  1566  003528  0E07               	movlw	(high __ramtop+-1)
  1567  00352A  64F7               	cpfsgt	tblptrh,c
  1568  00352C  D003               	bra	u4827
  1569  00352E  0008               	tblrd		*
  1570  003530  50F5               	movf	tablat,w,c
  1571  003532  D005               	bra	u4820
  1572  003534                     u4827:
  1573  003534  CFF6 FFE1          	movff	tblptrl,fsr1l
  1574  003538  CFF7 FFE2          	movff	tblptrh,fsr1h
  1575  00353C  50E7               	movf	indf1,w,c
  1576  00353E                     u4820:
  1577  00353E  6E09               	movwf	(??_imprime_lcd+2)^0,c
  1578  003540  5009               	movf	(??_imprime_lcd+2)^0,w,c
  1579  003542  6E01               	movwf	dado_lcd@dado^0,c
  1580  003544  6A02               	clrf	(dado_lcd@dado+1)^0,c
  1581  003546  EC9F  F01C         	call	_dado_lcd	;wreg free
  1582  00354A                     
  1583                           ;./lcd.intermed.h: 38: indice++;
  1584  00354A  4A0C               	infsnz	imprime_lcd@indice^0,f,c
  1585  00354C  2A0D               	incf	(imprime_lcd@indice+1)^0,f,c
  1586  00354E                     l3767:
  1587                           
  1588                           ;./lcd.intermed.h: 35: while(indice<tamanho)
  1589  00354E  500A               	movf	imprime_lcd@tamanho^0,w,c
  1590  003550  5C0C               	subwf	imprime_lcd@indice^0,w,c
  1591  003552  500D               	movf	(imprime_lcd@indice+1)^0,w,c
  1592  003554  0A80               	xorlw	128
  1593  003556  6E07               	movwf	??_imprime_lcd^0,c
  1594  003558  500B               	movf	(imprime_lcd@tamanho+1)^0,w,c
  1595  00355A  0A80               	xorlw	128
  1596  00355C  5807               	subwfb	??_imprime_lcd^0,w,c
  1597  00355E  A0D8               	btfss	status,0,c
  1598  003560  EFB4  F01A         	goto	u4831
  1599  003564  EFB6  F01A         	goto	u4830
  1600  003568                     u4831:
  1601  003568  EF89  F01A         	goto	l3763
  1602  00356C                     u4830:
  1603  00356C  0012               	return		;funcret
  1604  00356E                     __end_of_imprime_lcd:
  1605                           	callstack 0
  1606                           
  1607 ;; *************** function _dado_lcd *****************
  1608 ;; Defined at:
  1609 ;;		line 16 in file "./lcd.intermed.h"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  dado            2    0[COMRAM] unsigned int 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1623 ;;      Params:         2       0       0       0       0       0       0       0       0
  1624 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1625 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1626 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1627 ;;Total ram usage:        3 bytes
  1628 ;; Hardware stack levels used: 1
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_imprime_lcd
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text5
  1637  00393E                     __ptext5:
  1638                           	callstack 0
  1639  00393E                     _dado_lcd:
  1640                           	callstack 28
  1641  00393E                     
  1642                           ;./lcd.intermed.h: 16: void dado_lcd(unsigned int dado);./lcd.intermed.h: 17: {;./lcd.in
      +                          termed.h: 18:     PORTEbits.RE2 = 1;
  1643  00393E  8484               	bsf	132,2,c	;volatile
  1644                           
  1645                           ;./lcd.intermed.h: 19:     PORTEbits.RE1 = 1;
  1646  003940  8284               	bsf	132,1,c	;volatile
  1647                           
  1648                           ;./lcd.intermed.h: 20:     PORTD = dado;
  1649  003942  C001  FF83         	movff	dado_lcd@dado,3971	;volatile
  1650  003946                     
  1651                           ;./lcd.intermed.h: 21:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1652  003946  0E03               	movlw	3
  1653  003948  6E03               	movwf	??_dado_lcd^0,c
  1654  00394A  0E98               	movlw	152
  1655  00394C                     u5037:
  1656  00394C  2EE8               	decfsz	wreg,f,c
  1657  00394E  D7FE               	bra	u5037
  1658  003950  2E03               	decfsz	??_dado_lcd^0,f,c
  1659  003952  D7FC               	bra	u5037
  1660  003954                     
  1661                           ;./lcd.intermed.h: 22:     PORTEbits.RE1 = 0;
  1662  003954  9284               	bcf	132,1,c	;volatile
  1663  003956  0012               	return		;funcret
  1664  003958                     __end_of_dado_lcd:
  1665                           	callstack 0
  1666                           
  1667 ;; *************** function _sprintf *****************
  1668 ;; Defined at:
  1669 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  s               2   56[BANK0 ] PTR unsigned char 
  1672 ;;		 -> main@V(8), 
  1673 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1674 ;;		 -> STR_2(6), 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  f               6   66[BANK0 ] struct _IO_FILE
  1677 ;;  ap              2   64[BANK0 ] PTR void [1]
  1678 ;;		 -> ?_sprintf(2), 
  1679 ;;  ret             2    0        int 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  2   56[BANK0 ] int 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1689 ;;      Params:         0       8       0       0       0       0       0       0       0
  1690 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1692 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1693 ;;Total ram usage:       16 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 7
  1696 ;; This function calls:
  1697 ;;		_vfprintf
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text6
  1704  00368C                     __ptext6:
  1705                           	callstack 0
  1706  00368C                     _sprintf:
  1707                           	callstack 23
  1708  00368C  0E9C               	movlw	low (?_sprintf+4)
  1709  00368E  0100               	movlb	0	; () banked
  1710  003690  6FA0               	movwf	sprintf@ap& (0+255),b
  1711  003692  0E00               	movlw	high (?_sprintf+4)
  1712  003694  6FA1               	movwf	(sprintf@ap+1)& (0+255),b
  1713  003696  C098  F0A2         	movff	sprintf@s,sprintf@f
  1714  00369A  C099  F0A3         	movff	sprintf@s+1,sprintf@f+1
  1715  00369E                     
  1716                           ; BSR set to: 0
  1717  00369E  0E00               	movlw	0
  1718  0036A0  6FA5               	movwf	(sprintf@f+3)& (0+255),b
  1719  0036A2  0E00               	movlw	0
  1720  0036A4  6FA4               	movwf	(sprintf@f+2)& (0+255),b
  1721  0036A6                     
  1722                           ; BSR set to: 0
  1723  0036A6  0E00               	movlw	0
  1724  0036A8  6FA7               	movwf	(sprintf@f+5)& (0+255),b
  1725  0036AA  0E00               	movlw	0
  1726  0036AC  6FA6               	movwf	(sprintf@f+4)& (0+255),b
  1727  0036AE                     
  1728                           ; BSR set to: 0
  1729  0036AE  0EA2               	movlw	low sprintf@f
  1730  0036B0  6E52               	movwf	vfprintf@fp^0,c
  1731  0036B2  0E00               	movlw	high sprintf@f
  1732  0036B4  6E53               	movwf	(vfprintf@fp+1)^0,c
  1733  0036B6  C09A  F054         	movff	sprintf@fmt,vfprintf@fmt
  1734  0036BA  C09B  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1735  0036BE  0EA0               	movlw	low sprintf@ap
  1736  0036C0  6E56               	movwf	vfprintf@ap^0,c
  1737  0036C2  0E00               	movlw	high sprintf@ap
  1738  0036C4  6E57               	movwf	(vfprintf@ap+1)^0,c
  1739  0036C6  ECB7  F01A         	call	_vfprintf	;wreg free
  1740  0036CA  0100               	movlb	0	; () banked
  1741  0036CC  51A4               	movf	(sprintf@f+2)& (0+255),w,b
  1742  0036CE  2598               	addwf	sprintf@s& (0+255),w,b
  1743  0036D0  6ED9               	movwf	fsr2l,c
  1744  0036D2  51A5               	movf	(sprintf@f+3)& (0+255),w,b
  1745  0036D4  2199               	addwfc	(sprintf@s+1)& (0+255),w,b
  1746  0036D6  6EDA               	movwf	fsr2h,c
  1747  0036D8  0E00               	movlw	0
  1748  0036DA  6EDF               	movwf	indf2,c
  1749  0036DC                     
  1750                           ; BSR set to: 0
  1751  0036DC  0012               	return		;funcret
  1752  0036DE                     __end_of_sprintf:
  1753                           	callstack 0
  1754                           
  1755 ;; *************** function _vfprintf *****************
  1756 ;; Defined at:
  1757 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  1760 ;;		 -> sprintf@f(6), 
  1761 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  1762 ;;		 -> STR_2(6), 
  1763 ;;  ap              2   85[COMRAM] PTR PTR void 
  1764 ;;		 -> sprintf@ap(2), 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  1767 ;;		 -> STR_2(6), 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  2   81[COMRAM] int 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1777 ;;      Params:         6       0       0       0       0       0       0       0       0
  1778 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1780 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1781 ;;Total ram usage:        8 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 6
  1784 ;; This function calls:
  1785 ;;		_vfpfcnvrt
  1786 ;; This function is called by:
  1787 ;;		_sprintf
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text7
  1792  00356E                     __ptext7:
  1793                           	callstack 0
  1794  00356E                     _vfprintf:
  1795                           	callstack 23
  1796  00356E                     
  1797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1798  00356E  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  1799  003572  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1800  003576                     
  1801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1802  003576  0E00               	movlw	0
  1803  003578  0100               	movlb	0	; () banked
  1804  00357A  6FE7               	movwf	(_nout+1)& (0+255),b
  1805  00357C  0E00               	movlw	0
  1806  00357E  6FE6               	movwf	_nout& (0+255),b
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1809  003580  EFD5  F01A         	goto	l3775
  1810  003584                     l3773:
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1814  003584  C052  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1815  003588  C053  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1816  00358C  0E58               	movlw	low vfprintf@cfmt
  1817  00358E  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1818  003590  0E00               	movlw	high vfprintf@cfmt
  1819  003592  6E3D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1820  003594  C056  F03E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1821  003598  C057  F03F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1822  00359C  EC3F  F00A         	call	_vfpfcnvrt	;wreg free
  1823  0035A0  503A               	movf	?_vfpfcnvrt^0,w,c
  1824  0035A2  0100               	movlb	0	; () banked
  1825  0035A4  27E6               	addwf	_nout& (0+255),f,b
  1826  0035A6  503B               	movf	(?_vfpfcnvrt+1)^0,w,c
  1827  0035A8  23E7               	addwfc	(_nout+1)& (0+255),f,b
  1828  0035AA                     l3775:
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1832  0035AA  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  1833  0035AE  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1834  0035B2                     	if	0	;tblptru may be non-zero
  1835  0035B2                     	endif
  1836  0035B2                     	if	0	;tblptru may be non-zero
  1837  0035B2                     	endif
  1838  0035B2  0008               	tblrd		*
  1839  0035B4  50F5               	movf	tablat,w,c
  1840  0035B6  0900               	iorlw	0
  1841  0035B8  A4D8               	btfss	status,2,c
  1842  0035BA  EFE1  F01A         	goto	u4841
  1843  0035BE  EFE3  F01A         	goto	u4840
  1844  0035C2                     u4841:
  1845  0035C2  EFC2  F01A         	goto	l3773
  1846  0035C6                     u4840:
  1847  0035C6                     
  1848                           ; BSR set to: 0
  1849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1850  0035C6  C0E6  F052         	movff	_nout,?_vfprintf
  1851  0035CA  C0E7  F053         	movff	_nout+1,?_vfprintf+1
  1852  0035CE                     
  1853                           ; BSR set to: 0
  1854  0035CE  0012               	return		;funcret
  1855  0035D0                     __end_of_vfprintf:
  1856                           	callstack 0
  1857                           
  1858 ;; *************** function _vfpfcnvrt *****************
  1859 ;; Defined at:
  1860 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  1863 ;;		 -> sprintf@f(6), 
  1864 ;;  fmt             2   59[COMRAM] PTR PTR unsigned char 
  1865 ;;		 -> vfprintf@cfmt(2), 
  1866 ;;  ap              2   61[COMRAM] PTR PTR void 
  1867 ;;		 -> sprintf@ap(2), 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  llu             8    0        unsigned long long 
  1870 ;;  ll              8    0        long long 
  1871 ;;  f               4   73[COMRAM] long long 
  1872 ;;  ct              3   77[COMRAM] unsigned char [3]
  1873 ;;  vp              3    0        PTR void 
  1874 ;;  cp              3    0        PTR unsigned char 
  1875 ;;  i               2    0        int 
  1876 ;;  done            2    0        int 
  1877 ;;  c               1   80[COMRAM] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  2   57[COMRAM] int 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1887 ;;      Params:         6       0       0       0       0       0       0       0       0
  1888 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1889 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1890 ;;      Totals:        24       0       0       0       0       0       0       0       0
  1891 ;;Total ram usage:       24 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; Hardware stack levels required when called: 5
  1894 ;; This function calls:
  1895 ;;		_atoi
  1896 ;;		_efgtoa
  1897 ;;		_fputc
  1898 ;;		_isdigit
  1899 ;;		_isupper
  1900 ;;		_strncmp
  1901 ;;		_tolower
  1902 ;; This function is called by:
  1903 ;;		_vfprintf
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text8
  1908  00147E                     __ptext8:
  1909                           	callstack 0
  1910  00147E                     _vfpfcnvrt:
  1911                           	callstack 23
  1912  00147E                     
  1913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1914  00147E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1915  001482  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1916  001486  CFDE FFF6          	movff	postinc2,tblptrl
  1917  00148A  CFDD FFF7          	movff	postdec2,tblptrh
  1918  00148E                     	if	0	;tblptru may be non-zero
  1919  00148E                     	endif
  1920  00148E                     	if	0	;tblptru may be non-zero
  1921  00148E                     	endif
  1922  00148E  0008               	tblrd		*
  1923  001490  50F5               	movf	tablat,w,c
  1924  001492  0A25               	xorlw	37
  1925  001494  A4D8               	btfss	status,2,c
  1926  001496  EF4F  F00A         	goto	u4631
  1927  00149A  EF51  F00A         	goto	u4630
  1928  00149E                     u4631:
  1929  00149E  EFD0  F00C         	goto	l3749
  1930  0014A2                     u4630:
  1931  0014A2                     
  1932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1933  0014A2  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1934  0014A6  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1935  0014AA  2ADE               	incf	postinc2,f,c
  1936  0014AC  0E00               	movlw	0
  1937  0014AE  22DD               	addwfc	postdec2,f,c
  1938  0014B0                     
  1939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1940  0014B0  0E00               	movlw	0
  1941  0014B2  6E5B               	movwf	(_width+1)^0,c
  1942  0014B4  0E00               	movlw	0
  1943  0014B6  6E5A               	movwf	_width^0,c
  1944  0014B8  C05A  F05E         	movff	_width,_flags
  1945  0014BC  C05B  F05F         	movff	_width+1,_flags+1
  1946  0014C0                     
  1947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1948  0014C0  685C               	setf	_prec^0,c
  1949  0014C2  685D               	setf	(_prec+1)^0,c
  1950  0014C4                     
  1951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1952  0014C4  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1953  0014C8  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1954  0014CC  CFDE FFF6          	movff	postinc2,tblptrl
  1955  0014D0  CFDD FFF7          	movff	postdec2,tblptrh
  1956  0014D4                     	if	0	;tblptru may be non-zero
  1957  0014D4                     	endif
  1958  0014D4                     	if	0	;tblptru may be non-zero
  1959  0014D4                     	endif
  1960  0014D4  0008               	tblrd		*
  1961  0014D6  50F5               	movf	tablat,w,c
  1962  0014D8  0A2A               	xorlw	42
  1963  0014DA  A4D8               	btfss	status,2,c
  1964  0014DC  EF72  F00A         	goto	u4641
  1965  0014E0  EF74  F00A         	goto	u4640
  1966  0014E4                     u4641:
  1967  0014E4  EF9D  F00A         	goto	l3665
  1968  0014E8                     u4640:
  1969  0014E8                     
  1970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1971  0014E8  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1972  0014EC  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1973  0014F0  2ADE               	incf	postinc2,f,c
  1974  0014F2  0E00               	movlw	0
  1975  0014F4  22DD               	addwfc	postdec2,f,c
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1978  0014F6  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1979  0014FA  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1980  0014FE  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1981  001502  0E02               	movlw	2
  1982  001504  26DE               	addwf	postinc2,f,c
  1983  001506  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1984  00150A  0E00               	movlw	0
  1985  00150C  22DD               	addwfc	postdec2,f,c
  1986  00150E  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1987  001512  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1988  001516  CFDE F05A          	movff	postinc2,_width
  1989  00151A  CFDD F05B          	movff	postdec2,_width+1
  1990  00151E                     
  1991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1992  00151E  BE5B               	btfsc	(_width+1)^0,7,c
  1993  001520  EF96  F00A         	goto	u4650
  1994  001524  EF94  F00A         	goto	u4651
  1995  001528                     u4651:
  1996  001528  EFE0  F00A         	goto	l3675
  1997  00152C                     u4650:
  1998  00152C                     
  1999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2000  00152C  805E               	bsf	_flags^0,0,c
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2003  00152E  6C5A               	negf	_width^0,c
  2004  001530  1E5B               	comf	(_width+1)^0,f,c
  2005  001532  B0D8               	btfsc	status,0,c
  2006  001534  2A5B               	incf	(_width+1)^0,f,c
  2007  001536  EFE0  F00A         	goto	l3675
  2008  00153A                     l3665:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2011  00153A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2012  00153E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2013  001542  CFDE F008          	movff	postinc2,atoi@s
  2014  001546  CFDD F009          	movff	postdec2,atoi@s+1
  2015  00154A  EC68  F015         	call	_atoi	;wreg free
  2016  00154E  C008  F05A         	movff	?_atoi,_width
  2017  001552  C009  F05B         	movff	?_atoi+1,_width+1
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2020  001556  EFB4  F00A         	goto	l3669
  2021  00155A                     l3667:
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2024  00155A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2025  00155E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2026  001562  2ADE               	incf	postinc2,f,c
  2027  001564  0E00               	movlw	0
  2028  001566  22DD               	addwfc	postdec2,f,c
  2029  001568                     l3669:
  2030  001568  0ED0               	movlw	208
  2031  00156A  6E40               	movwf	??_vfpfcnvrt^0,c
  2032  00156C  0EFF               	movlw	255
  2033  00156E  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  2034  001570  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2035  001574  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2036  001578  CFDE FFF6          	movff	postinc2,tblptrl
  2037  00157C  CFDD FFF7          	movff	postdec2,tblptrh
  2038  001580                     	if	0	;tblptru may be non-zero
  2039  001580                     	endif
  2040  001580                     	if	0	;tblptru may be non-zero
  2041  001580                     	endif
  2042  001580  0008               	tblrd		*
  2043  001582  50F5               	movf	tablat,w,c
  2044  001584  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  2045  001586  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  2046  001588  5040               	movf	??_vfpfcnvrt^0,w,c
  2047  00158A  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2048  00158C  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  2049  00158E  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2050  001590  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  2051  001592  E10A               	bnz	u4660
  2052  001594  0E0A               	movlw	10
  2053  001596  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2054  001598  A0D8               	btfss	status,0,c
  2055  00159A  EFD1  F00A         	goto	u4661
  2056  00159E  EFD4  F00A         	goto	u4660
  2057  0015A2                     u4661:
  2058  0015A2  0E01               	movlw	1
  2059  0015A4  EFD5  F00A         	goto	u4670
  2060  0015A8                     u4660:
  2061  0015A8  0E00               	movlw	0
  2062  0015AA                     u4670:
  2063  0015AA  6E44               	movwf	_vfpfcnvrt$948^0,c
  2064  0015AC  6A45               	clrf	(_vfpfcnvrt$948+1)^0,c
  2065  0015AE  5044               	movf	_vfpfcnvrt$948^0,w,c
  2066  0015B0  1045               	iorwf	(_vfpfcnvrt$948+1)^0,w,c
  2067  0015B2  A4D8               	btfss	status,2,c
  2068  0015B4  EFDE  F00A         	goto	u4681
  2069  0015B8  EFE0  F00A         	goto	u4680
  2070  0015BC                     u4681:
  2071  0015BC  EFAD  F00A         	goto	l3667
  2072  0015C0                     u4680:
  2073  0015C0                     l3675:
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2076  0015C0  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2077  0015C4  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2078  0015C8  CFDE FFF6          	movff	postinc2,tblptrl
  2079  0015CC  CFDD FFF7          	movff	postdec2,tblptrh
  2080  0015D0                     	if	0	;tblptru may be non-zero
  2081  0015D0                     	endif
  2082  0015D0                     	if	0	;tblptru may be non-zero
  2083  0015D0                     	endif
  2084  0015D0  0008               	tblrd		*
  2085  0015D2  50F5               	movf	tablat,w,c
  2086  0015D4  0A2E               	xorlw	46
  2087  0015D6  A4D8               	btfss	status,2,c
  2088  0015D8  EFF0  F00A         	goto	u4691
  2089  0015DC  EFF2  F00A         	goto	u4690
  2090  0015E0                     u4691:
  2091  0015E0  EF6F  F00B         	goto	l3695
  2092  0015E4                     u4690:
  2093  0015E4                     
  2094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2095  0015E4  0E00               	movlw	0
  2096  0015E6  6E5D               	movwf	(_prec+1)^0,c
  2097  0015E8  0E00               	movlw	0
  2098  0015EA  6E5C               	movwf	_prec^0,c
  2099  0015EC                     
  2100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2101  0015EC  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2102  0015F0  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2103  0015F4  2ADE               	incf	postinc2,f,c
  2104  0015F6  0E00               	movlw	0
  2105  0015F8  22DD               	addwfc	postdec2,f,c
  2106  0015FA                     
  2107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2108  0015FA  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2109  0015FE  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2110  001602  CFDE FFF6          	movff	postinc2,tblptrl
  2111  001606  CFDD FFF7          	movff	postdec2,tblptrh
  2112  00160A                     	if	0	;tblptru may be non-zero
  2113  00160A                     	endif
  2114  00160A                     	if	0	;tblptru may be non-zero
  2115  00160A                     	endif
  2116  00160A  0008               	tblrd		*
  2117  00160C  50F5               	movf	tablat,w,c
  2118  00160E  0A2A               	xorlw	42
  2119  001610  A4D8               	btfss	status,2,c
  2120  001612  EF0D  F00B         	goto	u4701
  2121  001616  EF0F  F00B         	goto	u4700
  2122  00161A                     u4701:
  2123  00161A  EF2C  F00B         	goto	l3685
  2124  00161E                     u4700:
  2125  00161E                     
  2126                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2127  00161E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2128  001622  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2129  001626  2ADE               	incf	postinc2,f,c
  2130  001628  0E00               	movlw	0
  2131  00162A  22DD               	addwfc	postdec2,f,c
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2134  00162C  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2135  001630  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2136  001634  CFDF F040          	movff	indf2,??_vfpfcnvrt
  2137  001638  0E02               	movlw	2
  2138  00163A  26DE               	addwf	postinc2,f,c
  2139  00163C  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  2140  001640  0E00               	movlw	0
  2141  001642  22DD               	addwfc	postdec2,f,c
  2142  001644  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2143  001648  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2144  00164C  CFDE F05C          	movff	postinc2,_prec
  2145  001650  CFDD F05D          	movff	postdec2,_prec+1
  2146                           
  2147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2148  001654  EF6F  F00B         	goto	l3695
  2149  001658                     l3685:
  2150                           
  2151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2152  001658  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2153  00165C  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2154  001660  CFDE F008          	movff	postinc2,atoi@s
  2155  001664  CFDD F009          	movff	postdec2,atoi@s+1
  2156  001668  EC68  F015         	call	_atoi	;wreg free
  2157  00166C  C008  F05C         	movff	?_atoi,_prec
  2158  001670  C009  F05D         	movff	?_atoi+1,_prec+1
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2161  001674  EF43  F00B         	goto	l3689
  2162  001678                     l3687:
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2165  001678  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2166  00167C  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2167  001680  2ADE               	incf	postinc2,f,c
  2168  001682  0E00               	movlw	0
  2169  001684  22DD               	addwfc	postdec2,f,c
  2170  001686                     l3689:
  2171  001686  0ED0               	movlw	208
  2172  001688  6E40               	movwf	??_vfpfcnvrt^0,c
  2173  00168A  0EFF               	movlw	255
  2174  00168C  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  2175  00168E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2176  001692  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2177  001696  CFDE FFF6          	movff	postinc2,tblptrl
  2178  00169A  CFDD FFF7          	movff	postdec2,tblptrh
  2179  00169E                     	if	0	;tblptru may be non-zero
  2180  00169E                     	endif
  2181  00169E                     	if	0	;tblptru may be non-zero
  2182  00169E                     	endif
  2183  00169E  0008               	tblrd		*
  2184  0016A0  50F5               	movf	tablat,w,c
  2185  0016A2  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  2186  0016A4  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  2187  0016A6  5040               	movf	??_vfpfcnvrt^0,w,c
  2188  0016A8  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2189  0016AA  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  2190  0016AC  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2191  0016AE  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  2192  0016B0  E10A               	bnz	u4710
  2193  0016B2  0E0A               	movlw	10
  2194  0016B4  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2195  0016B6  A0D8               	btfss	status,0,c
  2196  0016B8  EF60  F00B         	goto	u4711
  2197  0016BC  EF63  F00B         	goto	u4710
  2198  0016C0                     u4711:
  2199  0016C0  0E01               	movlw	1
  2200  0016C2  EF64  F00B         	goto	u4720
  2201  0016C6                     u4710:
  2202  0016C6  0E00               	movlw	0
  2203  0016C8                     u4720:
  2204  0016C8  6E46               	movwf	_vfpfcnvrt$949^0,c
  2205  0016CA  6A47               	clrf	(_vfpfcnvrt$949+1)^0,c
  2206  0016CC  5046               	movf	_vfpfcnvrt$949^0,w,c
  2207  0016CE  1047               	iorwf	(_vfpfcnvrt$949+1)^0,w,c
  2208  0016D0  A4D8               	btfss	status,2,c
  2209  0016D2  EF6D  F00B         	goto	u4731
  2210  0016D6  EF6F  F00B         	goto	u4730
  2211  0016DA                     u4731:
  2212  0016DA  EF3C  F00B         	goto	l3687
  2213  0016DE                     u4730:
  2214  0016DE                     l3695:
  2215                           
  2216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2217  0016DE  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2218  0016E2  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2219  0016E6  CFDE FFF6          	movff	postinc2,tblptrl
  2220  0016EA  CFDD FFF7          	movff	postdec2,tblptrh
  2221  0016EE                     	if	0	;tblptru may be non-zero
  2222  0016EE                     	endif
  2223  0016EE                     	if	0	;tblptru may be non-zero
  2224  0016EE                     	endif
  2225  0016EE  0008               	tblrd		*
  2226  0016F0  50F5               	movf	tablat,w,c
  2227  0016F2  6E07               	movwf	tolower@c^0,c
  2228  0016F4  6A08               	clrf	(tolower@c+1)^0,c
  2229  0016F6  ECE8  F01A         	call	_tolower	;wreg free
  2230  0016FA  5007               	movf	?_tolower^0,w,c
  2231  0016FC  6E4E               	movwf	vfpfcnvrt@ct^0,c
  2232  0016FE                     
  2233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2234  0016FE  504E               	movf	vfpfcnvrt@ct^0,w,c
  2235  001700  B4D8               	btfsc	status,2,c
  2236  001702  EF85  F00B         	goto	u4741
  2237  001706  EF87  F00B         	goto	u4740
  2238  00170A                     u4741:
  2239  00170A  EFBF  F00B         	goto	l3705
  2240  00170E                     u4740:
  2241  00170E                     
  2242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2243  00170E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2244  001712  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2245  001716  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  2246  00171A  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  2247  00171E  0E01               	movlw	1
  2248  001720  2640               	addwf	??_vfpfcnvrt^0,f,c
  2249  001722  0E00               	movlw	0
  2250  001724  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2251  001726  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2252  00172A  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2253  00172E                     	if	0	;tblptru may be non-zero
  2254  00172E                     	endif
  2255  00172E                     	if	0	;tblptru may be non-zero
  2256  00172E                     	endif
  2257  00172E  0008               	tblrd		*
  2258  001730  50F5               	movf	tablat,w,c
  2259  001732  6E07               	movwf	tolower@c^0,c
  2260  001734  6A08               	clrf	(tolower@c+1)^0,c
  2261  001736  ECE8  F01A         	call	_tolower	;wreg free
  2262  00173A  5007               	movf	?_tolower^0,w,c
  2263  00173C  6E4F               	movwf	(vfpfcnvrt@ct+1)^0,c
  2264  00173E                     
  2265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2266  00173E  504F               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2267  001740  B4D8               	btfsc	status,2,c
  2268  001742  EFA5  F00B         	goto	u4751
  2269  001746  EFA7  F00B         	goto	u4750
  2270  00174A                     u4751:
  2271  00174A  EFBF  F00B         	goto	l3705
  2272  00174E                     u4750:
  2273  00174E                     
  2274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2275  00174E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2276  001752  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2277  001756  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  2278  00175A  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  2279  00175E  0E02               	movlw	2
  2280  001760  2640               	addwf	??_vfpfcnvrt^0,f,c
  2281  001762  0E00               	movlw	0
  2282  001764  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2283  001766  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2284  00176A  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2285  00176E                     	if	0	;tblptru may be non-zero
  2286  00176E                     	endif
  2287  00176E                     	if	0	;tblptru may be non-zero
  2288  00176E                     	endif
  2289  00176E  0008               	tblrd		*
  2290  001770  50F5               	movf	tablat,w,c
  2291  001772  6E07               	movwf	tolower@c^0,c
  2292  001774  6A08               	clrf	(tolower@c+1)^0,c
  2293  001776  ECE8  F01A         	call	_tolower	;wreg free
  2294  00177A  5007               	movf	?_tolower^0,w,c
  2295  00177C  6E50               	movwf	(vfpfcnvrt@ct+2)^0,c
  2296  00177E                     l3705:
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2299  00177E  0E66               	movlw	102
  2300  001780  184E               	xorwf	vfpfcnvrt@ct^0,w,c
  2301  001782  A4D8               	btfss	status,2,c
  2302  001784  EFC6  F00B         	goto	u4761
  2303  001788  EFC8  F00B         	goto	u4760
  2304  00178C                     u4761:
  2305  00178C  EF08  F00C         	goto	l3717
  2306  001790                     u4760:
  2307  001790                     
  2308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2309  001790  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2310  001794  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2311  001798  CFDE FFF6          	movff	postinc2,tblptrl
  2312  00179C  CFDD FFF7          	movff	postdec2,tblptrh
  2313  0017A0                     	if	0	;tblptru may be non-zero
  2314  0017A0                     	endif
  2315  0017A0                     	if	0	;tblptru may be non-zero
  2316  0017A0                     	endif
  2317  0017A0  0008               	tblrd		*
  2318  0017A2  CFF5 F051          	movff	tablat,vfpfcnvrt@c
  2319  0017A6                     
  2320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2321  0017A6  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2322  0017AA  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2323  0017AE  2ADE               	incf	postinc2,f,c
  2324  0017B0  0E00               	movlw	0
  2325  0017B2  22DD               	addwfc	postdec2,f,c
  2326  0017B4                     
  2327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2328  0017B4  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2329  0017B8  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2330  0017BC  CFDF F040          	movff	indf2,??_vfpfcnvrt
  2331  0017C0  0E04               	movlw	4
  2332  0017C2  26DE               	addwf	postinc2,f,c
  2333  0017C4  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  2334  0017C8  0E00               	movlw	0
  2335  0017CA  22DD               	addwfc	postdec2,f,c
  2336  0017CC  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2337  0017D0  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2338  0017D4  CFDE F04A          	movff	postinc2,vfpfcnvrt@f
  2339  0017D8  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+1
  2340  0017DC  CFDE F04C          	movff	postinc2,vfpfcnvrt@f+2
  2341  0017E0  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+3
  2342  0017E4                     l3713:
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2345  0017E4  C03A  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  2346  0017E8  C03B  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2347  0017EC  C04A  F030         	movff	vfpfcnvrt@f,efgtoa@f
  2348  0017F0  C04B  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2349  0017F4  C04C  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2350  0017F8  C04D  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2351  0017FC  C051  F034         	movff	vfpfcnvrt@c,efgtoa@c
  2352  001800  EC12  F004         	call	_efgtoa	;wreg free
  2353  001804  C02E  F03A         	movff	?_efgtoa,?_vfpfcnvrt
  2354  001808  C02F  F03B         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2355  00180C  EFEB  F00C         	goto	l909
  2356  001810                     l3717:
  2357                           
  2358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2359  001810  0E4E               	movlw	low vfpfcnvrt@ct
  2360  001812  6E01               	movwf	strncmp@_l^0,c
  2361  001814  0E00               	movlw	high vfpfcnvrt@ct
  2362  001816  6E02               	movwf	(strncmp@_l+1)^0,c
  2363  001818  0E20               	movlw	low STR_11
  2364  00181A  6E03               	movwf	strncmp@_r^0,c
  2365  00181C  0E08               	movlw	high STR_11
  2366  00181E  6E04               	movwf	(strncmp@_r+1)^0,c
  2367  001820  0E00               	movlw	0
  2368  001822  6E06               	movwf	(strncmp@n+1)^0,c
  2369  001824  0E02               	movlw	2
  2370  001826  6E05               	movwf	strncmp@n^0,c
  2371  001828  EC39  F018         	call	_strncmp	;wreg free
  2372  00182C  5001               	movf	?_strncmp^0,w,c
  2373  00182E  1002               	iorwf	(?_strncmp+1)^0,w,c
  2374  001830  A4D8               	btfss	status,2,c
  2375  001832  EF1D  F00C         	goto	u4771
  2376  001836  EF1F  F00C         	goto	u4770
  2377  00183A                     u4771:
  2378  00183A  EF9A  F00C         	goto	l3733
  2379  00183E                     u4770:
  2380  00183E                     
  2381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2382  00183E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2383  001842  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2384  001846  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  2385  00184A  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  2386  00184E  0E01               	movlw	1
  2387  001850  2640               	addwf	??_vfpfcnvrt^0,f,c
  2388  001852  0E00               	movlw	0
  2389  001854  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2390  001856  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2391  00185A  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2392  00185E                     	if	0	;tblptru may be non-zero
  2393  00185E                     	endif
  2394  00185E                     	if	0	;tblptru may be non-zero
  2395  00185E                     	endif
  2396  00185E  0008               	tblrd		*
  2397  001860  CFF5 F051          	movff	tablat,vfpfcnvrt@c
  2398  001864  0EBF               	movlw	191
  2399  001866  6E40               	movwf	??_vfpfcnvrt^0,c
  2400  001868  0EFF               	movlw	255
  2401  00186A  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  2402  00186C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2403  001870  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2404  001874  CFDE FFF6          	movff	postinc2,tblptrl
  2405  001878  CFDD FFF7          	movff	postdec2,tblptrh
  2406  00187C                     	if	0	;tblptru may be non-zero
  2407  00187C                     	endif
  2408  00187C                     	if	0	;tblptru may be non-zero
  2409  00187C                     	endif
  2410  00187C  0008               	tblrd		*
  2411  00187E  50F5               	movf	tablat,w,c
  2412  001880  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  2413  001882  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  2414  001884  5040               	movf	??_vfpfcnvrt^0,w,c
  2415  001886  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2416  001888  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  2417  00188A  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2418  00188C  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  2419  00188E  E10A               	bnz	u4780
  2420  001890  0E1A               	movlw	26
  2421  001892  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2422  001894  A0D8               	btfss	status,0,c
  2423  001896  EF4F  F00C         	goto	u4781
  2424  00189A  EF52  F00C         	goto	u4780
  2425  00189E                     u4781:
  2426  00189E  0E01               	movlw	1
  2427  0018A0  EF53  F00C         	goto	u4790
  2428  0018A4                     u4780:
  2429  0018A4  0E00               	movlw	0
  2430  0018A6                     u4790:
  2431  0018A6  6E48               	movwf	_vfpfcnvrt$953^0,c
  2432  0018A8  6A49               	clrf	(_vfpfcnvrt$953+1)^0,c
  2433  0018AA  5048               	movf	_vfpfcnvrt$953^0,w,c
  2434  0018AC  1049               	iorwf	(_vfpfcnvrt$953+1)^0,w,c
  2435  0018AE  B4D8               	btfsc	status,2,c
  2436  0018B0  EF5C  F00C         	goto	u4801
  2437  0018B4  EF5E  F00C         	goto	u4800
  2438  0018B8                     u4801:
  2439  0018B8  EF78  F00C         	goto	l3727
  2440  0018BC                     u4800:
  2441  0018BC                     
  2442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2443  0018BC  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2444  0018C0  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2445  0018C4  CFDF F040          	movff	indf2,??_vfpfcnvrt
  2446  0018C8  0E04               	movlw	4
  2447  0018CA  26DE               	addwf	postinc2,f,c
  2448  0018CC  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  2449  0018D0  0E00               	movlw	0
  2450  0018D2  22DD               	addwfc	postdec2,f,c
  2451  0018D4  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2452  0018D8  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2453  0018DC  CFDE F04A          	movff	postinc2,vfpfcnvrt@f
  2454  0018E0  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+1
  2455  0018E4  CFDE F04C          	movff	postinc2,vfpfcnvrt@f+2
  2456  0018E8  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+3
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2459  0018EC  EF90  F00C         	goto	l916
  2460  0018F0                     l3727:
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2463  0018F0  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2464  0018F4  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2465  0018F8  CFDF F040          	movff	indf2,??_vfpfcnvrt
  2466  0018FC  0E04               	movlw	4
  2467  0018FE  26DE               	addwf	postinc2,f,c
  2468  001900  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  2469  001904  0E00               	movlw	0
  2470  001906  22DD               	addwfc	postdec2,f,c
  2471  001908  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2472  00190C  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2473  001910  CFDE F04A          	movff	postinc2,vfpfcnvrt@f
  2474  001914  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+1
  2475  001918  CFDE F04C          	movff	postinc2,vfpfcnvrt@f+2
  2476  00191C  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+3
  2477  001920                     l916:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2480  001920  0E02               	movlw	2
  2481  001922  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2482  001926  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2483  00192A  26DE               	addwf	postinc2,f,c
  2484  00192C  0E00               	movlw	0
  2485  00192E  22DD               	addwfc	postdec2,f,c
  2486  001930  EFF2  F00B         	goto	l3713
  2487  001934                     l3733:
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2490  001934  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2491  001938  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2492  00193C  CFDE FFF6          	movff	postinc2,tblptrl
  2493  001940  CFDD FFF7          	movff	postdec2,tblptrh
  2494  001944                     	if	0	;tblptru may be non-zero
  2495  001944                     	endif
  2496  001944                     	if	0	;tblptru may be non-zero
  2497  001944                     	endif
  2498  001944  0008               	tblrd		*
  2499  001946  50F5               	movf	tablat,w,c
  2500  001948  0A25               	xorlw	37
  2501  00194A  A4D8               	btfss	status,2,c
  2502  00194C  EFAA  F00C         	goto	u4811
  2503  001950  EFAC  F00C         	goto	u4810
  2504  001954                     u4811:
  2505  001954  EFC3  F00C         	goto	l3743
  2506  001958                     u4810:
  2507  001958                     
  2508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2509  001958  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2510  00195C  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2511  001960  2ADE               	incf	postinc2,f,c
  2512  001962  0E00               	movlw	0
  2513  001964  22DD               	addwfc	postdec2,f,c
  2514  001966                     
  2515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2516  001966  0E00               	movlw	0
  2517  001968  6E02               	movwf	(fputc@c+1)^0,c
  2518  00196A  0E25               	movlw	37
  2519  00196C  6E01               	movwf	fputc@c^0,c
  2520  00196E  C03A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2521  001972  C03B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2522  001976  ECA4  F018         	call	_fputc	;wreg free
  2523  00197A                     l3739:
  2524                           
  2525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2526  00197A  0E00               	movlw	0
  2527  00197C  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  2528  00197E  0E01               	movlw	1
  2529  001980  6E3A               	movwf	?_vfpfcnvrt^0,c
  2530  001982  EFEB  F00C         	goto	l909
  2531  001986                     l3743:
  2532                           
  2533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2534  001986  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2535  00198A  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2536  00198E  2ADE               	incf	postinc2,f,c
  2537  001990  0E00               	movlw	0
  2538  001992  22DD               	addwfc	postdec2,f,c
  2539  001994                     
  2540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2541  001994  0E00               	movlw	0
  2542  001996  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  2543  001998  0E00               	movlw	0
  2544  00199A  6E3A               	movwf	?_vfpfcnvrt^0,c
  2545  00199C  EFEB  F00C         	goto	l909
  2546  0019A0                     l3749:
  2547                           
  2548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2549  0019A0  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2550  0019A4  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2551  0019A8  CFDE FFF6          	movff	postinc2,tblptrl
  2552  0019AC  CFDD FFF7          	movff	postdec2,tblptrh
  2553  0019B0                     	if	0	;tblptru may be non-zero
  2554  0019B0                     	endif
  2555  0019B0                     	if	0	;tblptru may be non-zero
  2556  0019B0                     	endif
  2557  0019B0  0008               	tblrd		*
  2558  0019B2  50F5               	movf	tablat,w,c
  2559  0019B4  6E01               	movwf	fputc@c^0,c
  2560  0019B6  6A02               	clrf	(fputc@c+1)^0,c
  2561  0019B8  C03A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2562  0019BC  C03B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2563  0019C0  ECA4  F018         	call	_fputc	;wreg free
  2564  0019C4                     
  2565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2566  0019C4  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2567  0019C8  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2568  0019CC  2ADE               	incf	postinc2,f,c
  2569  0019CE  0E00               	movlw	0
  2570  0019D0  22DD               	addwfc	postdec2,f,c
  2571  0019D2  EFBD  F00C         	goto	l3739
  2572  0019D6                     l909:
  2573  0019D6  0012               	return		;funcret
  2574  0019D8                     __end_of_vfpfcnvrt:
  2575                           	callstack 0
  2576                           
  2577 ;; *************** function _strncmp *****************
  2578 ;; Defined at:
  2579 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2582 ;;		 -> vfpfcnvrt@ct(3), 
  2583 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2584 ;;		 -> STR_13(3), 
  2585 ;;  n               2    4[COMRAM] unsigned int 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2588 ;;		 -> STR_13(3), 
  2589 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2590 ;;		 -> vfpfcnvrt@ct(3), 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  2    0[COMRAM] int 
  2593 ;; Registers used:
  2594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2600 ;;      Params:         6       0       0       0       0       0       0       0       0
  2601 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2602 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2603 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2604 ;;Total ram usage:       11 bytes
  2605 ;; Hardware stack levels used: 1
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_vfpfcnvrt
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text9
  2614  003072                     __ptext9:
  2615                           	callstack 0
  2616  003072                     _strncmp:
  2617                           	callstack 27
  2618  003072  C001  F008         	movff	strncmp@_l,strncmp@l
  2619  003076  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2620  00307A  C003  F00A         	movff	strncmp@_r,strncmp@r
  2621  00307E  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2622  003082  0605               	decf	strncmp@n^0,f,c
  2623  003084  A0D8               	btfss	status,0,c
  2624  003086  0606               	decf	(strncmp@n+1)^0,f,c
  2625  003088  2805               	incf	strncmp@n^0,w,c
  2626  00308A  E106               	bnz	u4581
  2627  00308C  2806               	incf	(strncmp@n+1)^0,w,c
  2628  00308E  A4D8               	btfss	status,2,c
  2629  003090  EF4C  F018         	goto	u4581
  2630  003094  EF4E  F018         	goto	u4580
  2631  003098                     u4581:
  2632  003098  EF5B  F018         	goto	l3625
  2633  00309C                     u4580:
  2634  00309C  0E00               	movlw	0
  2635  00309E  6E02               	movwf	(?_strncmp+1)^0,c
  2636  0030A0  0E00               	movlw	0
  2637  0030A2  6E01               	movwf	?_strncmp^0,c
  2638  0030A4  EFA3  F018         	goto	l1037
  2639  0030A8                     l3623:
  2640  0030A8  4A08               	infsnz	strncmp@l^0,f,c
  2641  0030AA  2A09               	incf	(strncmp@l+1)^0,f,c
  2642  0030AC  4A0A               	infsnz	strncmp@r^0,f,c
  2643  0030AE  2A0B               	incf	(strncmp@r+1)^0,f,c
  2644  0030B0  0605               	decf	strncmp@n^0,f,c
  2645  0030B2  A0D8               	btfss	status,0,c
  2646  0030B4  0606               	decf	(strncmp@n+1)^0,f,c
  2647  0030B6                     l3625:
  2648  0030B6  C008  FFD9         	movff	strncmp@l,fsr2l
  2649  0030BA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2650  0030BE  50DF               	movf	indf2,w,c
  2651  0030C0  B4D8               	btfsc	status,2,c
  2652  0030C2  EF65  F018         	goto	u4591
  2653  0030C6  EF67  F018         	goto	u4590
  2654  0030CA                     u4591:
  2655  0030CA  EF92  F018         	goto	l3633
  2656  0030CE                     u4590:
  2657  0030CE  C00A  FFF6         	movff	strncmp@r,tblptrl
  2658  0030D2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2659  0030D6                     	if	0	;tblptru may be non-zero
  2660  0030D6                     	endif
  2661  0030D6                     	if	0	;tblptru may be non-zero
  2662  0030D6                     	endif
  2663  0030D6  0008               	tblrd		*
  2664  0030D8  50F5               	movf	tablat,w,c
  2665  0030DA  0900               	iorlw	0
  2666  0030DC  B4D8               	btfsc	status,2,c
  2667  0030DE  EF73  F018         	goto	u4601
  2668  0030E2  EF75  F018         	goto	u4600
  2669  0030E6                     u4601:
  2670  0030E6  EF92  F018         	goto	l3633
  2671  0030EA                     u4600:
  2672  0030EA  5005               	movf	strncmp@n^0,w,c
  2673  0030EC  1006               	iorwf	(strncmp@n+1)^0,w,c
  2674  0030EE  B4D8               	btfsc	status,2,c
  2675  0030F0  EF7C  F018         	goto	u4611
  2676  0030F4  EF7E  F018         	goto	u4610
  2677  0030F8                     u4611:
  2678  0030F8  EF92  F018         	goto	l3633
  2679  0030FC                     u4610:
  2680  0030FC  C008  FFD9         	movff	strncmp@l,fsr2l
  2681  003100  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2682  003104  50DF               	movf	indf2,w,c
  2683  003106  6E07               	movwf	??_strncmp^0,c
  2684  003108  C00A  FFF6         	movff	strncmp@r,tblptrl
  2685  00310C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2686  003110                     	if	0	;tblptru may be non-zero
  2687  003110                     	endif
  2688  003110                     	if	0	;tblptru may be non-zero
  2689  003110                     	endif
  2690  003110  0008               	tblrd		*
  2691  003112  50F5               	movf	tablat,w,c
  2692  003114  1807               	xorwf	??_strncmp^0,w,c
  2693  003116  B4D8               	btfsc	status,2,c
  2694  003118  EF90  F018         	goto	u4621
  2695  00311C  EF92  F018         	goto	u4620
  2696  003120                     u4621:
  2697  003120  EF54  F018         	goto	l3623
  2698  003124                     u4620:
  2699  003124                     l3633:
  2700  003124  C008  FFD9         	movff	strncmp@l,fsr2l
  2701  003128  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2702  00312C  50DF               	movf	indf2,w,c
  2703  00312E  6E07               	movwf	??_strncmp^0,c
  2704  003130  C00A  FFF6         	movff	strncmp@r,tblptrl
  2705  003134  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2706  003138                     	if	0	;tblptru may be non-zero
  2707  003138                     	endif
  2708  003138                     	if	0	;tblptru may be non-zero
  2709  003138                     	endif
  2710  003138  0008               	tblrd		*
  2711  00313A  50F5               	movf	tablat,w,c
  2712  00313C  5C07               	subwf	??_strncmp^0,w,c
  2713  00313E  6E01               	movwf	?_strncmp^0,c
  2714  003140  6A02               	clrf	(?_strncmp+1)^0,c
  2715  003142  A0D8               	btfss	status,0,c
  2716  003144  0602               	decf	(?_strncmp+1)^0,f,c
  2717  003146                     l1037:
  2718  003146  0012               	return		;funcret
  2719  003148                     __end_of_strncmp:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function _efgtoa *****************
  2723 ;; Defined at:
  2724 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  2727 ;;		 -> sprintf@f(6), 
  2728 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  2729 ;;  c               1   51[COMRAM] unsigned char 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  u               4   52[BANK0 ] unsigned char 
  2732 ;;  g               4   44[BANK0 ] unsigned char 
  2733 ;;  l               4   38[BANK0 ] unsigned char 
  2734 ;;  h               4   34[BANK0 ] unsigned char 
  2735 ;;  ou              4   20[BANK0 ] unsigned char 
  2736 ;;  n               2   50[BANK0 ] int 
  2737 ;;  e               2   48[BANK0 ] int 
  2738 ;;  i               2   42[BANK0 ] int 
  2739 ;;  w               2   30[BANK0 ] int 
  2740 ;;  p               2   28[BANK0 ] int 
  2741 ;;  sign            2   26[BANK0 ] int 
  2742 ;;  d               2   24[BANK0 ] int 
  2743 ;;  m               2   18[BANK0 ] int 
  2744 ;;  ne              2   16[BANK0 ] int 
  2745 ;;  pp              2   14[BANK0 ] int 
  2746 ;;  t               2   12[BANK0 ] int 
  2747 ;;  mode            1   33[BANK0 ] unsigned char 
  2748 ;;  nmode           1   32[BANK0 ] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  2   45[COMRAM] int 
  2751 ;; Registers used:
  2752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2758 ;;      Params:         7       0       0       0       0       0       0       0       0
  2759 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2760 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2761 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2762 ;;Total ram usage:       68 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 4
  2765 ;; This function calls:
  2766 ;;		___awdiv
  2767 ;;		___awmod
  2768 ;;		___fladd
  2769 ;;		___fldiv
  2770 ;;		___fleq
  2771 ;;		___flge
  2772 ;;		___flmul
  2773 ;;		___flneg
  2774 ;;		___flsub
  2775 ;;		___fltol
  2776 ;;		___fpclassifyf
  2777 ;;		_floorf
  2778 ;;		_isupper
  2779 ;;		_pad
  2780 ;;		_strcpy
  2781 ;;		_tolower
  2782 ;; This function is called by:
  2783 ;;		_vfpfcnvrt
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text10
  2788  000824                     __ptext10:
  2789                           	callstack 0
  2790  000824                     _efgtoa:
  2791                           	callstack 23
  2792  000824                     
  2793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2794  000824  0E00               	movlw	0
  2795  000826  0100               	movlb	0	; () banked
  2796  000828  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2797  00082A  0E00               	movlw	0
  2798  00082C  6F7A               	movwf	efgtoa@sign& (0+255),b
  2799  00082E                     
  2800                           ; BSR set to: 0
  2801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2802  00082E  C030  F08C         	movff	efgtoa@f,efgtoa@g
  2803  000832  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2804  000836  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2805  00083A  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2806  00083E                     
  2807                           ; BSR set to: 0
  2808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2809  00083E  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2810  000840  EF26  F004         	goto	u3970
  2811  000844  EF24  F004         	goto	u3971
  2812  000848                     u3971:
  2813  000848  EF3C  F004         	goto	l3277
  2814  00084C                     u3970:
  2815  00084C                     
  2816                           ; BSR set to: 0
  2817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2818  00084C  0E00               	movlw	0
  2819  00084E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2820  000850  0E01               	movlw	1
  2821  000852  6F7A               	movwf	efgtoa@sign& (0+255),b
  2822  000854                     
  2823                           ; BSR set to: 0
  2824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2825  000854  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2826  000858  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2827  00085C  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2828  000860  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2829  000864  EC47  F01C         	call	___flneg	;wreg free
  2830  000868  C001  F08C         	movff	?___flneg,efgtoa@g
  2831  00086C  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2832  000870  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2833  000874  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2834  000878                     l3277:
  2835                           
  2836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2837  000878  0E00               	movlw	0
  2838  00087A  0100               	movlb	0	; () banked
  2839  00087C  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2840  00087E  0E00               	movlw	0
  2841  000880  6F92               	movwf	efgtoa@n& (0+255),b
  2842  000882                     
  2843                           ; BSR set to: 0
  2844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2845  000882  C05A  F07E         	movff	_width,efgtoa@w
  2846  000886  C05B  F07F         	movff	_width+1,efgtoa@w+1
  2847  00088A                     
  2848                           ; BSR set to: 0
  2849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2850  00088A  517A               	movf	efgtoa@sign& (0+255),w,b
  2851  00088C  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2852  00088E  A4D8               	btfss	status,2,c
  2853  000890  EF4C  F004         	goto	u3981
  2854  000894  EF4E  F004         	goto	u3980
  2855  000898                     u3981:
  2856  000898  EF55  F004         	goto	l3285
  2857  00089C                     u3980:
  2858  00089C                     
  2859                           ; BSR set to: 0
  2860  00089C  A45E               	btfss	_flags^0,2,c
  2861  00089E  EF53  F004         	goto	u3991
  2862  0008A2  EF55  F004         	goto	u3990
  2863  0008A6                     u3991:
  2864  0008A6  EF6F  F004         	goto	l3297
  2865  0008AA                     u3990:
  2866  0008AA                     l3285:
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2870  0008AA  517A               	movf	efgtoa@sign& (0+255),w,b
  2871  0008AC  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2872  0008AE  A4D8               	btfss	status,2,c
  2873  0008B0  EF5C  F004         	goto	u4001
  2874  0008B4  EF5E  F004         	goto	u4000
  2875  0008B8                     u4001:
  2876  0008B8  EF64  F004         	goto	l3289
  2877  0008BC                     u4000:
  2878  0008BC                     
  2879                           ; BSR set to: 0
  2880  0008BC  0E00               	movlw	0
  2881  0008BE  6F61               	movwf	(_efgtoa$922+1)& (0+255),b
  2882  0008C0  0E2B               	movlw	43
  2883  0008C2  6F60               	movwf	_efgtoa$922& (0+255),b
  2884  0008C4  EF68  F004         	goto	l3291
  2885  0008C8                     l3289:
  2886                           
  2887                           ; BSR set to: 0
  2888  0008C8  0E00               	movlw	0
  2889  0008CA  6F61               	movwf	(_efgtoa$922+1)& (0+255),b
  2890  0008CC  0E2D               	movlw	45
  2891  0008CE  6F60               	movwf	_efgtoa$922& (0+255),b
  2892  0008D0                     l3291:
  2893                           
  2894                           ; BSR set to: 0
  2895  0008D0  C060  F100         	movff	_efgtoa$922,_dbuf
  2896  0008D4                     
  2897                           ; BSR set to: 0
  2898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2899  0008D4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2900  0008D6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2901  0008D8                     
  2902                           ; BSR set to: 0
  2903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2904  0008D8  077E               	decf	efgtoa@w& (0+255),f,b
  2905  0008DA  A0D8               	btfss	status,0,c
  2906  0008DC  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  2907  0008DE                     l3297:
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2911  0008DE  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2912  0008E2  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2913  0008E6  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2914  0008EA  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2915  0008EE  ECBA  F017         	call	___fpclassifyf	;wreg free
  2916  0008F2  0401               	decf	?___fpclassifyf^0,w,c
  2917  0008F4  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2918  0008F6  A4D8               	btfss	status,2,c
  2919  0008F8  EF80  F004         	goto	u4011
  2920  0008FC  EF82  F004         	goto	u4010
  2921  000900                     u4011:
  2922  000900  EFD9  F004         	goto	l3315
  2923  000904                     u4010:
  2924  000904  0EBF               	movlw	191
  2925  000906  6E35               	movwf	??_efgtoa^0,c
  2926  000908  0EFF               	movlw	255
  2927  00090A  6E36               	movwf	(??_efgtoa+1)^0,c
  2928  00090C  5034               	movf	efgtoa@c^0,w,c
  2929  00090E  6E37               	movwf	(??_efgtoa+2)^0,c
  2930  000910  6A38               	clrf	(??_efgtoa+3)^0,c
  2931  000912  5035               	movf	??_efgtoa^0,w,c
  2932  000914  2637               	addwf	(??_efgtoa+2)^0,f,c
  2933  000916  5036               	movf	(??_efgtoa+1)^0,w,c
  2934  000918  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2935  00091A  5038               	movf	(??_efgtoa+3)^0,w,c
  2936  00091C  E10A               	bnz	u4020
  2937  00091E  0E1A               	movlw	26
  2938  000920  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2939  000922  A0D8               	btfss	status,0,c
  2940  000924  EF96  F004         	goto	u4021
  2941  000928  EF99  F004         	goto	u4020
  2942  00092C                     u4021:
  2943  00092C  0E01               	movlw	1
  2944  00092E  EF9A  F004         	goto	u4030
  2945  000932                     u4020:
  2946  000932  0E00               	movlw	0
  2947  000934                     u4030:
  2948  000934  0100               	movlb	0	; () banked
  2949  000936  6F62               	movwf	_efgtoa$923& (0+255),b
  2950  000938  6B63               	clrf	(_efgtoa$923+1)& (0+255),b
  2951  00093A                     
  2952                           ; BSR set to: 0
  2953  00093A  5162               	movf	_efgtoa$923& (0+255),w,b
  2954  00093C  1163               	iorwf	(_efgtoa$923+1)& (0+255),w,b
  2955  00093E  B4D8               	btfsc	status,2,c
  2956  000940  EFA4  F004         	goto	u4041
  2957  000944  EFA6  F004         	goto	u4040
  2958  000948                     u4041:
  2959  000948  EFB4  F004         	goto	l3307
  2960  00094C                     u4040:
  2961  00094C                     
  2962                           ; BSR set to: 0
  2963                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2964  00094C  0E00               	movlw	low _dbuf
  2965  00094E  2592               	addwf	efgtoa@n& (0+255),w,b
  2966  000950  6E01               	movwf	strcpy@dest^0,c
  2967  000952  0E01               	movlw	high _dbuf
  2968  000954  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2969  000956  6E02               	movwf	(strcpy@dest+1)^0,c
  2970  000958  0E10               	movlw	low STR_3
  2971  00095A  6E03               	movwf	strcpy@src^0,c
  2972  00095C  0E08               	movlw	high STR_3
  2973  00095E  6E04               	movwf	(strcpy@src+1)^0,c
  2974  000960  EC18  F01B         	call	_strcpy	;wreg free
  2975                           
  2976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2977  000964  EFC0  F004         	goto	l3309
  2978  000968                     l3307:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2982  000968  0E00               	movlw	low _dbuf
  2983  00096A  2592               	addwf	efgtoa@n& (0+255),w,b
  2984  00096C  6E01               	movwf	strcpy@dest^0,c
  2985  00096E  0E01               	movlw	high _dbuf
  2986  000970  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2987  000972  6E02               	movwf	(strcpy@dest+1)^0,c
  2988  000974  0E18               	movlw	low STR_4
  2989  000976  6E03               	movwf	strcpy@src^0,c
  2990  000978  0E08               	movlw	high STR_4
  2991  00097A  6E04               	movwf	(strcpy@src+1)^0,c
  2992  00097C  EC18  F01B         	call	_strcpy	;wreg free
  2993  000980                     l3309:
  2994                           
  2995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2996  000980  0100               	movlb	0	; () banked
  2997  000982  0EFD               	movlw	253
  2998  000984  277E               	addwf	efgtoa@w& (0+255),f,b
  2999  000986  0EFF               	movlw	255
  3000  000988  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3001  00098A                     l3311:
  3002                           
  3003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3004  00098A  C02E  F011         	movff	efgtoa@fp,pad@fp
  3005  00098E  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  3006  000992  0E00               	movlw	low _dbuf
  3007  000994  6E13               	movwf	pad@buf^0,c
  3008  000996  0E01               	movlw	high _dbuf
  3009  000998  6E14               	movwf	(pad@buf+1)^0,c
  3010  00099A  C07E  F015         	movff	efgtoa@w,pad@p
  3011  00099E  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  3012  0009A2  EC6B  F019         	call	_pad	;wreg free
  3013  0009A6  C011  F02E         	movff	?_pad,?_efgtoa
  3014  0009AA  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  3015  0009AE  EF3E  F00A         	goto	l807
  3016  0009B2                     l3315:
  3017                           
  3018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3019  0009B2  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3020  0009B6  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3021  0009BA  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3022  0009BE  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3023  0009C2  ECBA  F017         	call	___fpclassifyf	;wreg free
  3024  0009C6  5001               	movf	?___fpclassifyf^0,w,c
  3025  0009C8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3026  0009CA  A4D8               	btfss	status,2,c
  3027  0009CC  EFEA  F004         	goto	u4051
  3028  0009D0  EFEC  F004         	goto	u4050
  3029  0009D4                     u4051:
  3030  0009D4  EF2C  F005         	goto	l3333
  3031  0009D8                     u4050:
  3032  0009D8  0EBF               	movlw	191
  3033  0009DA  6E35               	movwf	??_efgtoa^0,c
  3034  0009DC  0EFF               	movlw	255
  3035  0009DE  6E36               	movwf	(??_efgtoa+1)^0,c
  3036  0009E0  5034               	movf	efgtoa@c^0,w,c
  3037  0009E2  6E37               	movwf	(??_efgtoa+2)^0,c
  3038  0009E4  6A38               	clrf	(??_efgtoa+3)^0,c
  3039  0009E6  5035               	movf	??_efgtoa^0,w,c
  3040  0009E8  2637               	addwf	(??_efgtoa+2)^0,f,c
  3041  0009EA  5036               	movf	(??_efgtoa+1)^0,w,c
  3042  0009EC  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3043  0009EE  5038               	movf	(??_efgtoa+3)^0,w,c
  3044  0009F0  E10A               	bnz	u4060
  3045  0009F2  0E1A               	movlw	26
  3046  0009F4  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3047  0009F6  A0D8               	btfss	status,0,c
  3048  0009F8  EF00  F005         	goto	u4061
  3049  0009FC  EF03  F005         	goto	u4060
  3050  000A00                     u4061:
  3051  000A00  0E01               	movlw	1
  3052  000A02  EF04  F005         	goto	u4070
  3053  000A06                     u4060:
  3054  000A06  0E00               	movlw	0
  3055  000A08                     u4070:
  3056  000A08  0100               	movlb	0	; () banked
  3057  000A0A  6F64               	movwf	_efgtoa$928& (0+255),b
  3058  000A0C  6B65               	clrf	(_efgtoa$928+1)& (0+255),b
  3059  000A0E                     
  3060                           ; BSR set to: 0
  3061  000A0E  5164               	movf	_efgtoa$928& (0+255),w,b
  3062  000A10  1165               	iorwf	(_efgtoa$928+1)& (0+255),w,b
  3063  000A12  B4D8               	btfsc	status,2,c
  3064  000A14  EF0E  F005         	goto	u4081
  3065  000A18  EF10  F005         	goto	u4080
  3066  000A1C                     u4081:
  3067  000A1C  EF1E  F005         	goto	l3325
  3068  000A20                     u4080:
  3069  000A20                     
  3070                           ; BSR set to: 0
  3071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3072  000A20  0E00               	movlw	low _dbuf
  3073  000A22  2592               	addwf	efgtoa@n& (0+255),w,b
  3074  000A24  6E01               	movwf	strcpy@dest^0,c
  3075  000A26  0E01               	movlw	high _dbuf
  3076  000A28  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3077  000A2A  6E02               	movwf	(strcpy@dest+1)^0,c
  3078  000A2C  0E14               	movlw	low STR_7
  3079  000A2E  6E03               	movwf	strcpy@src^0,c
  3080  000A30  0E08               	movlw	high STR_7
  3081  000A32  6E04               	movwf	(strcpy@src+1)^0,c
  3082  000A34  EC18  F01B         	call	_strcpy	;wreg free
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3085  000A38  EFC0  F004         	goto	l3309
  3086  000A3C                     l3325:
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3090  000A3C  0E00               	movlw	low _dbuf
  3091  000A3E  2592               	addwf	efgtoa@n& (0+255),w,b
  3092  000A40  6E01               	movwf	strcpy@dest^0,c
  3093  000A42  0E01               	movlw	high _dbuf
  3094  000A44  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3095  000A46  6E02               	movwf	(strcpy@dest+1)^0,c
  3096  000A48  0E1C               	movlw	low STR_8
  3097  000A4A  6E03               	movwf	strcpy@src^0,c
  3098  000A4C  0E08               	movlw	high STR_8
  3099  000A4E  6E04               	movwf	(strcpy@src+1)^0,c
  3100  000A50  EC18  F01B         	call	_strcpy	;wreg free
  3101  000A54  EFC0  F004         	goto	l3309
  3102  000A58                     l3333:
  3103                           
  3104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3105  000A58  0E00               	movlw	0
  3106  000A5A  0100               	movlb	0	; () banked
  3107  000A5C  6F94               	movwf	efgtoa@u& (0+255),b
  3108  000A5E  0E00               	movlw	0
  3109  000A60  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3110  000A62  0E80               	movlw	128
  3111  000A64  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3112  000A66  0E3F               	movlw	63
  3113  000A68  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3114                           
  3115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3116  000A6A  0E00               	movlw	0
  3117  000A6C  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3118  000A6E  0E00               	movlw	0
  3119  000A70  6F90               	movwf	efgtoa@e& (0+255),b
  3120  000A72                     
  3121                           ; BSR set to: 0
  3122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3123  000A72  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  3124  000A76  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3125  000A7A  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3126  000A7E  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3127  000A82  0E00               	movlw	0
  3128  000A84  6E05               	movwf	___fleq@ff2^0,c
  3129  000A86  0E00               	movlw	0
  3130  000A88  6E06               	movwf	(___fleq@ff2+1)^0,c
  3131  000A8A  0E00               	movlw	0
  3132  000A8C  6E07               	movwf	(___fleq@ff2+2)^0,c
  3133  000A8E  0E00               	movlw	0
  3134  000A90  6E08               	movwf	(___fleq@ff2+3)^0,c
  3135  000A92  EC24  F01A         	call	___fleq	;wreg free
  3136  000A96  B0D8               	btfsc	status,0,c
  3137  000A98  EF50  F005         	goto	u4091
  3138  000A9C  EF52  F005         	goto	u4090
  3139  000AA0                     u4091:
  3140  000AA0  EFD5  F005         	goto	l3351
  3141  000AA4                     u4090:
  3142  000AA4  EF71  F005         	goto	l3343
  3143  000AA8                     l3339:
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3146  000AA8  C094  F001         	movff	efgtoa@u,___flmul@b
  3147  000AAC  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3148  000AB0  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3149  000AB4  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3150  000AB8  0E00               	movlw	0
  3151  000ABA  6E05               	movwf	___flmul@a^0,c
  3152  000ABC  0E00               	movlw	0
  3153  000ABE  6E06               	movwf	(___flmul@a+1)^0,c
  3154  000AC0  0E20               	movlw	32
  3155  000AC2  6E07               	movwf	(___flmul@a+2)^0,c
  3156  000AC4  0E41               	movlw	65
  3157  000AC6  6E08               	movwf	(___flmul@a+3)^0,c
  3158  000AC8  EC4C  F00F         	call	___flmul	;wreg free
  3159  000ACC  C001  F094         	movff	?___flmul,efgtoa@u
  3160  000AD0  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  3161  000AD4  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  3162  000AD8  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  3163  000ADC                     
  3164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3165  000ADC  0100               	movlb	0	; () banked
  3166  000ADE  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3167  000AE0  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3168  000AE2                     l3343:
  3169                           
  3170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3171  000AE2  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3172  000AE6  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3173  000AEA  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3174  000AEE  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3175  000AF2  0E00               	movlw	0
  3176  000AF4  6E05               	movwf	___flmul@a^0,c
  3177  000AF6  0E00               	movlw	0
  3178  000AF8  6E06               	movwf	(___flmul@a+1)^0,c
  3179  000AFA  0E20               	movlw	32
  3180  000AFC  6E07               	movwf	(___flmul@a+2)^0,c
  3181  000AFE  0E41               	movlw	65
  3182  000B00  6E08               	movwf	(___flmul@a+3)^0,c
  3183  000B02  C094  F001         	movff	efgtoa@u,___flmul@b
  3184  000B06  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3185  000B0A  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3186  000B0E  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3187  000B12  EC4C  F00F         	call	___flmul	;wreg free
  3188  000B16  C001  F01E         	movff	?___flmul,___flge@ff2
  3189  000B1A  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3190  000B1E  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3191  000B22  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3192  000B26  EC38  F017         	call	___flge	;wreg free
  3193  000B2A  B0D8               	btfsc	status,0,c
  3194  000B2C  EF9A  F005         	goto	u4101
  3195  000B30  EF9C  F005         	goto	u4100
  3196  000B34                     u4101:
  3197  000B34  EF54  F005         	goto	l3339
  3198  000B38                     u4100:
  3199  000B38  EFBC  F005         	goto	l3349
  3200  000B3C                     l3345:
  3201                           
  3202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3203  000B3C  C094  F001         	movff	efgtoa@u,___fldiv@b
  3204  000B40  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3205  000B44  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3206  000B48  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3207  000B4C  0E00               	movlw	0
  3208  000B4E  6E05               	movwf	___fldiv@a^0,c
  3209  000B50  0E00               	movlw	0
  3210  000B52  6E06               	movwf	(___fldiv@a+1)^0,c
  3211  000B54  0E20               	movlw	32
  3212  000B56  6E07               	movwf	(___fldiv@a+2)^0,c
  3213  000B58  0E41               	movlw	65
  3214  000B5A  6E08               	movwf	(___fldiv@a+3)^0,c
  3215  000B5C  EC61  F011         	call	___fldiv	;wreg free
  3216  000B60  C001  F094         	movff	?___fldiv,efgtoa@u
  3217  000B64  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3218  000B68  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3219  000B6C  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3220  000B70                     
  3221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3222  000B70  0100               	movlb	0	; () banked
  3223  000B72  0790               	decf	efgtoa@e& (0+255),f,b
  3224  000B74  A0D8               	btfss	status,0,c
  3225  000B76  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3226  000B78                     l3349:
  3227                           
  3228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3229  000B78  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3230  000B7C  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3231  000B80  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3232  000B84  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3233  000B88  C094  F01E         	movff	efgtoa@u,___flge@ff2
  3234  000B8C  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3235  000B90  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3236  000B94  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3237  000B98  EC38  F017         	call	___flge	;wreg free
  3238  000B9C  A0D8               	btfss	status,0,c
  3239  000B9E  EFD3  F005         	goto	u4111
  3240  000BA2  EFD5  F005         	goto	u4110
  3241  000BA6                     u4111:
  3242  000BA6  EF9E  F005         	goto	l3345
  3243  000BAA                     u4110:
  3244  000BAA                     l3351:
  3245                           
  3246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3247  000BAA  C034  F007         	movff	efgtoa@c,tolower@c
  3248  000BAE  6A08               	clrf	(tolower@c+1)^0,c
  3249  000BB0  ECE8  F01A         	call	_tolower	;wreg free
  3250  000BB4  5007               	movf	?_tolower^0,w,c
  3251  000BB6  0100               	movlb	0	; () banked
  3252  000BB8  6F81               	movwf	efgtoa@mode& (0+255),b
  3253  000BBA                     
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3256  000BBA  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  3257  000BBE                     
  3258                           ; BSR set to: 0
  3259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3260  000BBE  0E67               	movlw	103
  3261  000BC0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3262  000BC2  A4D8               	btfss	status,2,c
  3263  000BC4  EFE6  F005         	goto	u4121
  3264  000BC8  EFE8  F005         	goto	u4120
  3265  000BCC                     u4121:
  3266  000BCC  EF0E  F006         	goto	l3365
  3267  000BD0                     u4120:
  3268  000BD0                     
  3269                           ; BSR set to: 0
  3270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3271  000BD0  505C               	movf	_prec^0,w,c
  3272  000BD2  105D               	iorwf	(_prec+1)^0,w,c
  3273  000BD4  A4D8               	btfss	status,2,c
  3274  000BD6  EFEF  F005         	goto	u4131
  3275  000BDA  EFF1  F005         	goto	u4130
  3276  000BDE                     u4131:
  3277  000BDE  EFF5  F005         	goto	l3361
  3278  000BE2                     u4130:
  3279  000BE2                     
  3280                           ; BSR set to: 0
  3281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3282  000BE2  0E00               	movlw	0
  3283  000BE4  6E5D               	movwf	(_prec+1)^0,c
  3284  000BE6  0E01               	movlw	1
  3285  000BE8  6E5C               	movwf	_prec^0,c
  3286  000BEA                     l3361:
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3290  000BEA  BE5D               	btfsc	(_prec+1)^0,7,c
  3291  000BEC  EF02  F006         	goto	u4140
  3292  000BF0  505D               	movf	(_prec+1)^0,w,c
  3293  000BF2  E106               	bnz	u4141
  3294  000BF4  045C               	decf	_prec^0,w,c
  3295  000BF6  B0D8               	btfsc	status,0,c
  3296  000BF8  EF00  F006         	goto	u4141
  3297  000BFC  EF02  F006         	goto	u4140
  3298  000C00                     u4141:
  3299  000C00  EF08  F006         	goto	l825
  3300  000C04                     u4140:
  3301  000C04                     l3363:
  3302                           
  3303                           ; BSR set to: 0
  3304  000C04  0E00               	movlw	0
  3305  000C06  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3306  000C08  0E06               	movlw	6
  3307  000C0A  6F7C               	movwf	efgtoa@p& (0+255),b
  3308  000C0C  EF17  F006         	goto	l3371
  3309  000C10                     l825:
  3310                           
  3311                           ; BSR set to: 0
  3312  000C10  C05C  F07C         	movff	_prec,efgtoa@p
  3313  000C14  C05D  F07D         	movff	_prec+1,efgtoa@p+1
  3314  000C18  EF17  F006         	goto	l3371
  3315  000C1C                     l3365:
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3319  000C1C  BE5D               	btfsc	(_prec+1)^0,7,c
  3320  000C1E  EF13  F006         	goto	u4151
  3321  000C22  EF15  F006         	goto	u4150
  3322  000C26                     u4151:
  3323  000C26  EF02  F006         	goto	l3363
  3324  000C2A                     u4150:
  3325  000C2A  EF08  F006         	goto	l825
  3326  000C2E                     l3371:
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3330  000C2E  0E67               	movlw	103
  3331  000C30  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3332  000C32  A4D8               	btfss	status,2,c
  3333  000C34  EF1E  F006         	goto	u4161
  3334  000C38  EF20  F006         	goto	u4160
  3335  000C3C                     u4161:
  3336  000C3C  EF4F  F006         	goto	l3381
  3337  000C40                     u4160:
  3338  000C40                     
  3339                           ; BSR set to: 0
  3340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3341  000C40  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3342  000C42  EF2E  F006         	goto	u4170
  3343  000C46  0EFC               	movlw	252
  3344  000C48  5D90               	subwf	efgtoa@e& (0+255),w,b
  3345  000C4A  0EFF               	movlw	255
  3346  000C4C  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3347  000C4E  A0D8               	btfss	status,0,c
  3348  000C50  EF2C  F006         	goto	u4171
  3349  000C54  EF2E  F006         	goto	u4170
  3350  000C58                     u4171:
  3351  000C58  EF4D  F006         	goto	l3379
  3352  000C5C                     u4170:
  3353  000C5C                     
  3354                           ; BSR set to: 0
  3355  000C5C  0EFF               	movlw	255
  3356  000C5E  6E35               	movwf	??_efgtoa^0,c
  3357  000C60  0EFF               	movlw	255
  3358  000C62  6E36               	movwf	(??_efgtoa+1)^0,c
  3359  000C64  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  3360  000C68  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  3361  000C6C  5035               	movf	??_efgtoa^0,w,c
  3362  000C6E  2637               	addwf	(??_efgtoa+2)^0,f,c
  3363  000C70  5036               	movf	(??_efgtoa+1)^0,w,c
  3364  000C72  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3365  000C74  5190               	movf	efgtoa@e& (0+255),w,b
  3366  000C76  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3367  000C78  5038               	movf	(??_efgtoa+3)^0,w,c
  3368  000C7A  0A80               	xorlw	128
  3369  000C7C  6E39               	movwf	(??_efgtoa+4)^0,c
  3370  000C7E  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3371  000C80  0A80               	xorlw	128
  3372  000C82  5839               	subwfb	(??_efgtoa+4)^0,w,c
  3373  000C84  A0D8               	btfss	status,0,c
  3374  000C86  EF47  F006         	goto	u4181
  3375  000C8A  EF49  F006         	goto	u4180
  3376  000C8E                     u4181:
  3377  000C8E  EF4D  F006         	goto	l3379
  3378  000C92                     u4180:
  3379  000C92                     
  3380                           ; BSR set to: 0
  3381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3382  000C92  0E66               	movlw	102
  3383  000C94  6F80               	movwf	efgtoa@nmode& (0+255),b
  3384                           
  3385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3386  000C96  EF4F  F006         	goto	l3381
  3387  000C9A                     l3379:
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3391  000C9A  0E65               	movlw	101
  3392  000C9C  6F80               	movwf	efgtoa@nmode& (0+255),b
  3393  000C9E                     l3381:
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3397  000C9E  C07C  F072         	movff	efgtoa@p,efgtoa@m
  3398  000CA2  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  3399  000CA6                     
  3400                           ; BSR set to: 0
  3401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3402  000CA6  0E67               	movlw	103
  3403  000CA8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3404  000CAA  A4D8               	btfss	status,2,c
  3405  000CAC  EF5A  F006         	goto	u4191
  3406  000CB0  EF5C  F006         	goto	u4190
  3407  000CB4                     u4191:
  3408  000CB4  EF6C  F006         	goto	l3389
  3409  000CB8                     u4190:
  3410  000CB8                     
  3411                           ; BSR set to: 0
  3412  000CB8  0E66               	movlw	102
  3413  000CBA  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3414  000CBC  A4D8               	btfss	status,2,c
  3415  000CBE  EF63  F006         	goto	u4201
  3416  000CC2  EF65  F006         	goto	u4200
  3417  000CC6                     u4201:
  3418  000CC6  EF6E  F006         	goto	l3391
  3419  000CCA                     u4200:
  3420  000CCA                     
  3421                           ; BSR set to: 0
  3422  000CCA  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3423  000CCC  EF6C  F006         	goto	u4210
  3424  000CD0  EF6A  F006         	goto	u4211
  3425  000CD4                     u4211:
  3426  000CD4  EF6E  F006         	goto	l3391
  3427  000CD8                     u4210:
  3428  000CD8                     l3389:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3432  000CD8  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3433  000CDA  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3434  000CDC                     l3391:
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3438  000CDC  0E66               	movlw	102
  3439  000CDE  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3440  000CE0  A4D8               	btfss	status,2,c
  3441  000CE2  EF75  F006         	goto	u4221
  3442  000CE6  EF77  F006         	goto	u4220
  3443  000CEA                     u4221:
  3444  000CEA  EF97  F006         	goto	l3401
  3445  000CEE                     u4220:
  3446  000CEE                     
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3449  000CEE  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3450  000CF0  EF7E  F006         	goto	u4230
  3451  000CF4  EF7C  F006         	goto	u4231
  3452  000CF8                     u4231:
  3453  000CF8  EF8A  F006         	goto	l3397
  3454  000CFC                     u4230:
  3455  000CFC                     
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3458  000CFC  0E00               	movlw	0
  3459  000CFE  6F94               	movwf	efgtoa@u& (0+255),b
  3460  000D00  0E00               	movlw	0
  3461  000D02  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3462  000D04  0E80               	movlw	128
  3463  000D06  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3464  000D08  0E3F               	movlw	63
  3465  000D0A  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3466                           
  3467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3468  000D0C  0E00               	movlw	0
  3469  000D0E  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3470  000D10  0E00               	movlw	0
  3471  000D12  6F90               	movwf	efgtoa@e& (0+255),b
  3472  000D14                     l3397:
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3476  000D14  0E67               	movlw	103
  3477  000D16  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3478  000D18  B4D8               	btfsc	status,2,c
  3479  000D1A  EF91  F006         	goto	u4241
  3480  000D1E  EF93  F006         	goto	u4240
  3481  000D22                     u4241:
  3482  000D22  EF97  F006         	goto	l3401
  3483  000D26                     u4240:
  3484  000D26                     
  3485                           ; BSR set to: 0
  3486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3487  000D26  5190               	movf	efgtoa@e& (0+255),w,b
  3488  000D28  2772               	addwf	efgtoa@m& (0+255),f,b
  3489  000D2A  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3490  000D2C  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3491  000D2E                     l3401:
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3495  000D2E  0E00               	movlw	0
  3496  000D30  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3497  000D32  0E00               	movlw	0
  3498  000D34  6F8A               	movwf	efgtoa@i& (0+255),b
  3499  000D36                     
  3500                           ; BSR set to: 0
  3501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3502  000D36  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3503  000D3A  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3504  000D3E  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3505  000D42  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3506  000D46                     
  3507                           ; BSR set to: 0
  3508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3509  000D46  C094  F074         	movff	efgtoa@u,efgtoa@ou
  3510  000D4A  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  3511  000D4E  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  3512  000D52  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  3513                           
  3514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3515  000D56  EF28  F007         	goto	l3415
  3516  000D5A                     l3407:
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3520  000D5A  C082  F001         	movff	efgtoa@h,___fldiv@b
  3521  000D5E  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3522  000D62  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3523  000D66  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3524  000D6A  C094  F005         	movff	efgtoa@u,___fldiv@a
  3525  000D6E  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3526  000D72  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3527  000D76  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3528  000D7A  EC61  F011         	call	___fldiv	;wreg free
  3529  000D7E  C001  F01A         	movff	?___fldiv,floorf@x
  3530  000D82  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3531  000D86  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3532  000D8A  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3533  000D8E  EC5F  F014         	call	_floorf	;wreg free
  3534  000D92  C01A  F086         	movff	?_floorf,efgtoa@l
  3535  000D96  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3536  000D9A  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3537  000D9E  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3538                           
  3539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3540  000DA2  C086  F001         	movff	efgtoa@l,___fltol@f1
  3541  000DA6  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3542  000DAA  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3543  000DAE  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3544  000DB2  ECB5  F016         	call	___fltol	;wreg free
  3545  000DB6  C001  F078         	movff	?___fltol,efgtoa@d
  3546  000DBA  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3547  000DBE                     
  3548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3549  000DBE  C082  F01A         	movff	efgtoa@h,___flsub@b
  3550  000DC2  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3551  000DC6  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3552  000DCA  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3553  000DCE  C094  F005         	movff	efgtoa@u,___flmul@a
  3554  000DD2  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3555  000DD6  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3556  000DDA  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3557  000DDE  C086  F001         	movff	efgtoa@l,___flmul@b
  3558  000DE2  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3559  000DE6  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3560  000DEA  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3561  000DEE  EC4C  F00F         	call	___flmul	;wreg free
  3562  000DF2  C001  F01E         	movff	?___flmul,___flsub@a
  3563  000DF6  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3564  000DFA  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3565  000DFE  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3566  000E02  ECE6  F01B         	call	___flsub	;wreg free
  3567  000E06  C01A  F082         	movff	?___flsub,efgtoa@h
  3568  000E0A  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3569  000E0E  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3570  000E12  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3571  000E16                     
  3572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3573  000E16  C094  F001         	movff	efgtoa@u,___fldiv@b
  3574  000E1A  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3575  000E1E  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3576  000E22  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3577  000E26  0E00               	movlw	0
  3578  000E28  6E05               	movwf	___fldiv@a^0,c
  3579  000E2A  0E00               	movlw	0
  3580  000E2C  6E06               	movwf	(___fldiv@a+1)^0,c
  3581  000E2E  0E20               	movlw	32
  3582  000E30  6E07               	movwf	(___fldiv@a+2)^0,c
  3583  000E32  0E41               	movlw	65
  3584  000E34  6E08               	movwf	(___fldiv@a+3)^0,c
  3585  000E36  EC61  F011         	call	___fldiv	;wreg free
  3586  000E3A  C001  F094         	movff	?___fldiv,efgtoa@u
  3587  000E3E  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3588  000E42  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3589  000E46  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3590  000E4A                     
  3591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3592  000E4A  0100               	movlb	0	; () banked
  3593  000E4C  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3594  000E4E  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3595  000E50                     l3415:
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3599  000E50  5172               	movf	efgtoa@m& (0+255),w,b
  3600  000E52  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3601  000E54  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3602  000E56  0A80               	xorlw	128
  3603  000E58  6E35               	movwf	??_efgtoa^0,c
  3604  000E5A  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3605  000E5C  0A80               	xorlw	128
  3606  000E5E  5835               	subwfb	??_efgtoa^0,w,c
  3607  000E60  A0D8               	btfss	status,0,c
  3608  000E62  EF35  F007         	goto	u4251
  3609  000E66  EF37  F007         	goto	u4250
  3610  000E6A                     u4251:
  3611  000E6A  EFAD  F006         	goto	l3407
  3612  000E6E                     u4250:
  3613  000E6E                     
  3614                           ; BSR set to: 0
  3615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3616  000E6E  C094  F001         	movff	efgtoa@u,___flmul@b
  3617  000E72  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3618  000E76  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3619  000E7A  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3620  000E7E  0E00               	movlw	0
  3621  000E80  6E05               	movwf	___flmul@a^0,c
  3622  000E82  0E00               	movlw	0
  3623  000E84  6E06               	movwf	(___flmul@a+1)^0,c
  3624  000E86  0EA0               	movlw	160
  3625  000E88  6E07               	movwf	(___flmul@a+2)^0,c
  3626  000E8A  0E40               	movlw	64
  3627  000E8C  6E08               	movwf	(___flmul@a+3)^0,c
  3628  000E8E  EC4C  F00F         	call	___flmul	;wreg free
  3629  000E92  C001  F086         	movff	?___flmul,efgtoa@l
  3630  000E96  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  3631  000E9A  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  3632  000E9E  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  3633  000EA2                     
  3634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3635  000EA2  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3636  000EA6  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3637  000EAA  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3638  000EAE  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3639  000EB2  C086  F01E         	movff	efgtoa@l,___flge@ff2
  3640  000EB6  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3641  000EBA  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3642  000EBE  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3643  000EC2  EC38  F017         	call	___flge	;wreg free
  3644  000EC6  B0D8               	btfsc	status,0,c
  3645  000EC8  EF68  F007         	goto	u4261
  3646  000ECC  EF6A  F007         	goto	u4260
  3647  000ED0                     u4261:
  3648  000ED0  EF75  F007         	goto	l3423
  3649  000ED4                     u4260:
  3650  000ED4                     
  3651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3652  000ED4  0E00               	movlw	0
  3653  000ED6  0100               	movlb	0	; () banked
  3654  000ED8  6F86               	movwf	efgtoa@l& (0+255),b
  3655  000EDA  0E00               	movlw	0
  3656  000EDC  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3657  000EDE  0E00               	movlw	0
  3658  000EE0  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3659  000EE2  0E00               	movlw	0
  3660  000EE4  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3661                           
  3662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3663  000EE6  EF9E  F007         	goto	l3429
  3664  000EEA                     l3423:
  3665                           
  3666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3667  000EEA  C082  F001         	movff	efgtoa@h,___fleq@ff1
  3668  000EEE  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3669  000EF2  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3670  000EF6  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3671  000EFA  C086  F005         	movff	efgtoa@l,___fleq@ff2
  3672  000EFE  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3673  000F02  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3674  000F06  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3675  000F0A  EC24  F01A         	call	___fleq	;wreg free
  3676  000F0E  A0D8               	btfss	status,0,c
  3677  000F10  EF8C  F007         	goto	u4271
  3678  000F14  EF8E  F007         	goto	u4270
  3679  000F18                     u4271:
  3680  000F18  EF9E  F007         	goto	l3429
  3681  000F1C                     u4270:
  3682  000F1C  0100               	movlb	0	; () banked
  3683  000F1E  B178               	btfsc	efgtoa@d& (0+255),0,b
  3684  000F20  EF94  F007         	goto	u4281
  3685  000F24  EF96  F007         	goto	u4280
  3686  000F28                     u4281:
  3687  000F28  EF9E  F007         	goto	l3429
  3688  000F2C                     u4280:
  3689  000F2C                     
  3690                           ; BSR set to: 0
  3691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3692  000F2C  0E00               	movlw	0
  3693  000F2E  6F86               	movwf	efgtoa@l& (0+255),b
  3694  000F30  0E00               	movlw	0
  3695  000F32  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3696  000F34  0E00               	movlw	0
  3697  000F36  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3698  000F38  0E00               	movlw	0
  3699  000F3A  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3700  000F3C                     l3429:
  3701                           
  3702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3703  000F3C  C08C  F001         	movff	efgtoa@g,___fladd@b
  3704  000F40  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  3705  000F44  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  3706  000F48  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  3707  000F4C  C086  F005         	movff	efgtoa@l,___fladd@a
  3708  000F50  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3709  000F54  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3710  000F58  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3711  000F5C  ECEC  F00C         	call	___fladd	;wreg free
  3712  000F60  C001  F082         	movff	?___fladd,efgtoa@h
  3713  000F64  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3714  000F68  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3715  000F6C  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3716  000F70                     
  3717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3718  000F70  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3719  000F74  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3720  000F78  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3721  000F7C  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3722  000F80  0E00               	movlw	0
  3723  000F82  6E05               	movwf	___flmul@a^0,c
  3724  000F84  0E00               	movlw	0
  3725  000F86  6E06               	movwf	(___flmul@a+1)^0,c
  3726  000F88  0E20               	movlw	32
  3727  000F8A  6E07               	movwf	(___flmul@a+2)^0,c
  3728  000F8C  0E41               	movlw	65
  3729  000F8E  6E08               	movwf	(___flmul@a+3)^0,c
  3730  000F90  C074  F001         	movff	efgtoa@ou,___flmul@b
  3731  000F94  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3732  000F98  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3733  000F9C  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3734  000FA0  EC4C  F00F         	call	___flmul	;wreg free
  3735  000FA4  C001  F01E         	movff	?___flmul,___flge@ff2
  3736  000FA8  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3737  000FAC  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3738  000FB0  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3739  000FB4  EC38  F017         	call	___flge	;wreg free
  3740  000FB8  A0D8               	btfss	status,0,c
  3741  000FBA  EFE1  F007         	goto	u4291
  3742  000FBE  EFE3  F007         	goto	u4290
  3743  000FC2                     u4291:
  3744  000FC2  EF0C  F008         	goto	l3441
  3745  000FC6                     u4290:
  3746  000FC6                     
  3747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3748  000FC6  0100               	movlb	0	; () banked
  3749  000FC8  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3750  000FCA  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3751  000FCC                     
  3752                           ; BSR set to: 0
  3753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3754  000FCC  C074  F001         	movff	efgtoa@ou,___flmul@b
  3755  000FD0  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3756  000FD4  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3757  000FD8  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3758  000FDC  0E00               	movlw	0
  3759  000FDE  6E05               	movwf	___flmul@a^0,c
  3760  000FE0  0E00               	movlw	0
  3761  000FE2  6E06               	movwf	(___flmul@a+1)^0,c
  3762  000FE4  0E20               	movlw	32
  3763  000FE6  6E07               	movwf	(___flmul@a+2)^0,c
  3764  000FE8  0E41               	movlw	65
  3765  000FEA  6E08               	movwf	(___flmul@a+3)^0,c
  3766  000FEC  EC4C  F00F         	call	___flmul	;wreg free
  3767  000FF0  C001  F074         	movff	?___flmul,efgtoa@ou
  3768  000FF4  C002  F075         	movff	?___flmul+1,efgtoa@ou+1
  3769  000FF8  C003  F076         	movff	?___flmul+2,efgtoa@ou+2
  3770  000FFC  C004  F077         	movff	?___flmul+3,efgtoa@ou+3
  3771  001000                     
  3772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3773  001000  0E66               	movlw	102
  3774  001002  0100               	movlb	0	; () banked
  3775  001004  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3776  001006  A4D8               	btfss	status,2,c
  3777  001008  EF08  F008         	goto	u4301
  3778  00100C  EF0A  F008         	goto	u4300
  3779  001010                     u4301:
  3780  001010  EF0C  F008         	goto	l3441
  3781  001014                     u4300:
  3782  001014                     
  3783                           ; BSR set to: 0
  3784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3785  001014  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3786  001016  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3787  001018                     l3441:
  3788                           
  3789                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3790  001018  C074  F094         	movff	efgtoa@ou,efgtoa@u
  3791  00101C  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3792  001020  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3793  001024  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3794  001028                     
  3795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3796  001028  0E65               	movlw	101
  3797  00102A  0100               	movlb	0	; () banked
  3798  00102C  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3799  00102E  B4D8               	btfsc	status,2,c
  3800  001030  EF1C  F008         	goto	u4311
  3801  001034  EF1E  F008         	goto	u4310
  3802  001038                     u4311:
  3803  001038  EF24  F008         	goto	l3447
  3804  00103C                     u4310:
  3805  00103C                     
  3806                           ; BSR set to: 0
  3807  00103C  C090  F070         	movff	efgtoa@e,efgtoa@ne
  3808  001040  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  3809  001044  EF28  F008         	goto	l853
  3810  001048                     l3447:
  3811                           
  3812                           ; BSR set to: 0
  3813  001048  0E00               	movlw	0
  3814  00104A  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  3815  00104C  0E00               	movlw	0
  3816  00104E  6F70               	movwf	efgtoa@ne& (0+255),b
  3817  001050                     l853:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3821  001050  0E00               	movlw	0
  3822  001052  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3823  001054  0E00               	movlw	0
  3824  001056  6F6E               	movwf	efgtoa@pp& (0+255),b
  3825                           
  3826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3827  001058  0E00               	movlw	0
  3828  00105A  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  3829  00105C  0E00               	movlw	0
  3830  00105E  6F6C               	movwf	efgtoa@t& (0+255),b
  3831                           
  3832                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3833  001060  0E00               	movlw	0
  3834  001062  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3835  001064  0E00               	movlw	0
  3836  001066  6F8A               	movwf	efgtoa@i& (0+255),b
  3837                           
  3838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3839  001068  EF24  F009         	goto	l3497
  3840  00106C                     l3449:
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3844  00106C  C082  F001         	movff	efgtoa@h,___fldiv@b
  3845  001070  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3846  001074  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3847  001078  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3848  00107C  C094  F005         	movff	efgtoa@u,___fldiv@a
  3849  001080  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3850  001084  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3851  001088  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3852  00108C  EC61  F011         	call	___fldiv	;wreg free
  3853  001090  C001  F01A         	movff	?___fldiv,floorf@x
  3854  001094  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3855  001098  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3856  00109C  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3857  0010A0  EC5F  F014         	call	_floorf	;wreg free
  3858  0010A4  C01A  F086         	movff	?_floorf,efgtoa@l
  3859  0010A8  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3860  0010AC  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3861  0010B0  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3862                           
  3863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3864  0010B4  C086  F001         	movff	efgtoa@l,___fltol@f1
  3865  0010B8  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3866  0010BC  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3867  0010C0  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3868  0010C4  ECB5  F016         	call	___fltol	;wreg free
  3869  0010C8  C001  F078         	movff	?___fltol,efgtoa@d
  3870  0010CC  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3871  0010D0                     
  3872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3873  0010D0  B85E               	btfsc	_flags^0,4,c
  3874  0010D2  EF6D  F008         	goto	u4321
  3875  0010D6  EF6F  F008         	goto	u4320
  3876  0010DA                     u4321:
  3877  0010DA  EF8D  F008         	goto	l3461
  3878  0010DE                     u4320:
  3879  0010DE  0100               	movlb	0	; () banked
  3880  0010E0  5178               	movf	efgtoa@d& (0+255),w,b
  3881  0010E2  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3882  0010E4  A4D8               	btfss	status,2,c
  3883  0010E6  EF77  F008         	goto	u4331
  3884  0010EA  EF79  F008         	goto	u4330
  3885  0010EE                     u4331:
  3886  0010EE  EF8D  F008         	goto	l3461
  3887  0010F2                     u4330:
  3888  0010F2                     
  3889                           ; BSR set to: 0
  3890  0010F2  0E67               	movlw	103
  3891  0010F4  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3892  0010F6  A4D8               	btfss	status,2,c
  3893  0010F8  EF80  F008         	goto	u4341
  3894  0010FC  EF82  F008         	goto	u4340
  3895  001100                     u4341:
  3896  001100  EF8D  F008         	goto	l3461
  3897  001104                     u4340:
  3898  001104                     
  3899                           ; BSR set to: 0
  3900  001104  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3901  001106  EF89  F008         	goto	u4350
  3902  00110A  EF87  F008         	goto	u4351
  3903  00110E                     u4351:
  3904  00110E  EF8D  F008         	goto	l3461
  3905  001112                     u4350:
  3906  001112                     
  3907                           ; BSR set to: 0
  3908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3909  001112  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  3910  001114  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  3911                           
  3912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3913  001116  EFD8  F008         	goto	l3489
  3914  00111A                     l3461:
  3915                           
  3916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3917  00111A  0100               	movlb	0	; () banked
  3918  00111C  516E               	movf	efgtoa@pp& (0+255),w,b
  3919  00111E  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3920  001120  A4D8               	btfss	status,2,c
  3921  001122  EF95  F008         	goto	u4361
  3922  001126  EF97  F008         	goto	u4360
  3923  00112A                     u4361:
  3924  00112A  EFC1  F008         	goto	l3481
  3925  00112E                     u4360:
  3926  00112E                     
  3927                           ; BSR set to: 0
  3928  00112E  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3929  001130  EF9E  F008         	goto	u4370
  3930  001134  EF9C  F008         	goto	u4371
  3931  001138                     u4371:
  3932  001138  EFC1  F008         	goto	l3481
  3933  00113C                     u4370:
  3934  00113C                     
  3935                           ; BSR set to: 0
  3936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3937  00113C  0E00               	movlw	low _dbuf
  3938  00113E  2592               	addwf	efgtoa@n& (0+255),w,b
  3939  001140  6ED9               	movwf	fsr2l,c
  3940  001142  0E01               	movlw	high _dbuf
  3941  001144  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3942  001146  6EDA               	movwf	fsr2h,c
  3943  001148  0E2E               	movlw	46
  3944  00114A  6EDF               	movwf	indf2,c
  3945  00114C                     
  3946                           ; BSR set to: 0
  3947  00114C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3948  00114E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3949  001150                     
  3950                           ; BSR set to: 0
  3951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3952  001150  077E               	decf	efgtoa@w& (0+255),f,b
  3953  001152  A0D8               	btfss	status,0,c
  3954  001154  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3955  001156                     
  3956                           ; BSR set to: 0
  3957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3958  001156  0E00               	movlw	0
  3959  001158  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3960  00115A  0E01               	movlw	1
  3961  00115C  6F6E               	movwf	efgtoa@pp& (0+255),b
  3962  00115E  EFC1  F008         	goto	l3481
  3963  001162                     l3473:
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3967  001162  0E00               	movlw	low _dbuf
  3968  001164  2592               	addwf	efgtoa@n& (0+255),w,b
  3969  001166  6ED9               	movwf	fsr2l,c
  3970  001168  0E01               	movlw	high _dbuf
  3971  00116A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3972  00116C  6EDA               	movwf	fsr2h,c
  3973  00116E  0E30               	movlw	48
  3974  001170  6EDF               	movwf	indf2,c
  3975  001172                     
  3976                           ; BSR set to: 0
  3977  001172  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3978  001174  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3979  001176                     
  3980                           ; BSR set to: 0
  3981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3982  001176  077E               	decf	efgtoa@w& (0+255),f,b
  3983  001178  A0D8               	btfss	status,0,c
  3984  00117A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3985  00117C                     
  3986                           ; BSR set to: 0
  3987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3988  00117C  076C               	decf	efgtoa@t& (0+255),f,b
  3989  00117E  A0D8               	btfss	status,0,c
  3990  001180  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  3991  001182                     l3481:
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3995  001182  516C               	movf	efgtoa@t& (0+255),w,b
  3996  001184  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3997  001186  A4D8               	btfss	status,2,c
  3998  001188  EFC8  F008         	goto	u4381
  3999  00118C  EFCA  F008         	goto	u4380
  4000  001190                     u4381:
  4001  001190  EFB1  F008         	goto	l3473
  4002  001194                     u4380:
  4003  001194                     
  4004                           ; BSR set to: 0
  4005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4006  001194  0E00               	movlw	low _dbuf
  4007  001196  2592               	addwf	efgtoa@n& (0+255),w,b
  4008  001198  6ED9               	movwf	fsr2l,c
  4009  00119A  0E01               	movlw	high _dbuf
  4010  00119C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4011  00119E  6EDA               	movwf	fsr2h,c
  4012  0011A0  5178               	movf	efgtoa@d& (0+255),w,b
  4013  0011A2  0F30               	addlw	48
  4014  0011A4  6EDF               	movwf	indf2,c
  4015  0011A6                     
  4016                           ; BSR set to: 0
  4017  0011A6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4018  0011A8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4019  0011AA                     
  4020                           ; BSR set to: 0
  4021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4022  0011AA  077E               	decf	efgtoa@w& (0+255),f,b
  4023  0011AC  A0D8               	btfss	status,0,c
  4024  0011AE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4025  0011B0                     l3489:
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4029  0011B0  C082  F01A         	movff	efgtoa@h,___flsub@b
  4030  0011B4  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4031  0011B8  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4032  0011BC  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4033  0011C0  C094  F005         	movff	efgtoa@u,___flmul@a
  4034  0011C4  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  4035  0011C8  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  4036  0011CC  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  4037  0011D0  C086  F001         	movff	efgtoa@l,___flmul@b
  4038  0011D4  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  4039  0011D8  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  4040  0011DC  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  4041  0011E0  EC4C  F00F         	call	___flmul	;wreg free
  4042  0011E4  C001  F01E         	movff	?___flmul,___flsub@a
  4043  0011E8  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4044  0011EC  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4045  0011F0  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4046  0011F4  ECE6  F01B         	call	___flsub	;wreg free
  4047  0011F8  C01A  F082         	movff	?___flsub,efgtoa@h
  4048  0011FC  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  4049  001200  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  4050  001204  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  4051  001208                     
  4052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4053  001208  C094  F001         	movff	efgtoa@u,___fldiv@b
  4054  00120C  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4055  001210  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4056  001214  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4057  001218  0E00               	movlw	0
  4058  00121A  6E05               	movwf	___fldiv@a^0,c
  4059  00121C  0E00               	movlw	0
  4060  00121E  6E06               	movwf	(___fldiv@a+1)^0,c
  4061  001220  0E20               	movlw	32
  4062  001222  6E07               	movwf	(___fldiv@a+2)^0,c
  4063  001224  0E41               	movlw	65
  4064  001226  6E08               	movwf	(___fldiv@a+3)^0,c
  4065  001228  EC61  F011         	call	___fldiv	;wreg free
  4066  00122C  C001  F094         	movff	?___fldiv,efgtoa@u
  4067  001230  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4068  001234  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4069  001238  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4070  00123C                     
  4071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4072  00123C  0100               	movlb	0	; () banked
  4073  00123E  0770               	decf	efgtoa@ne& (0+255),f,b
  4074  001240  A0D8               	btfss	status,0,c
  4075  001242  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  4076  001244                     
  4077                           ; BSR set to: 0
  4078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4079  001244  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4080  001246  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4081  001248                     l3497:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4085  001248  5172               	movf	efgtoa@m& (0+255),w,b
  4086  00124A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4087  00124C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4088  00124E  0A80               	xorlw	128
  4089  001250  6E35               	movwf	??_efgtoa^0,c
  4090  001252  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  4091  001254  0A80               	xorlw	128
  4092  001256  5835               	subwfb	??_efgtoa^0,w,c
  4093  001258  B0D8               	btfsc	status,0,c
  4094  00125A  EF31  F009         	goto	u4391
  4095  00125E  EF33  F009         	goto	u4390
  4096  001262                     u4391:
  4097  001262  EF41  F009         	goto	l3501
  4098  001266                     u4390:
  4099  001266                     
  4100                           ; BSR set to: 0
  4101  001266  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4102  001268  EF3F  F009         	goto	u4401
  4103  00126C  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4104  00126E  E109               	bnz	u4400
  4105  001270  0E4B               	movlw	75
  4106  001272  5D92               	subwf	efgtoa@n& (0+255),w,b
  4107  001274  A0D8               	btfss	status,0,c
  4108  001276  EF3F  F009         	goto	u4401
  4109  00127A  EF41  F009         	goto	u4400
  4110  00127E                     u4401:
  4111  00127E  EF36  F008         	goto	l3449
  4112  001282                     u4400:
  4113  001282                     l3501:
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4117  001282  516E               	movf	efgtoa@pp& (0+255),w,b
  4118  001284  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4119  001286  A4D8               	btfss	status,2,c
  4120  001288  EF48  F009         	goto	u4411
  4121  00128C  EF4A  F009         	goto	u4410
  4122  001290                     u4411:
  4123  001290  EF5B  F009         	goto	l3509
  4124  001294                     u4410:
  4125  001294                     
  4126                           ; BSR set to: 0
  4127  001294  A85E               	btfss	_flags^0,4,c
  4128  001296  EF4F  F009         	goto	u4421
  4129  00129A  EF51  F009         	goto	u4420
  4130  00129E                     u4421:
  4131  00129E  EF5B  F009         	goto	l3509
  4132  0012A2                     u4420:
  4133  0012A2                     
  4134                           ; BSR set to: 0
  4135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4136  0012A2  0E00               	movlw	low _dbuf
  4137  0012A4  2592               	addwf	efgtoa@n& (0+255),w,b
  4138  0012A6  6ED9               	movwf	fsr2l,c
  4139  0012A8  0E01               	movlw	high _dbuf
  4140  0012AA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4141  0012AC  6EDA               	movwf	fsr2h,c
  4142  0012AE  0E2E               	movlw	46
  4143  0012B0  6EDF               	movwf	indf2,c
  4144  0012B2                     
  4145                           ; BSR set to: 0
  4146  0012B2  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4147  0012B4  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4148  0012B6                     l3509:
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4152  0012B6  0E00               	movlw	low _dbuf
  4153  0012B8  2592               	addwf	efgtoa@n& (0+255),w,b
  4154  0012BA  6ED9               	movwf	fsr2l,c
  4155  0012BC  0E01               	movlw	high _dbuf
  4156  0012BE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4157  0012C0  6EDA               	movwf	fsr2h,c
  4158  0012C2  0E00               	movlw	0
  4159  0012C4  6EDF               	movwf	indf2,c
  4160  0012C6                     
  4161                           ; BSR set to: 0
  4162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4163  0012C6  0E65               	movlw	101
  4164  0012C8  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4165  0012CA  A4D8               	btfss	status,2,c
  4166  0012CC  EF6A  F009         	goto	u4431
  4167  0012D0  EF6C  F009         	goto	u4430
  4168  0012D4                     u4431:
  4169  0012D4  EFC5  F004         	goto	l3311
  4170  0012D8                     u4430:
  4171  0012D8                     
  4172                           ; BSR set to: 0
  4173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4174  0012D8  0E00               	movlw	0
  4175  0012DA  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4176  0012DC  0E4F               	movlw	79
  4177  0012DE  6F8A               	movwf	efgtoa@i& (0+255),b
  4178  0012E0                     
  4179                           ; BSR set to: 0
  4180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4181  0012E0  0E00               	movlw	low _dbuf
  4182  0012E2  258A               	addwf	efgtoa@i& (0+255),w,b
  4183  0012E4  6ED9               	movwf	fsr2l,c
  4184  0012E6  0E01               	movlw	high _dbuf
  4185  0012E8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4186  0012EA  6EDA               	movwf	fsr2h,c
  4187  0012EC  0E00               	movlw	0
  4188  0012EE  6EDF               	movwf	indf2,c
  4189  0012F0                     
  4190                           ; BSR set to: 0
  4191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4192  0012F0  0E00               	movlw	0
  4193  0012F2  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4194  0012F4  0E00               	movlw	0
  4195  0012F6  6F7A               	movwf	efgtoa@sign& (0+255),b
  4196  0012F8                     
  4197                           ; BSR set to: 0
  4198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4199  0012F8  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4200  0012FA  EF83  F009         	goto	u4440
  4201  0012FE  EF81  F009         	goto	u4441
  4202  001302                     u4441:
  4203  001302  EF8B  F009         	goto	l3525
  4204  001306                     u4440:
  4205  001306                     
  4206                           ; BSR set to: 0
  4207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4208  001306  0E00               	movlw	0
  4209  001308  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4210  00130A  0E01               	movlw	1
  4211  00130C  6F7A               	movwf	efgtoa@sign& (0+255),b
  4212  00130E                     
  4213                           ; BSR set to: 0
  4214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4215  00130E  6D90               	negf	efgtoa@e& (0+255),b
  4216  001310  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4217  001312  B0D8               	btfsc	status,0,c
  4218  001314  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4219  001316                     l3525:
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4223  001316  0E00               	movlw	0
  4224  001318  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4225  00131A  0E02               	movlw	2
  4226  00131C  6F7C               	movwf	efgtoa@p& (0+255),b
  4227                           
  4228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4229  00131E  EFBC  F009         	goto	l3537
  4230  001322                     l3527:
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4234  001322  078A               	decf	efgtoa@i& (0+255),f,b
  4235  001324  A0D8               	btfss	status,0,c
  4236  001326  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4237  001328                     
  4238                           ; BSR set to: 0
  4239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4240  001328  0E00               	movlw	low _dbuf
  4241  00132A  258A               	addwf	efgtoa@i& (0+255),w,b
  4242  00132C  6ED9               	movwf	fsr2l,c
  4243  00132E  0E01               	movlw	high _dbuf
  4244  001330  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4245  001332  6EDA               	movwf	fsr2h,c
  4246  001334  C090  F001         	movff	efgtoa@e,___awmod@dividend
  4247  001338  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4248  00133C  0E00               	movlw	0
  4249  00133E  6E04               	movwf	(___awmod@divisor+1)^0,c
  4250  001340  0E0A               	movlw	10
  4251  001342  6E03               	movwf	___awmod@divisor^0,c
  4252  001344  ECCC  F019         	call	___awmod	;wreg free
  4253  001348  5001               	movf	?___awmod^0,w,c
  4254  00134A  0F30               	addlw	48
  4255  00134C  6EDF               	movwf	indf2,c
  4256  00134E                     
  4257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4258  00134E  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  4259  001352  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4260  001356  0E00               	movlw	0
  4261  001358  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4262  00135A  0E0A               	movlw	10
  4263  00135C  6E03               	movwf	___awdiv@divisor^0,c
  4264  00135E  EC09  F019         	call	___awdiv	;wreg free
  4265  001362  C001  F090         	movff	?___awdiv,efgtoa@e
  4266  001366  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  4267  00136A                     
  4268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4269  00136A  0100               	movlb	0	; () banked
  4270  00136C  077C               	decf	efgtoa@p& (0+255),f,b
  4271  00136E  A0D8               	btfss	status,0,c
  4272  001370  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4273  001372                     
  4274                           ; BSR set to: 0
  4275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4276  001372  077E               	decf	efgtoa@w& (0+255),f,b
  4277  001374  A0D8               	btfss	status,0,c
  4278  001376  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4279  001378                     l3537:
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4283  001378  5190               	movf	efgtoa@e& (0+255),w,b
  4284  00137A  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4285  00137C  A4D8               	btfss	status,2,c
  4286  00137E  EFC3  F009         	goto	u4451
  4287  001382  EFC5  F009         	goto	u4450
  4288  001386                     u4451:
  4289  001386  EF91  F009         	goto	l3527
  4290  00138A                     u4450:
  4291  00138A                     
  4292                           ; BSR set to: 0
  4293  00138A  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4294  00138C  EFD2  F009         	goto	u4460
  4295  001390  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4296  001392  E106               	bnz	u4461
  4297  001394  057C               	decf	efgtoa@p& (0+255),w,b
  4298  001396  B0D8               	btfsc	status,0,c
  4299  001398  EFD0  F009         	goto	u4461
  4300  00139C  EFD2  F009         	goto	u4460
  4301  0013A0                     u4461:
  4302  0013A0  EF91  F009         	goto	l3527
  4303  0013A4                     u4460:
  4304  0013A4                     
  4305                           ; BSR set to: 0
  4306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4307  0013A4  078A               	decf	efgtoa@i& (0+255),f,b
  4308  0013A6  A0D8               	btfss	status,0,c
  4309  0013A8  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4310  0013AA                     
  4311                           ; BSR set to: 0
  4312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4313  0013AA  517A               	movf	efgtoa@sign& (0+255),w,b
  4314  0013AC  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4315  0013AE  A4D8               	btfss	status,2,c
  4316  0013B0  EFDC  F009         	goto	u4471
  4317  0013B4  EFDE  F009         	goto	u4470
  4318  0013B8                     u4471:
  4319  0013B8  EFE4  F009         	goto	l3547
  4320  0013BC                     u4470:
  4321  0013BC                     
  4322                           ; BSR set to: 0
  4323  0013BC  0E00               	movlw	0
  4324  0013BE  6F67               	movwf	(_efgtoa$932+1)& (0+255),b
  4325  0013C0  0E2B               	movlw	43
  4326  0013C2  6F66               	movwf	_efgtoa$932& (0+255),b
  4327  0013C4  EFE8  F009         	goto	l3549
  4328  0013C8                     l3547:
  4329                           
  4330                           ; BSR set to: 0
  4331  0013C8  0E00               	movlw	0
  4332  0013CA  6F67               	movwf	(_efgtoa$932+1)& (0+255),b
  4333  0013CC  0E2D               	movlw	45
  4334  0013CE  6F66               	movwf	_efgtoa$932& (0+255),b
  4335  0013D0                     l3549:
  4336                           
  4337                           ; BSR set to: 0
  4338  0013D0  0E00               	movlw	low _dbuf
  4339  0013D2  258A               	addwf	efgtoa@i& (0+255),w,b
  4340  0013D4  6ED9               	movwf	fsr2l,c
  4341  0013D6  0E01               	movlw	high _dbuf
  4342  0013D8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4343  0013DA  6EDA               	movwf	fsr2h,c
  4344  0013DC  C066  FFDF         	movff	_efgtoa$932,indf2
  4345  0013E0                     
  4346                           ; BSR set to: 0
  4347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4348  0013E0  077E               	decf	efgtoa@w& (0+255),f,b
  4349  0013E2  A0D8               	btfss	status,0,c
  4350  0013E4  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4351  0013E6                     
  4352                           ; BSR set to: 0
  4353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4354  0013E6  078A               	decf	efgtoa@i& (0+255),f,b
  4355  0013E8  A0D8               	btfss	status,0,c
  4356  0013EA  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4357  0013EC                     
  4358                           ; BSR set to: 0
  4359  0013EC  0EBF               	movlw	191
  4360  0013EE  6E35               	movwf	??_efgtoa^0,c
  4361  0013F0  0EFF               	movlw	255
  4362  0013F2  6E36               	movwf	(??_efgtoa+1)^0,c
  4363  0013F4  5034               	movf	efgtoa@c^0,w,c
  4364  0013F6  6E37               	movwf	(??_efgtoa+2)^0,c
  4365  0013F8  6A38               	clrf	(??_efgtoa+3)^0,c
  4366  0013FA  5035               	movf	??_efgtoa^0,w,c
  4367  0013FC  2637               	addwf	(??_efgtoa+2)^0,f,c
  4368  0013FE  5036               	movf	(??_efgtoa+1)^0,w,c
  4369  001400  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4370  001402  5038               	movf	(??_efgtoa+3)^0,w,c
  4371  001404  E10A               	bnz	u4480
  4372  001406  0E1A               	movlw	26
  4373  001408  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4374  00140A  A0D8               	btfss	status,0,c
  4375  00140C  EF0A  F00A         	goto	u4481
  4376  001410  EF0D  F00A         	goto	u4480
  4377  001414                     u4481:
  4378  001414  0E01               	movlw	1
  4379  001416  EF0E  F00A         	goto	u4490
  4380  00141A                     u4480:
  4381  00141A  0E00               	movlw	0
  4382  00141C                     u4490:
  4383  00141C  6F6A               	movwf	_efgtoa$934& (0+255),b
  4384  00141E  6B6B               	clrf	(_efgtoa$934+1)& (0+255),b
  4385  001420                     
  4386                           ; BSR set to: 0
  4387  001420  516A               	movf	_efgtoa$934& (0+255),w,b
  4388  001422  116B               	iorwf	(_efgtoa$934+1)& (0+255),w,b
  4389  001424  A4D8               	btfss	status,2,c
  4390  001426  EF17  F00A         	goto	u4501
  4391  00142A  EF19  F00A         	goto	u4500
  4392  00142E                     u4501:
  4393  00142E  EF1F  F00A         	goto	l3563
  4394  001432                     u4500:
  4395  001432                     
  4396                           ; BSR set to: 0
  4397  001432  0E00               	movlw	0
  4398  001434  6F69               	movwf	(_efgtoa$933+1)& (0+255),b
  4399  001436  0E65               	movlw	101
  4400  001438  6F68               	movwf	_efgtoa$933& (0+255),b
  4401  00143A  EF23  F00A         	goto	l3565
  4402  00143E                     l3563:
  4403                           
  4404                           ; BSR set to: 0
  4405  00143E  0E00               	movlw	0
  4406  001440  6F69               	movwf	(_efgtoa$933+1)& (0+255),b
  4407  001442  0E45               	movlw	69
  4408  001444  6F68               	movwf	_efgtoa$933& (0+255),b
  4409  001446                     l3565:
  4410                           
  4411                           ; BSR set to: 0
  4412  001446  0E00               	movlw	low _dbuf
  4413  001448  258A               	addwf	efgtoa@i& (0+255),w,b
  4414  00144A  6ED9               	movwf	fsr2l,c
  4415  00144C  0E01               	movlw	high _dbuf
  4416  00144E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4417  001450  6EDA               	movwf	fsr2h,c
  4418  001452  C068  FFDF         	movff	_efgtoa$933,indf2
  4419  001456                     
  4420                           ; BSR set to: 0
  4421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4422  001456  077E               	decf	efgtoa@w& (0+255),f,b
  4423  001458  A0D8               	btfss	status,0,c
  4424  00145A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4425  00145C                     
  4426                           ; BSR set to: 0
  4427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4428  00145C  0E00               	movlw	low _dbuf
  4429  00145E  2592               	addwf	efgtoa@n& (0+255),w,b
  4430  001460  6E01               	movwf	strcpy@dest^0,c
  4431  001462  0E01               	movlw	high _dbuf
  4432  001464  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4433  001466  6E02               	movwf	(strcpy@dest+1)^0,c
  4434  001468  0E00               	movlw	low _dbuf
  4435  00146A  258A               	addwf	efgtoa@i& (0+255),w,b
  4436  00146C  6E03               	movwf	strcpy@src^0,c
  4437  00146E  0E01               	movlw	high _dbuf
  4438  001470  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4439  001472  6E04               	movwf	(strcpy@src+1)^0,c
  4440  001474  EC18  F01B         	call	_strcpy	;wreg free
  4441  001478  EFC5  F004         	goto	l3311
  4442  00147C                     l807:
  4443  00147C  0012               	return		;funcret
  4444  00147E                     __end_of_efgtoa:
  4445                           	callstack 0
  4446                           
  4447 ;; *************** function _tolower *****************
  4448 ;; Defined at:
  4449 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  c               2    6[COMRAM] int 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;		None
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  2    6[COMRAM] int 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, status,0
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4463 ;;      Params:         2       0       0       0       0       0       0       0       0
  4464 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4465 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4466 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4467 ;;Total ram usage:        8 bytes
  4468 ;; Hardware stack levels used: 1
  4469 ;; Hardware stack levels required when called: 1
  4470 ;; This function calls:
  4471 ;;		_isupper
  4472 ;; This function is called by:
  4473 ;;		_efgtoa
  4474 ;;		_vfpfcnvrt
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text11
  4479  0035D0                     __ptext11:
  4480                           	callstack 0
  4481  0035D0                     _tolower:
  4482                           	callstack 26
  4483  0035D0  0EBF               	movlw	191
  4484  0035D2  6E09               	movwf	??_tolower^0,c
  4485  0035D4  0EFF               	movlw	255
  4486  0035D6  6E0A               	movwf	(??_tolower+1)^0,c
  4487  0035D8  C007  F00B         	movff	tolower@c,??_tolower+2
  4488  0035DC  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4489  0035E0  5009               	movf	??_tolower^0,w,c
  4490  0035E2  260B               	addwf	(??_tolower+2)^0,f,c
  4491  0035E4  500A               	movf	(??_tolower+1)^0,w,c
  4492  0035E6  220C               	addwfc	(??_tolower+3)^0,f,c
  4493  0035E8  500C               	movf	(??_tolower+3)^0,w,c
  4494  0035EA  E10A               	bnz	u3800
  4495  0035EC  0E1A               	movlw	26
  4496  0035EE  5C0B               	subwf	(??_tolower+2)^0,w,c
  4497  0035F0  A0D8               	btfss	status,0,c
  4498  0035F2  EFFD  F01A         	goto	u3801
  4499  0035F6  EF00  F01B         	goto	u3800
  4500  0035FA                     u3801:
  4501  0035FA  0E01               	movlw	1
  4502  0035FC  EF01  F01B         	goto	u3810
  4503  003600                     u3800:
  4504  003600  0E00               	movlw	0
  4505  003602                     u3810:
  4506  003602  6E0D               	movwf	_tolower$1082^0,c
  4507  003604  6A0E               	clrf	(_tolower$1082+1)^0,c
  4508  003606  500D               	movf	_tolower$1082^0,w,c
  4509  003608  100E               	iorwf	(_tolower$1082+1)^0,w,c
  4510  00360A  B4D8               	btfsc	status,2,c
  4511  00360C  EF0A  F01B         	goto	u3821
  4512  003610  EF0C  F01B         	goto	u3820
  4513  003614                     u3821:
  4514  003614  EF13  F01B         	goto	l1047
  4515  003618                     u3820:
  4516  003618  0E20               	movlw	32
  4517  00361A  1007               	iorwf	tolower@c^0,w,c
  4518  00361C  6E07               	movwf	?_tolower^0,c
  4519  00361E  5008               	movf	(tolower@c+1)^0,w,c
  4520  003620  6E08               	movwf	(?_tolower+1)^0,c
  4521  003622  EF17  F01B         	goto	l1052
  4522  003626                     l1047:
  4523  003626  C007  F007         	movff	tolower@c,?_tolower
  4524  00362A  C008  F008         	movff	tolower@c+1,?_tolower+1
  4525  00362E                     l1052:
  4526  00362E  0012               	return		;funcret
  4527  003630                     __end_of_tolower:
  4528                           	callstack 0
  4529                           
  4530 ;; *************** function _isupper *****************
  4531 ;; Defined at:
  4532 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  c               2    0[COMRAM] int 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  2    0[COMRAM] int 
  4539 ;; Registers used:
  4540 ;;		wreg, status,2, status,0
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4546 ;;      Params:         2       0       0       0       0       0       0       0       0
  4547 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4548 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4549 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4550 ;;Total ram usage:        6 bytes
  4551 ;; Hardware stack levels used: 1
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_efgtoa
  4556 ;;		_vfpfcnvrt
  4557 ;;		_tolower
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text12
  4562  003856                     __ptext12:
  4563                           	callstack 0
  4564  003856                     _isupper:
  4565                           	callstack 26
  4566  003856  0EBF               	movlw	191
  4567  003858  6E03               	movwf	??_isupper^0,c
  4568  00385A  0EFF               	movlw	255
  4569  00385C  6E04               	movwf	(??_isupper+1)^0,c
  4570  00385E  C001  F005         	movff	isupper@c,??_isupper+2
  4571  003862  C002  F006         	movff	isupper@c+1,??_isupper+3
  4572  003866  5003               	movf	??_isupper^0,w,c
  4573  003868  2605               	addwf	(??_isupper+2)^0,f,c
  4574  00386A  5004               	movf	(??_isupper+1)^0,w,c
  4575  00386C  2206               	addwfc	(??_isupper+3)^0,f,c
  4576  00386E  5006               	movf	(??_isupper+3)^0,w,c
  4577  003870  E10A               	bnz	u2950
  4578  003872  0E1A               	movlw	26
  4579  003874  5C05               	subwf	(??_isupper+2)^0,w,c
  4580  003876  A0D8               	btfss	status,0,c
  4581  003878  EF40  F01C         	goto	u2951
  4582  00387C  EF43  F01C         	goto	u2950
  4583  003880                     u2951:
  4584  003880  0E01               	movlw	1
  4585  003882  EF44  F01C         	goto	u2960
  4586  003886                     u2950:
  4587  003886  0E00               	movlw	0
  4588  003888                     u2960:
  4589  003888  6E01               	movwf	?_isupper^0,c
  4590  00388A  6A02               	clrf	(?_isupper+1)^0,c
  4591  00388C  0012               	return		;funcret
  4592  00388E                     __end_of_isupper:
  4593                           	callstack 0
  4594                           
  4595 ;; *************** function _strcpy *****************
  4596 ;; Defined at:
  4597 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4600 ;;		 -> dbuf(80), 
  4601 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4602 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  4603 ;;		 -> dbuf(80), 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  d               2    8[COMRAM] PTR unsigned char 
  4606 ;;		 -> dbuf(80), 
  4607 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4608 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  4609 ;;		 -> dbuf(80), 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  2    0[COMRAM] PTR unsigned char 
  4612 ;; Registers used:
  4613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4619 ;;      Params:         4       0       0       0       0       0       0       0       0
  4620 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4621 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4622 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4623 ;;Total ram usage:       10 bytes
  4624 ;; Hardware stack levels used: 1
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_efgtoa
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text13
  4633  003630                     __ptext13:
  4634                           	callstack 0
  4635  003630                     _strcpy:
  4636                           	callstack 26
  4637  003630  C003  F007         	movff	strcpy@src,strcpy@s
  4638  003634  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4639  003638  C001  F009         	movff	strcpy@dest,strcpy@d
  4640  00363C  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4641  003640                     l3211:
  4642  003640  5007               	movf	strcpy@s^0,w,c
  4643  003642  6E05               	movwf	??_strcpy^0,c
  4644  003644  5008               	movf	(strcpy@s+1)^0,w,c
  4645  003646  6E06               	movwf	(??_strcpy+1)^0,c
  4646  003648  4A07               	infsnz	strcpy@s^0,f,c
  4647  00364A  2A08               	incf	(strcpy@s+1)^0,f,c
  4648  00364C  C005  FFF6         	movff	??_strcpy,tblptrl
  4649  003650  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4650  003654  6AF8               	clrf	tblptru,c
  4651  003656  C009  FFD9         	movff	strcpy@d,fsr2l
  4652  00365A  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4653  00365E  4A09               	infsnz	strcpy@d^0,f,c
  4654  003660  2A0A               	incf	(strcpy@d+1)^0,f,c
  4655  003662  0E07               	movlw	(high __ramtop+-1)
  4656  003664  64F7               	cpfsgt	tblptrh,c
  4657  003666  D003               	bra	u3787
  4658  003668  0008               	tblrd		*
  4659  00366A  50F5               	movf	tablat,w,c
  4660  00366C  D005               	bra	u3780
  4661  00366E                     u3787:
  4662  00366E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4663  003672  CFF7 FFE2          	movff	tblptrh,fsr1h
  4664  003676  50E7               	movf	indf1,w,c
  4665  003678                     u3780:
  4666  003678  6EDF               	movwf	indf2,c
  4667  00367A  50DF               	movf	indf2,w,c
  4668  00367C  A4D8               	btfss	status,2,c
  4669  00367E  EF43  F01B         	goto	u3791
  4670  003682  EF45  F01B         	goto	u3790
  4671  003686                     u3791:
  4672  003686  EF20  F01B         	goto	l3211
  4673  00368A                     u3790:
  4674  00368A  0012               	return		;funcret
  4675  00368C                     __end_of_strcpy:
  4676                           	callstack 0
  4677                           
  4678 ;; *************** function _pad *****************
  4679 ;; Defined at:
  4680 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4683 ;;		 -> sprintf@f(6), 
  4684 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4685 ;;		 -> dbuf(80), 
  4686 ;;  p               2   20[COMRAM] int 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  w               2   25[COMRAM] int 
  4689 ;;  i               2   23[COMRAM] int 
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  2   16[COMRAM] int 
  4692 ;; Registers used:
  4693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4699 ;;      Params:         6       0       0       0       0       0       0       0       0
  4700 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4701 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4702 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4703 ;;Total ram usage:       11 bytes
  4704 ;; Hardware stack levels used: 1
  4705 ;; Hardware stack levels required when called: 3
  4706 ;; This function calls:
  4707 ;;		_fputc
  4708 ;;		_fputs
  4709 ;;		_strlen
  4710 ;; This function is called by:
  4711 ;;		_efgtoa
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text14
  4716  0032D6                     __ptext14:
  4717                           	callstack 0
  4718  0032D6                     _pad:
  4719                           	callstack 23
  4720  0032D6                     
  4721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4722  0032D6  A05E               	btfss	_flags^0,0,c
  4723  0032D8  EF70  F019         	goto	u3671
  4724  0032DC  EF72  F019         	goto	u3670
  4725  0032E0                     u3671:
  4726  0032E0  EF7C  F019         	goto	l3169
  4727  0032E4                     u3670:
  4728  0032E4                     
  4729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4730  0032E4  C013  F00A         	movff	pad@buf,fputs@s
  4731  0032E8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4732  0032EC  C011  F00C         	movff	pad@fp,fputs@fp
  4733  0032F0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4734  0032F4  EC09  F01C         	call	_fputs	;wreg free
  4735  0032F8                     l3169:
  4736                           
  4737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4738  0032F8  BE16               	btfsc	(pad@p+1)^0,7,c
  4739  0032FA  EF81  F019         	goto	u3681
  4740  0032FE  EF83  F019         	goto	u3680
  4741  003302                     u3681:
  4742  003302  EF89  F019         	goto	l3173
  4743  003306                     u3680:
  4744  003306  C015  F01A         	movff	pad@p,pad@w
  4745  00330A  C016  F01B         	movff	pad@p+1,pad@w+1
  4746  00330E  EF8D  F019         	goto	l784
  4747  003312                     l3173:
  4748  003312  0E00               	movlw	0
  4749  003314  6E1B               	movwf	(pad@w+1)^0,c
  4750  003316  0E00               	movlw	0
  4751  003318  6E1A               	movwf	pad@w^0,c
  4752  00331A                     l784:
  4753                           
  4754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4755  00331A  0E00               	movlw	0
  4756  00331C  6E19               	movwf	(pad@i+1)^0,c
  4757  00331E  0E00               	movlw	0
  4758  003320  6E18               	movwf	pad@i^0,c
  4759                           
  4760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4761  003322  EF9F  F019         	goto	l3179
  4762  003326                     l3175:
  4763                           
  4764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4765  003326  0E00               	movlw	0
  4766  003328  6E02               	movwf	(fputc@c+1)^0,c
  4767  00332A  0E20               	movlw	32
  4768  00332C  6E01               	movwf	fputc@c^0,c
  4769  00332E  C011  F003         	movff	pad@fp,fputc@fp
  4770  003332  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4771  003336  ECA4  F018         	call	_fputc	;wreg free
  4772  00333A                     
  4773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4774  00333A  4A18               	infsnz	pad@i^0,f,c
  4775  00333C  2A19               	incf	(pad@i+1)^0,f,c
  4776  00333E                     l3179:
  4777                           
  4778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4779  00333E  501A               	movf	pad@w^0,w,c
  4780  003340  5C18               	subwf	pad@i^0,w,c
  4781  003342  5019               	movf	(pad@i+1)^0,w,c
  4782  003344  0A80               	xorlw	128
  4783  003346  6E17               	movwf	??_pad^0,c
  4784  003348  501B               	movf	(pad@w+1)^0,w,c
  4785  00334A  0A80               	xorlw	128
  4786  00334C  5817               	subwfb	??_pad^0,w,c
  4787  00334E  A0D8               	btfss	status,0,c
  4788  003350  EFAC  F019         	goto	u3691
  4789  003354  EFAE  F019         	goto	u3690
  4790  003358                     u3691:
  4791  003358  EF93  F019         	goto	l3175
  4792  00335C                     u3690:
  4793  00335C                     
  4794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4795  00335C  B05E               	btfsc	_flags^0,0,c
  4796  00335E  EFB3  F019         	goto	u3701
  4797  003362  EFB5  F019         	goto	u3700
  4798  003366                     u3701:
  4799  003366  EFBF  F019         	goto	l3183
  4800  00336A                     u3700:
  4801  00336A                     
  4802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4803  00336A  C013  F00A         	movff	pad@buf,fputs@s
  4804  00336E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4805  003372  C011  F00C         	movff	pad@fp,fputs@fp
  4806  003376  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4807  00337A  EC09  F01C         	call	_fputs	;wreg free
  4808  00337E                     l3183:
  4809                           
  4810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4811  00337E  C013  F001         	movff	pad@buf,strlen@s
  4812  003382  C014  F002         	movff	pad@buf+1,strlen@s+1
  4813  003386  ECBF  F01B         	call	_strlen	;wreg free
  4814  00338A  501A               	movf	pad@w^0,w,c
  4815  00338C  2401               	addwf	?_strlen^0,w,c
  4816  00338E  6E11               	movwf	?_pad^0,c
  4817  003390  501B               	movf	(pad@w+1)^0,w,c
  4818  003392  2002               	addwfc	(?_strlen+1)^0,w,c
  4819  003394  6E12               	movwf	(?_pad+1)^0,c
  4820  003396  0012               	return		;funcret
  4821  003398                     __end_of_pad:
  4822                           	callstack 0
  4823                           
  4824 ;; *************** function _strlen *****************
  4825 ;; Defined at:
  4826 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4829 ;;		 -> dbuf(80), main@V(8), STR_1(9), 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4832 ;;		 -> dbuf(80), main@V(8), STR_1(9), 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  2    0[COMRAM] unsigned int 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4842 ;;      Params:         2       0       0       0       0       0       0       0       0
  4843 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4845 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4846 ;;Total ram usage:        4 bytes
  4847 ;; Hardware stack levels used: 1
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_imprime_lcd
  4852 ;;		_pad
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text15
  4857  00377E                     __ptext15:
  4858                           	callstack 0
  4859  00377E                     _strlen:
  4860                           	callstack 28
  4861  00377E  C001  F003         	movff	strlen@s,strlen@a
  4862  003782  C002  F004         	movff	strlen@s+1,strlen@a+1
  4863  003786  EFC7  F01B         	goto	l2495
  4864  00378A                     l2493:
  4865  00378A  4A01               	infsnz	strlen@s^0,f,c
  4866  00378C  2A02               	incf	(strlen@s+1)^0,f,c
  4867  00378E                     l2495:
  4868  00378E  C001  FFF6         	movff	strlen@s,tblptrl
  4869  003792  C002  FFF7         	movff	strlen@s+1,tblptrh
  4870  003796  6AF8               	clrf	tblptru,c
  4871  003798  0E07               	movlw	(high __ramtop+-1)
  4872  00379A  64F7               	cpfsgt	tblptrh,c
  4873  00379C  D003               	bra	u2537
  4874  00379E  0008               	tblrd		*
  4875  0037A0  50F5               	movf	tablat,w,c
  4876  0037A2  D005               	bra	u2530
  4877  0037A4                     u2537:
  4878  0037A4  CFF6 FFE1          	movff	tblptrl,fsr1l
  4879  0037A8  CFF7 FFE2          	movff	tblptrh,fsr1h
  4880  0037AC  50E7               	movf	indf1,w,c
  4881  0037AE                     u2530:
  4882  0037AE  0900               	iorlw	0
  4883  0037B0  A4D8               	btfss	status,2,c
  4884  0037B2  EFDD  F01B         	goto	u2541
  4885  0037B6  EFDF  F01B         	goto	u2540
  4886  0037BA                     u2541:
  4887  0037BA  EFC5  F01B         	goto	l2493
  4888  0037BE                     u2540:
  4889  0037BE  5003               	movf	strlen@a^0,w,c
  4890  0037C0  5C01               	subwf	strlen@s^0,w,c
  4891  0037C2  6E01               	movwf	?_strlen^0,c
  4892  0037C4  5004               	movf	(strlen@a+1)^0,w,c
  4893  0037C6  5802               	subwfb	(strlen@s+1)^0,w,c
  4894  0037C8  6E02               	movwf	(?_strlen+1)^0,c
  4895  0037CA  0012               	return		;funcret
  4896  0037CC                     __end_of_strlen:
  4897                           	callstack 0
  4898                           
  4899 ;; *************** function _fputs *****************
  4900 ;; Defined at:
  4901 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4904 ;;		 -> dbuf(80), 
  4905 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4906 ;;		 -> sprintf@f(6), 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  i               2   14[COMRAM] int 
  4909 ;;  c               1   13[COMRAM] unsigned char 
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  2    9[COMRAM] int 
  4912 ;; Registers used:
  4913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4919 ;;      Params:         4       0       0       0       0       0       0       0       0
  4920 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4922 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4923 ;;Total ram usage:        7 bytes
  4924 ;; Hardware stack levels used: 1
  4925 ;; Hardware stack levels required when called: 2
  4926 ;; This function calls:
  4927 ;;		_fputc
  4928 ;; This function is called by:
  4929 ;;		_pad
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text16
  4934  003812                     __ptext16:
  4935                           	callstack 0
  4936  003812                     _fputs:
  4937                           	callstack 23
  4938  003812  0E00               	movlw	0
  4939  003814  6E10               	movwf	(fputs@i+1)^0,c
  4940  003816  0E00               	movlw	0
  4941  003818  6E0F               	movwf	fputs@i^0,c
  4942  00381A  EF1A  F01C         	goto	l2709
  4943  00381E                     l2705:
  4944  00381E  C00E  F001         	movff	fputs@c,fputc@c
  4945  003822  6A02               	clrf	(fputc@c+1)^0,c
  4946  003824  C00C  F003         	movff	fputs@fp,fputc@fp
  4947  003828  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4948  00382C  ECA4  F018         	call	_fputc	;wreg free
  4949  003830  4A0F               	infsnz	fputs@i^0,f,c
  4950  003832  2A10               	incf	(fputs@i+1)^0,f,c
  4951  003834                     l2709:
  4952  003834  500F               	movf	fputs@i^0,w,c
  4953  003836  240A               	addwf	fputs@s^0,w,c
  4954  003838  6ED9               	movwf	fsr2l,c
  4955  00383A  5010               	movf	(fputs@i+1)^0,w,c
  4956  00383C  200B               	addwfc	(fputs@s+1)^0,w,c
  4957  00383E  6EDA               	movwf	fsr2h,c
  4958  003840  50DF               	movf	indf2,w,c
  4959  003842  6E0E               	movwf	fputs@c^0,c
  4960  003844  500E               	movf	fputs@c^0,w,c
  4961  003846  A4D8               	btfss	status,2,c
  4962  003848  EF28  F01C         	goto	u2941
  4963  00384C  EF2A  F01C         	goto	u2940
  4964  003850                     u2941:
  4965  003850  EF0F  F01C         	goto	l2705
  4966  003854                     u2940:
  4967  003854  0012               	return		;funcret
  4968  003856                     __end_of_fputs:
  4969                           	callstack 0
  4970                           
  4971 ;; *************** function _fputc *****************
  4972 ;; Defined at:
  4973 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  c               2    0[COMRAM] int 
  4976 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4977 ;;		 -> sprintf@f(6), 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;		None
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  2    0[COMRAM] int 
  4982 ;; Registers used:
  4983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4989 ;;      Params:         4       0       0       0       0       0       0       0       0
  4990 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4991 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4992 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4993 ;;Total ram usage:        9 bytes
  4994 ;; Hardware stack levels used: 1
  4995 ;; Hardware stack levels required when called: 1
  4996 ;; This function calls:
  4997 ;;		_putch
  4998 ;; This function is called by:
  4999 ;;		_pad
  5000 ;;		_vfpfcnvrt
  5001 ;;		_fputs
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text17
  5006  003148                     __ptext17:
  5007                           	callstack 0
  5008  003148                     _fputc:
  5009                           	callstack 26
  5010  003148  5003               	movf	fputc@fp^0,w,c
  5011  00314A  1004               	iorwf	(fputc@fp+1)^0,w,c
  5012  00314C  B4D8               	btfsc	status,2,c
  5013  00314E  EFAB  F018         	goto	u2491
  5014  003152  EFAD  F018         	goto	u2490
  5015  003156                     u2491:
  5016  003156  EFB6  F018         	goto	l2481
  5017  00315A                     u2490:
  5018  00315A  5003               	movf	fputc@fp^0,w,c
  5019  00315C  1004               	iorwf	(fputc@fp+1)^0,w,c
  5020  00315E  A4D8               	btfss	status,2,c
  5021  003160  EFB4  F018         	goto	u2501
  5022  003164  EFB6  F018         	goto	u2500
  5023  003168                     u2501:
  5024  003168  EFBB  F018         	goto	l2483
  5025  00316C                     u2500:
  5026  00316C                     l2481:
  5027  00316C  5001               	movf	fputc@c^0,w,c
  5028  00316E  ECBD  F01C         	call	_putch
  5029  003172  EF08  F019         	goto	l1010
  5030  003176                     l2483:
  5031  003176  EE20 F004          	lfsr	2,4
  5032  00317A  5003               	movf	fputc@fp^0,w,c
  5033  00317C  26D9               	addwf	fsr2l,f,c
  5034  00317E  5004               	movf	(fputc@fp+1)^0,w,c
  5035  003180  22DA               	addwfc	fsr2h,f,c
  5036  003182  50DE               	movf	postinc2,w,c
  5037  003184  10DE               	iorwf	postinc2,w,c
  5038  003186  B4D8               	btfsc	status,2,c
  5039  003188  EFC8  F018         	goto	u2511
  5040  00318C  EFCA  F018         	goto	u2510
  5041  003190                     u2511:
  5042  003190  EFE5  F018         	goto	l2487
  5043  003194                     u2510:
  5044  003194  EE20 F004          	lfsr	2,4
  5045  003198  5003               	movf	fputc@fp^0,w,c
  5046  00319A  26D9               	addwf	fsr2l,f,c
  5047  00319C  5004               	movf	(fputc@fp+1)^0,w,c
  5048  00319E  22DA               	addwfc	fsr2h,f,c
  5049  0031A0  EE10 F002          	lfsr	1,2
  5050  0031A4  5003               	movf	fputc@fp^0,w,c
  5051  0031A6  26E1               	addwf	fsr1l,f,c
  5052  0031A8  5004               	movf	(fputc@fp+1)^0,w,c
  5053  0031AA  22E2               	addwfc	fsr1h,f,c
  5054  0031AC  50DE               	movf	postinc2,w,c
  5055  0031AE  5CE6               	subwf	postinc1,w,c
  5056  0031B0  50E6               	movf	postinc1,w,c
  5057  0031B2  0A80               	xorlw	128
  5058  0031B4  6E09               	movwf	(??_fputc+4)^0,c
  5059  0031B6  50DE               	movf	postinc2,w,c
  5060  0031B8  0A80               	xorlw	128
  5061  0031BA  5809               	subwfb	(??_fputc+4)^0,w,c
  5062  0031BC  B0D8               	btfsc	status,0,c
  5063  0031BE  EFE3  F018         	goto	u2521
  5064  0031C2  EFE5  F018         	goto	u2520
  5065  0031C6                     u2521:
  5066  0031C6  EF08  F019         	goto	l1010
  5067  0031CA                     u2520:
  5068  0031CA                     l2487:
  5069  0031CA  EE20 F002          	lfsr	2,2
  5070  0031CE  5003               	movf	fputc@fp^0,w,c
  5071  0031D0  26D9               	addwf	fsr2l,f,c
  5072  0031D2  5004               	movf	(fputc@fp+1)^0,w,c
  5073  0031D4  22DA               	addwfc	fsr2h,f,c
  5074  0031D6  CFDE F005          	movff	postinc2,??_fputc
  5075  0031DA  CFDD F006          	movff	postdec2,??_fputc+1
  5076  0031DE  C003  FFD9         	movff	fputc@fp,fsr2l
  5077  0031E2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5078  0031E6  CFDE F007          	movff	postinc2,??_fputc+2
  5079  0031EA  CFDD F008          	movff	postdec2,??_fputc+3
  5080  0031EE  5005               	movf	??_fputc^0,w,c
  5081  0031F0  2407               	addwf	(??_fputc+2)^0,w,c
  5082  0031F2  6ED9               	movwf	fsr2l,c
  5083  0031F4  5006               	movf	(??_fputc+1)^0,w,c
  5084  0031F6  2008               	addwfc	(??_fputc+3)^0,w,c
  5085  0031F8  6EDA               	movwf	fsr2h,c
  5086  0031FA  C001  FFDF         	movff	fputc@c,indf2
  5087  0031FE  EE20 F002          	lfsr	2,2
  5088  003202  5003               	movf	fputc@fp^0,w,c
  5089  003204  26D9               	addwf	fsr2l,f,c
  5090  003206  5004               	movf	(fputc@fp+1)^0,w,c
  5091  003208  22DA               	addwfc	fsr2h,f,c
  5092  00320A  2ADE               	incf	postinc2,f,c
  5093  00320C  0E00               	movlw	0
  5094  00320E  22DD               	addwfc	postdec2,f,c
  5095  003210                     l1010:
  5096  003210  0012               	return		;funcret
  5097  003212                     __end_of_fputc:
  5098                           	callstack 0
  5099                           
  5100 ;; *************** function _putch *****************
  5101 ;; Defined at:
  5102 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;  c               1    wreg     unsigned char 
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;  c               1    0[COMRAM] unsigned char 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  1    wreg      void 
  5109 ;; Registers used:
  5110 ;;		wreg
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5116 ;;      Params:         0       0       0       0       0       0       0       0       0
  5117 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5118 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5119 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5120 ;;Total ram usage:        0 bytes
  5121 ;; Hardware stack levels used: 1
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_fputc
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           	psect	text18
  5130  00397A                     __ptext18:
  5131                           	callstack 0
  5132  00397A                     _putch:
  5133                           	callstack 26
  5134  00397A  0012               	return		;funcret
  5135  00397C                     __end_of_putch:
  5136                           	callstack 0
  5137                           
  5138 ;; *************** function _floorf *****************
  5139 ;; Defined at:
  5140 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  x               4   25[COMRAM] float 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;  u               4   41[COMRAM] struct .
  5145 ;;  m               4   35[COMRAM] unsigned long 
  5146 ;;  e               2   39[COMRAM] int 
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  4   25[COMRAM] float 
  5149 ;; Registers used:
  5150 ;;		wreg, status,2, status,0
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5156 ;;      Params:         4       0       0       0       0       0       0       0       0
  5157 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5158 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5159 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5160 ;;Total ram usage:       20 bytes
  5161 ;; Hardware stack levels used: 1
  5162 ;; This function calls:
  5163 ;;		Nothing
  5164 ;; This function is called by:
  5165 ;;		_efgtoa
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text19
  5170  0028BE                     __ptext19:
  5171                           	callstack 0
  5172  0028BE                     _floorf:
  5173                           	callstack 26
  5174  0028BE  C0DE  F02A         	movff	floorf@F527,floorf@u
  5175  0028C2  C0DF  F02B         	movff	floorf@F527+1,floorf@u+1
  5176  0028C6  C0E0  F02C         	movff	floorf@F527+2,floorf@u+2
  5177  0028CA  C0E1  F02D         	movff	floorf@F527+3,floorf@u+3
  5178  0028CE  C01A  F02A         	movff	floorf@x,floorf@u
  5179  0028D2  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5180  0028D6  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5181  0028DA  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5182  0028DE  0E81               	movlw	129
  5183  0028E0  6E1E               	movwf	??_floorf^0,c
  5184  0028E2  0EFF               	movlw	255
  5185  0028E4  6E1F               	movwf	(??_floorf+1)^0,c
  5186  0028E6  C02A  F020         	movff	floorf@u,??_floorf+2
  5187  0028EA  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5188  0028EE  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5189  0028F2  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5190  0028F6  0E18               	movlw	24
  5191  0028F8  EF83  F014         	goto	u3830
  5192  0028FC                     u3835:
  5193  0028FC  90D8               	bcf	status,0,c
  5194  0028FE  3223               	rrcf	(??_floorf+5)^0,f,c
  5195  002900  3222               	rrcf	(??_floorf+4)^0,f,c
  5196  002902  3221               	rrcf	(??_floorf+3)^0,f,c
  5197  002904  3220               	rrcf	(??_floorf+2)^0,f,c
  5198  002906                     u3830:
  5199  002906  2EE8               	decfsz	wreg,f,c
  5200  002908  EF7E  F014         	goto	u3835
  5201  00290C  5020               	movf	(??_floorf+2)^0,w,c
  5202  00290E  241E               	addwf	??_floorf^0,w,c
  5203  002910  6E28               	movwf	floorf@e^0,c
  5204  002912  0E00               	movlw	0
  5205  002914  201F               	addwfc	(??_floorf+1)^0,w,c
  5206  002916  6E29               	movwf	(floorf@e+1)^0,c
  5207  002918  BE29               	btfsc	(floorf@e+1)^0,7,c
  5208  00291A  EF98  F014         	goto	u3841
  5209  00291E  5029               	movf	(floorf@e+1)^0,w,c
  5210  002920  E109               	bnz	u3840
  5211  002922  0E17               	movlw	23
  5212  002924  5C28               	subwf	floorf@e^0,w,c
  5213  002926  A0D8               	btfss	status,0,c
  5214  002928  EF98  F014         	goto	u3841
  5215  00292C  EF9A  F014         	goto	u3840
  5216  002930                     u3841:
  5217  002930  EFA4  F014         	goto	l3229
  5218  002934                     u3840:
  5219  002934                     l3227:
  5220  002934  C01A  F01A         	movff	floorf@x,?_floorf
  5221  002938  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5222  00293C  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5223  002940  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5224  002944  EF67  F015         	goto	l971
  5225  002948                     l3229:
  5226  002948  BE29               	btfsc	(floorf@e+1)^0,7,c
  5227  00294A  EFA9  F014         	goto	u3851
  5228  00294E  EFAB  F014         	goto	u3850
  5229  002952                     u3851:
  5230  002952  EF1B  F015         	goto	l3239
  5231  002956                     u3850:
  5232  002956  C028  F01E         	movff	floorf@e,??_floorf
  5233  00295A  0EFF               	movlw	255
  5234  00295C  6E1F               	movwf	(??_floorf+1)^0,c
  5235  00295E  0EFF               	movlw	255
  5236  002960  6E20               	movwf	(??_floorf+2)^0,c
  5237  002962  0E7F               	movlw	127
  5238  002964  6E21               	movwf	(??_floorf+3)^0,c
  5239  002966  0E00               	movlw	0
  5240  002968  6E22               	movwf	(??_floorf+4)^0,c
  5241  00296A                     u3865:
  5242  00296A  661E               	tstfsz	??_floorf^0,c
  5243  00296C  EFBA  F014         	goto	u3866
  5244  002970  EFC2  F014         	goto	u3867
  5245  002974                     u3866:
  5246  002974  3422               	rlcf	(??_floorf+4)^0,w,c
  5247  002976  3222               	rrcf	(??_floorf+4)^0,f,c
  5248  002978  3221               	rrcf	(??_floorf+3)^0,f,c
  5249  00297A  3220               	rrcf	(??_floorf+2)^0,f,c
  5250  00297C  321F               	rrcf	(??_floorf+1)^0,f,c
  5251  00297E  2E1E               	decfsz	??_floorf^0,f,c
  5252  002980  EFB5  F014         	goto	u3865
  5253  002984                     u3867:
  5254  002984  C01F  F024         	movff	??_floorf+1,floorf@m
  5255  002988  C020  F025         	movff	??_floorf+2,floorf@m+1
  5256  00298C  C021  F026         	movff	??_floorf+3,floorf@m+2
  5257  002990  C022  F027         	movff	??_floorf+4,floorf@m+3
  5258  002994  5024               	movf	floorf@m^0,w,c
  5259  002996  142A               	andwf	floorf@u^0,w,c
  5260  002998  6E1E               	movwf	??_floorf^0,c
  5261  00299A  5025               	movf	(floorf@m+1)^0,w,c
  5262  00299C  142B               	andwf	(floorf@u+1)^0,w,c
  5263  00299E  6E1F               	movwf	(??_floorf+1)^0,c
  5264  0029A0  5026               	movf	(floorf@m+2)^0,w,c
  5265  0029A2  142C               	andwf	(floorf@u+2)^0,w,c
  5266  0029A4  6E20               	movwf	(??_floorf+2)^0,c
  5267  0029A6  5027               	movf	(floorf@m+3)^0,w,c
  5268  0029A8  142D               	andwf	(floorf@u+3)^0,w,c
  5269  0029AA  6E21               	movwf	(??_floorf+3)^0,c
  5270  0029AC  501E               	movf	??_floorf^0,w,c
  5271  0029AE  101F               	iorwf	(??_floorf+1)^0,w,c
  5272  0029B0  1020               	iorwf	(??_floorf+2)^0,w,c
  5273  0029B2  1021               	iorwf	(??_floorf+3)^0,w,c
  5274  0029B4  A4D8               	btfss	status,2,c
  5275  0029B6  EFDF  F014         	goto	u3871
  5276  0029BA  EFE1  F014         	goto	u3870
  5277  0029BE                     u3871:
  5278  0029BE  EFE3  F014         	goto	l3235
  5279  0029C2                     u3870:
  5280  0029C2  EF9A  F014         	goto	l3227
  5281  0029C6                     l3235:
  5282  0029C6  C02A  F01E         	movff	floorf@u,??_floorf
  5283  0029CA  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5284  0029CE  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5285  0029D2  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5286  0029D6  0E20               	movlw	32
  5287  0029D8  EFF3  F014         	goto	u3880
  5288  0029DC                     u3885:
  5289  0029DC  90D8               	bcf	status,0,c
  5290  0029DE  3221               	rrcf	(??_floorf+3)^0,f,c
  5291  0029E0  3220               	rrcf	(??_floorf+2)^0,f,c
  5292  0029E2  321F               	rrcf	(??_floorf+1)^0,f,c
  5293  0029E4  321E               	rrcf	??_floorf^0,f,c
  5294  0029E6                     u3880:
  5295  0029E6  2EE8               	decfsz	wreg,f,c
  5296  0029E8  EFEE  F014         	goto	u3885
  5297  0029EC  501E               	movf	??_floorf^0,w,c
  5298  0029EE  101F               	iorwf	(??_floorf+1)^0,w,c
  5299  0029F0  1020               	iorwf	(??_floorf+2)^0,w,c
  5300  0029F2  1021               	iorwf	(??_floorf+3)^0,w,c
  5301  0029F4  B4D8               	btfsc	status,2,c
  5302  0029F6  EFFF  F014         	goto	u3891
  5303  0029FA  EF01  F015         	goto	u3890
  5304  0029FE                     u3891:
  5305  0029FE  EF09  F015         	goto	l974
  5306  002A02                     u3890:
  5307  002A02  5024               	movf	floorf@m^0,w,c
  5308  002A04  262A               	addwf	floorf@u^0,f,c
  5309  002A06  5025               	movf	(floorf@m+1)^0,w,c
  5310  002A08  222B               	addwfc	(floorf@u+1)^0,f,c
  5311  002A0A  5026               	movf	(floorf@m+2)^0,w,c
  5312  002A0C  222C               	addwfc	(floorf@u+2)^0,f,c
  5313  002A0E  5027               	movf	(floorf@m+3)^0,w,c
  5314  002A10  222D               	addwfc	(floorf@u+3)^0,f,c
  5315  002A12                     l974:
  5316  002A12  1C24               	comf	floorf@m^0,w,c
  5317  002A14  6E1E               	movwf	??_floorf^0,c
  5318  002A16  1C25               	comf	(floorf@m+1)^0,w,c
  5319  002A18  6E1F               	movwf	(??_floorf+1)^0,c
  5320  002A1A  1C26               	comf	(floorf@m+2)^0,w,c
  5321  002A1C  6E20               	movwf	(??_floorf+2)^0,c
  5322  002A1E  1C27               	comf	(floorf@m+3)^0,w,c
  5323  002A20  6E21               	movwf	(??_floorf+3)^0,c
  5324  002A22  501E               	movf	??_floorf^0,w,c
  5325  002A24  162A               	andwf	floorf@u^0,f,c
  5326  002A26  501F               	movf	(??_floorf+1)^0,w,c
  5327  002A28  162B               	andwf	(floorf@u+1)^0,f,c
  5328  002A2A  5020               	movf	(??_floorf+2)^0,w,c
  5329  002A2C  162C               	andwf	(floorf@u+2)^0,f,c
  5330  002A2E  5021               	movf	(??_floorf+3)^0,w,c
  5331  002A30  162D               	andwf	(floorf@u+3)^0,f,c
  5332  002A32  EF5F  F015         	goto	l3247
  5333  002A36                     l3239:
  5334  002A36  C02A  F01E         	movff	floorf@u,??_floorf
  5335  002A3A  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5336  002A3E  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5337  002A42  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5338  002A46  0E20               	movlw	32
  5339  002A48  EF2B  F015         	goto	u3900
  5340  002A4C                     u3905:
  5341  002A4C  90D8               	bcf	status,0,c
  5342  002A4E  3221               	rrcf	(??_floorf+3)^0,f,c
  5343  002A50  3220               	rrcf	(??_floorf+2)^0,f,c
  5344  002A52  321F               	rrcf	(??_floorf+1)^0,f,c
  5345  002A54  321E               	rrcf	??_floorf^0,f,c
  5346  002A56                     u3900:
  5347  002A56  2EE8               	decfsz	wreg,f,c
  5348  002A58  EF26  F015         	goto	u3905
  5349  002A5C  501E               	movf	??_floorf^0,w,c
  5350  002A5E  101F               	iorwf	(??_floorf+1)^0,w,c
  5351  002A60  1020               	iorwf	(??_floorf+2)^0,w,c
  5352  002A62  1021               	iorwf	(??_floorf+3)^0,w,c
  5353  002A64  A4D8               	btfss	status,2,c
  5354  002A66  EF37  F015         	goto	u3911
  5355  002A6A  EF39  F015         	goto	u3910
  5356  002A6E                     u3911:
  5357  002A6E  EF43  F015         	goto	l3243
  5358  002A72                     u3910:
  5359  002A72  0E00               	movlw	0
  5360  002A74  6E2A               	movwf	floorf@u^0,c
  5361  002A76  0E00               	movlw	0
  5362  002A78  6E2B               	movwf	(floorf@u+1)^0,c
  5363  002A7A  0E00               	movlw	0
  5364  002A7C  6E2C               	movwf	(floorf@u+2)^0,c
  5365  002A7E  0E00               	movlw	0
  5366  002A80  6E2D               	movwf	(floorf@u+3)^0,c
  5367  002A82  EF5F  F015         	goto	l3247
  5368  002A86                     l3243:
  5369  002A86  90D8               	bcf	status,0,c
  5370  002A88  342A               	rlcf	floorf@u^0,w,c
  5371  002A8A  6E1E               	movwf	??_floorf^0,c
  5372  002A8C  342B               	rlcf	(floorf@u+1)^0,w,c
  5373  002A8E  6E1F               	movwf	(??_floorf+1)^0,c
  5374  002A90  342C               	rlcf	(floorf@u+2)^0,w,c
  5375  002A92  6E20               	movwf	(??_floorf+2)^0,c
  5376  002A94  342D               	rlcf	(floorf@u+3)^0,w,c
  5377  002A96  6E21               	movwf	(??_floorf+3)^0,c
  5378  002A98  501E               	movf	??_floorf^0,w,c
  5379  002A9A  101F               	iorwf	(??_floorf+1)^0,w,c
  5380  002A9C  1020               	iorwf	(??_floorf+2)^0,w,c
  5381  002A9E  1021               	iorwf	(??_floorf+3)^0,w,c
  5382  002AA0  B4D8               	btfsc	status,2,c
  5383  002AA2  EF55  F015         	goto	u3921
  5384  002AA6  EF57  F015         	goto	u3920
  5385  002AAA                     u3921:
  5386  002AAA  EF5F  F015         	goto	l3247
  5387  002AAE                     u3920:
  5388  002AAE  0E00               	movlw	0
  5389  002AB0  6E2A               	movwf	floorf@u^0,c
  5390  002AB2  0E00               	movlw	0
  5391  002AB4  6E2B               	movwf	(floorf@u+1)^0,c
  5392  002AB6  0E80               	movlw	128
  5393  002AB8  6E2C               	movwf	(floorf@u+2)^0,c
  5394  002ABA  0EBF               	movlw	191
  5395  002ABC  6E2D               	movwf	(floorf@u+3)^0,c
  5396  002ABE                     l3247:
  5397  002ABE  C02A  F01A         	movff	floorf@u,?_floorf
  5398  002AC2  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5399  002AC6  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5400  002ACA  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5401  002ACE                     l971:
  5402  002ACE  0012               	return		;funcret
  5403  002AD0                     __end_of_floorf:
  5404                           	callstack 0
  5405                           
  5406 ;; *************** function ___fpclassifyf *****************
  5407 ;; Defined at:
  5408 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  x               4    0[COMRAM] float 
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;  u               4   10[COMRAM] struct .
  5413 ;;  e               2    8[COMRAM] int 
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  2    0[COMRAM] int 
  5416 ;; Registers used:
  5417 ;;		wreg, status,2, status,0
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5423 ;;      Params:         4       0       0       0       0       0       0       0       0
  5424 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5425 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5426 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5427 ;;Total ram usage:       14 bytes
  5428 ;; Hardware stack levels used: 1
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_efgtoa
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text20
  5437  002F74                     __ptext20:
  5438                           	callstack 0
  5439  002F74                     ___fpclassifyf:
  5440                           	callstack 26
  5441  002F74  C0E2  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5442  002F78  C0E3  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5443  002F7C  C0E4  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5444  002F80  C0E5  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5445  002F84  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5446  002F88  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5447  002F8C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5448  002F90  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5449  002F94  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5450  002F98  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5451  002F9C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5452  002FA0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5453  002FA4  0E18               	movlw	24
  5454  002FA6  EFDA  F017         	goto	u3710
  5455  002FAA                     u3715:
  5456  002FAA  90D8               	bcf	status,0,c
  5457  002FAC  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5458  002FAE  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5459  002FB0  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5460  002FB2  3205               	rrcf	??___fpclassifyf^0,f,c
  5461  002FB4                     u3710:
  5462  002FB4  2EE8               	decfsz	wreg,f,c
  5463  002FB6  EFD5  F017         	goto	u3715
  5464  002FBA  5005               	movf	??___fpclassifyf^0,w,c
  5465  002FBC  6E09               	movwf	___fpclassifyf@e^0,c
  5466  002FBE  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5467  002FC0  5009               	movf	___fpclassifyf@e^0,w,c
  5468  002FC2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5469  002FC4  A4D8               	btfss	status,2,c
  5470  002FC6  EFE7  F017         	goto	u3721
  5471  002FCA  EFE9  F017         	goto	u3720
  5472  002FCE                     u3721:
  5473  002FCE  EF09  F018         	goto	l3199
  5474  002FD2                     u3720:
  5475  002FD2  90D8               	bcf	status,0,c
  5476  002FD4  340B               	rlcf	___fpclassifyf@u^0,w,c
  5477  002FD6  6E05               	movwf	??___fpclassifyf^0,c
  5478  002FD8  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5479  002FDA  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5480  002FDC  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5481  002FDE  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5482  002FE0  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5483  002FE2  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5484  002FE4  5005               	movf	??___fpclassifyf^0,w,c
  5485  002FE6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5486  002FE8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5487  002FEA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5488  002FEC  A4D8               	btfss	status,2,c
  5489  002FEE  EFFB  F017         	goto	u3731
  5490  002FF2  EFFD  F017         	goto	u3730
  5491  002FF6                     u3731:
  5492  002FF6  EF03  F018         	goto	l3195
  5493  002FFA                     u3730:
  5494  002FFA  0E00               	movlw	0
  5495  002FFC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5496  002FFE  0E02               	movlw	2
  5497  003000  6E01               	movwf	?___fpclassifyf^0,c
  5498  003002  EF38  F018         	goto	l933
  5499  003006                     l3195:
  5500  003006  0E00               	movlw	0
  5501  003008  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5502  00300A  0E03               	movlw	3
  5503  00300C  6E01               	movwf	?___fpclassifyf^0,c
  5504  00300E  EF38  F018         	goto	l933
  5505  003012                     l3199:
  5506  003012  2809               	incf	___fpclassifyf@e^0,w,c
  5507  003014  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5508  003016  A4D8               	btfss	status,2,c
  5509  003018  EF10  F018         	goto	u3741
  5510  00301C  EF12  F018         	goto	u3740
  5511  003020                     u3741:
  5512  003020  EF34  F018         	goto	l3205
  5513  003024                     u3740:
  5514  003024  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5515  003028  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5516  00302C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5517  003030  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5518  003034  0E09               	movlw	9
  5519  003036                     u3755:
  5520  003036  90D8               	bcf	status,0,c
  5521  003038  3605               	rlcf	??___fpclassifyf^0,f,c
  5522  00303A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5523  00303C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5524  00303E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5525  003040  2EE8               	decfsz	wreg,f,c
  5526  003042  EF1B  F018         	goto	u3755
  5527  003046  5005               	movf	??___fpclassifyf^0,w,c
  5528  003048  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5529  00304A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5530  00304C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5531  00304E  B4D8               	btfsc	status,2,c
  5532  003050  EF2C  F018         	goto	u3761
  5533  003054  EF2F  F018         	goto	u3760
  5534  003058                     u3761:
  5535  003058  0E01               	movlw	1
  5536  00305A  EF30  F018         	goto	u3770
  5537  00305E                     u3760:
  5538  00305E  0E00               	movlw	0
  5539  003060                     u3770:
  5540  003060  6E01               	movwf	?___fpclassifyf^0,c
  5541  003062  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5542  003064  EF38  F018         	goto	l933
  5543  003068                     l3205:
  5544  003068  0E00               	movlw	0
  5545  00306A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5546  00306C  0E04               	movlw	4
  5547  00306E  6E01               	movwf	?___fpclassifyf^0,c
  5548  003070                     l933:
  5549  003070  0012               	return		;funcret
  5550  003072                     __end_of___fpclassifyf:
  5551                           	callstack 0
  5552                           
  5553 ;; *************** function ___fltol *****************
  5554 ;; Defined at:
  5555 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  f1              4    0[COMRAM] int 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;  exp1            1    9[COMRAM] unsigned char 
  5560 ;;  sign1           1    8[COMRAM] unsigned char 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  4    0[COMRAM] long 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5570 ;;      Params:         4       0       0       0       0       0       0       0       0
  5571 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5572 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5573 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5574 ;;Total ram usage:       10 bytes
  5575 ;; Hardware stack levels used: 1
  5576 ;; This function calls:
  5577 ;;		Nothing
  5578 ;; This function is called by:
  5579 ;;		_efgtoa
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           	psect	text21
  5584  002D6A                     __ptext21:
  5585                           	callstack 0
  5586  002D6A                     ___fltol:
  5587                           	callstack 26
  5588  002D6A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5589  002D6C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5590  002D6E  6E0A               	movwf	___fltol@exp1^0,c
  5591  002D70  500A               	movf	___fltol@exp1^0,w,c
  5592  002D72  A4D8               	btfss	status,2,c
  5593  002D74  EFBE  F016         	goto	u3601
  5594  002D78  EFC0  F016         	goto	u3600
  5595  002D7C                     u3601:
  5596  002D7C  EFCA  F016         	goto	l3127
  5597  002D80                     u3600:
  5598  002D80                     l3123:
  5599  002D80  0E00               	movlw	0
  5600  002D82  6E01               	movwf	?___fltol^0,c
  5601  002D84  0E00               	movlw	0
  5602  002D86  6E02               	movwf	(?___fltol+1)^0,c
  5603  002D88  0E00               	movlw	0
  5604  002D8A  6E03               	movwf	(?___fltol+2)^0,c
  5605  002D8C  0E00               	movlw	0
  5606  002D8E  6E04               	movwf	(?___fltol+3)^0,c
  5607  002D90  EF37  F017         	goto	l362
  5608  002D94                     l3127:
  5609  002D94  C001  F005         	movff	___fltol@f1,??___fltol
  5610  002D98  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5611  002D9C  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5612  002DA0  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5613  002DA4  0E20               	movlw	32
  5614  002DA6  EFDA  F016         	goto	u3610
  5615  002DAA                     u3615:
  5616  002DAA  90D8               	bcf	status,0,c
  5617  002DAC  3208               	rrcf	(??___fltol+3)^0,f,c
  5618  002DAE  3207               	rrcf	(??___fltol+2)^0,f,c
  5619  002DB0  3206               	rrcf	(??___fltol+1)^0,f,c
  5620  002DB2  3205               	rrcf	??___fltol^0,f,c
  5621  002DB4                     u3610:
  5622  002DB4  2EE8               	decfsz	wreg,f,c
  5623  002DB6  EFD5  F016         	goto	u3615
  5624  002DBA  5005               	movf	??___fltol^0,w,c
  5625  002DBC  6E09               	movwf	___fltol@sign1^0,c
  5626  002DBE  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5627  002DC0  0EFF               	movlw	255
  5628  002DC2  1601               	andwf	___fltol@f1^0,f,c
  5629  002DC4  0EFF               	movlw	255
  5630  002DC6  1602               	andwf	(___fltol@f1+1)^0,f,c
  5631  002DC8  0EFF               	movlw	255
  5632  002DCA  1603               	andwf	(___fltol@f1+2)^0,f,c
  5633  002DCC  0E00               	movlw	0
  5634  002DCE  1604               	andwf	(___fltol@f1+3)^0,f,c
  5635  002DD0  0E96               	movlw	150
  5636  002DD2  5E0A               	subwf	___fltol@exp1^0,f,c
  5637  002DD4  BE0A               	btfsc	___fltol@exp1^0,7,c
  5638  002DD6  EFF1  F016         	goto	u3620
  5639  002DDA  EFEF  F016         	goto	u3621
  5640  002DDE                     u3621:
  5641  002DDE  EF07  F017         	goto	l3147
  5642  002DE2                     u3620:
  5643  002DE2  500A               	movf	___fltol@exp1^0,w,c
  5644  002DE4  0A80               	xorlw	128
  5645  002DE6  0F97               	addlw	151
  5646  002DE8  B0D8               	btfsc	status,0,c
  5647  002DEA  EFF9  F016         	goto	u3631
  5648  002DEE  EFFB  F016         	goto	u3630
  5649  002DF2                     u3631:
  5650  002DF2  EFFD  F016         	goto	l3143
  5651  002DF6                     u3630:
  5652  002DF6  EFC0  F016         	goto	l3123
  5653  002DFA                     l3143:
  5654  002DFA  90D8               	bcf	status,0,c
  5655  002DFC  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5656  002DFE  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5657  002E00  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5658  002E02  3201               	rrcf	___fltol@f1^0,f,c
  5659  002E04  3E0A               	incfsz	___fltol@exp1^0,f,c
  5660  002E06  EFFD  F016         	goto	l3143
  5661  002E0A  EF1F  F017         	goto	l3157
  5662  002E0E                     l3147:
  5663  002E0E  0E1F               	movlw	31
  5664  002E10  640A               	cpfsgt	___fltol@exp1^0,c
  5665  002E12  EF0D  F017         	goto	u3641
  5666  002E16  EF0F  F017         	goto	u3640
  5667  002E1A                     u3641:
  5668  002E1A  EF17  F017         	goto	l3155
  5669  002E1E                     u3640:
  5670  002E1E  EFC0  F016         	goto	l3123
  5671  002E22                     l3153:
  5672  002E22  90D8               	bcf	status,0,c
  5673  002E24  3601               	rlcf	___fltol@f1^0,f,c
  5674  002E26  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5675  002E28  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5676  002E2A  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5677  002E2C  060A               	decf	___fltol@exp1^0,f,c
  5678  002E2E                     l3155:
  5679  002E2E  500A               	movf	___fltol@exp1^0,w,c
  5680  002E30  A4D8               	btfss	status,2,c
  5681  002E32  EF1D  F017         	goto	u3651
  5682  002E36  EF1F  F017         	goto	u3650
  5683  002E3A                     u3651:
  5684  002E3A  EF11  F017         	goto	l3153
  5685  002E3E                     u3650:
  5686  002E3E                     l3157:
  5687  002E3E  5009               	movf	___fltol@sign1^0,w,c
  5688  002E40  B4D8               	btfsc	status,2,c
  5689  002E42  EF25  F017         	goto	u3661
  5690  002E46  EF27  F017         	goto	u3660
  5691  002E4A                     u3661:
  5692  002E4A  EF2F  F017         	goto	l3161
  5693  002E4E                     u3660:
  5694  002E4E  1E04               	comf	(___fltol@f1+3)^0,f,c
  5695  002E50  1E03               	comf	(___fltol@f1+2)^0,f,c
  5696  002E52  1E02               	comf	(___fltol@f1+1)^0,f,c
  5697  002E54  6C01               	negf	___fltol@f1^0,c
  5698  002E56  0E00               	movlw	0
  5699  002E58  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5700  002E5A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5701  002E5C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5702  002E5E                     l3161:
  5703  002E5E  C001  F001         	movff	___fltol@f1,?___fltol
  5704  002E62  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5705  002E66  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5706  002E6A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5707  002E6E                     l362:
  5708  002E6E  0012               	return		;funcret
  5709  002E70                     __end_of___fltol:
  5710                           	callstack 0
  5711                           
  5712 ;; *************** function ___flsub *****************
  5713 ;; Defined at:
  5714 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  b               4   25[COMRAM] long 
  5717 ;;  a               4   29[COMRAM] long 
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;		None
  5720 ;; Return value:  Size  Location     Type
  5721 ;;                  4   25[COMRAM] long 
  5722 ;; Registers used:
  5723 ;;		wreg, status,2, status,0, cstack
  5724 ;; Tracked objects:
  5725 ;;		On entry : 0/0
  5726 ;;		On exit  : 0/0
  5727 ;;		Unchanged: 0/0
  5728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5729 ;;      Params:         8       0       0       0       0       0       0       0       0
  5730 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5732 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5733 ;;Total ram usage:        8 bytes
  5734 ;; Hardware stack levels used: 1
  5735 ;; Hardware stack levels required when called: 1
  5736 ;; This function calls:
  5737 ;;		___fladd
  5738 ;; This function is called by:
  5739 ;;		_efgtoa
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           	psect	text22
  5744  0037CC                     __ptext22:
  5745                           	callstack 0
  5746  0037CC                     ___flsub:
  5747                           	callstack 25
  5748  0037CC  0E00               	movlw	0
  5749  0037CE  1A1E               	xorwf	___flsub@a^0,f,c
  5750  0037D0  0E00               	movlw	0
  5751  0037D2  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5752  0037D4  0E00               	movlw	0
  5753  0037D6  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5754  0037D8  0E80               	movlw	128
  5755  0037DA  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5756  0037DC  C01A  F001         	movff	___flsub@b,___fladd@b
  5757  0037E0  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5758  0037E4  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5759  0037E8  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5760  0037EC  C01E  F005         	movff	___flsub@a,___fladd@a
  5761  0037F0  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5762  0037F4  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5763  0037F8  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5764  0037FC  ECEC  F00C         	call	___fladd	;wreg free
  5765  003800  C001  F01A         	movff	?___fladd,?___flsub
  5766  003804  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5767  003808  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5768  00380C  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5769  003810  0012               	return		;funcret
  5770  003812                     __end_of___flsub:
  5771                           	callstack 0
  5772                           
  5773 ;; *************** function ___fladd *****************
  5774 ;; Defined at:
  5775 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  b               4    0[COMRAM] long 
  5778 ;;  a               4    4[COMRAM] long 
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;  grs             1   15[COMRAM] unsigned char 
  5781 ;;  bexp            1   14[COMRAM] unsigned char 
  5782 ;;  aexp            1   13[COMRAM] unsigned char 
  5783 ;;  signs           1   12[COMRAM] unsigned char 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  4    0[COMRAM] unsigned char 
  5786 ;; Registers used:
  5787 ;;		wreg, status,2, status,0
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5793 ;;      Params:         8       0       0       0       0       0       0       0       0
  5794 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5795 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5796 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5797 ;;Total ram usage:       16 bytes
  5798 ;; Hardware stack levels used: 1
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		___flsub
  5803 ;;		_efgtoa
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text23
  5808  0019D8                     __ptext23:
  5809                           	callstack 0
  5810  0019D8                     ___fladd:
  5811                           	callstack 25
  5812  0019D8  5004               	movf	(___fladd@b+3)^0,w,c
  5813  0019DA  0B80               	andlw	128
  5814  0019DC  6E0D               	movwf	___fladd@signs^0,c
  5815  0019DE  5004               	movf	(___fladd@b+3)^0,w,c
  5816  0019E0  2404               	addwf	(___fladd@b+3)^0,w,c
  5817  0019E2  6E0F               	movwf	___fladd@bexp^0,c
  5818  0019E4  AE03               	btfss	(___fladd@b+2)^0,7,c
  5819  0019E6  EFF7  F00C         	goto	u2551
  5820  0019EA  EFF9  F00C         	goto	u2550
  5821  0019EE                     u2551:
  5822  0019EE  EFFA  F00C         	goto	l2507
  5823  0019F2                     u2550:
  5824  0019F2  800F               	bsf	___fladd@bexp^0,0,c
  5825  0019F4                     l2507:
  5826  0019F4  500F               	movf	___fladd@bexp^0,w,c
  5827  0019F6  B4D8               	btfsc	status,2,c
  5828  0019F8  EF00  F00D         	goto	u2561
  5829  0019FC  EF02  F00D         	goto	u2560
  5830  001A00                     u2561:
  5831  001A00  EF17  F00D         	goto	l2517
  5832  001A04                     u2560:
  5833  001A04  280F               	incf	___fladd@bexp^0,w,c
  5834  001A06  A4D8               	btfss	status,2,c
  5835  001A08  EF08  F00D         	goto	u2571
  5836  001A0C  EF0A  F00D         	goto	u2570
  5837  001A10                     u2571:
  5838  001A10  EF12  F00D         	goto	l2513
  5839  001A14                     u2570:
  5840  001A14  0E00               	movlw	0
  5841  001A16  6E01               	movwf	___fladd@b^0,c
  5842  001A18  0E00               	movlw	0
  5843  001A1A  6E02               	movwf	(___fladd@b+1)^0,c
  5844  001A1C  0E00               	movlw	0
  5845  001A1E  6E03               	movwf	(___fladd@b+2)^0,c
  5846  001A20  0E00               	movlw	0
  5847  001A22  6E04               	movwf	(___fladd@b+3)^0,c
  5848  001A24                     l2513:
  5849  001A24  8E03               	bsf	(___fladd@b+2)^0,7,c
  5850  001A26  0E00               	movlw	0
  5851  001A28  6E04               	movwf	(___fladd@b+3)^0,c
  5852  001A2A  EF1F  F00D         	goto	l2519
  5853  001A2E                     l2517:
  5854  001A2E  0E00               	movlw	0
  5855  001A30  6E01               	movwf	___fladd@b^0,c
  5856  001A32  0E00               	movlw	0
  5857  001A34  6E02               	movwf	(___fladd@b+1)^0,c
  5858  001A36  0E00               	movlw	0
  5859  001A38  6E03               	movwf	(___fladd@b+2)^0,c
  5860  001A3A  0E00               	movlw	0
  5861  001A3C  6E04               	movwf	(___fladd@b+3)^0,c
  5862  001A3E                     l2519:
  5863  001A3E  5008               	movf	(___fladd@a+3)^0,w,c
  5864  001A40  0B80               	andlw	128
  5865  001A42  6E0E               	movwf	___fladd@aexp^0,c
  5866  001A44  500D               	movf	___fladd@signs^0,w,c
  5867  001A46  180E               	xorwf	___fladd@aexp^0,w,c
  5868  001A48  B4D8               	btfsc	status,2,c
  5869  001A4A  EF29  F00D         	goto	u2581
  5870  001A4E  EF2B  F00D         	goto	u2580
  5871  001A52                     u2581:
  5872  001A52  EF2C  F00D         	goto	l2525
  5873  001A56                     u2580:
  5874  001A56  8C0D               	bsf	___fladd@signs^0,6,c
  5875  001A58                     l2525:
  5876  001A58  5008               	movf	(___fladd@a+3)^0,w,c
  5877  001A5A  2408               	addwf	(___fladd@a+3)^0,w,c
  5878  001A5C  6E0E               	movwf	___fladd@aexp^0,c
  5879  001A5E  AE07               	btfss	(___fladd@a+2)^0,7,c
  5880  001A60  EF34  F00D         	goto	u2591
  5881  001A64  EF36  F00D         	goto	u2590
  5882  001A68                     u2591:
  5883  001A68  EF37  F00D         	goto	l2531
  5884  001A6C                     u2590:
  5885  001A6C  800E               	bsf	___fladd@aexp^0,0,c
  5886  001A6E                     l2531:
  5887  001A6E  500E               	movf	___fladd@aexp^0,w,c
  5888  001A70  B4D8               	btfsc	status,2,c
  5889  001A72  EF3D  F00D         	goto	u2601
  5890  001A76  EF3F  F00D         	goto	u2600
  5891  001A7A                     u2601:
  5892  001A7A  EF54  F00D         	goto	l2541
  5893  001A7E                     u2600:
  5894  001A7E  280E               	incf	___fladd@aexp^0,w,c
  5895  001A80  A4D8               	btfss	status,2,c
  5896  001A82  EF45  F00D         	goto	u2611
  5897  001A86  EF47  F00D         	goto	u2610
  5898  001A8A                     u2611:
  5899  001A8A  EF4F  F00D         	goto	l2537
  5900  001A8E                     u2610:
  5901  001A8E  0E00               	movlw	0
  5902  001A90  6E05               	movwf	___fladd@a^0,c
  5903  001A92  0E00               	movlw	0
  5904  001A94  6E06               	movwf	(___fladd@a+1)^0,c
  5905  001A96  0E00               	movlw	0
  5906  001A98  6E07               	movwf	(___fladd@a+2)^0,c
  5907  001A9A  0E00               	movlw	0
  5908  001A9C  6E08               	movwf	(___fladd@a+3)^0,c
  5909  001A9E                     l2537:
  5910  001A9E  8E07               	bsf	(___fladd@a+2)^0,7,c
  5911  001AA0  0E00               	movlw	0
  5912  001AA2  6E08               	movwf	(___fladd@a+3)^0,c
  5913  001AA4  EF5C  F00D         	goto	l2543
  5914  001AA8                     l2541:
  5915  001AA8  0E00               	movlw	0
  5916  001AAA  6E05               	movwf	___fladd@a^0,c
  5917  001AAC  0E00               	movlw	0
  5918  001AAE  6E06               	movwf	(___fladd@a+1)^0,c
  5919  001AB0  0E00               	movlw	0
  5920  001AB2  6E07               	movwf	(___fladd@a+2)^0,c
  5921  001AB4  0E00               	movlw	0
  5922  001AB6  6E08               	movwf	(___fladd@a+3)^0,c
  5923  001AB8                     l2543:
  5924  001AB8  500F               	movf	___fladd@bexp^0,w,c
  5925  001ABA  5C0E               	subwf	___fladd@aexp^0,w,c
  5926  001ABC  B0D8               	btfsc	status,0,c
  5927  001ABE  EF63  F00D         	goto	u2621
  5928  001AC2  EF65  F00D         	goto	u2620
  5929  001AC6                     u2621:
  5930  001AC6  EF8C  F00D         	goto	l2579
  5931  001ACA                     u2620:
  5932  001ACA  AC0D               	btfss	___fladd@signs^0,6,c
  5933  001ACC  EF6A  F00D         	goto	u2631
  5934  001AD0  EF6C  F00D         	goto	u2630
  5935  001AD4                     u2631:
  5936  001AD4  EF6E  F00D         	goto	l2549
  5937  001AD8                     u2630:
  5938  001AD8  0E80               	movlw	128
  5939  001ADA  1A0D               	xorwf	___fladd@signs^0,f,c
  5940  001ADC                     l2549:
  5941  001ADC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5942  001AE0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5943  001AE4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5944  001AE8  C001  F010         	movff	___fladd@b,___fladd@grs
  5945  001AEC  C005  F001         	movff	___fladd@a,___fladd@b
  5946  001AF0  C010  F005         	movff	___fladd@grs,___fladd@a
  5947  001AF4  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5948  001AF8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5949  001AFC  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5950  001B00  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5951  001B04  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5952  001B08  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5953  001B0C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5954  001B10  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5955  001B14  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5956  001B18                     l2579:
  5957  001B18  0E00               	movlw	0
  5958  001B1A  6E10               	movwf	___fladd@grs^0,c
  5959  001B1C  500F               	movf	___fladd@bexp^0,w,c
  5960  001B1E  C00E  F009         	movff	___fladd@aexp,??___fladd
  5961  001B22  6A0A               	clrf	(??___fladd+1)^0,c
  5962  001B24  5E09               	subwf	??___fladd^0,f,c
  5963  001B26  0E00               	movlw	0
  5964  001B28  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5965  001B2A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5966  001B2C  EFA1  F00D         	goto	u2641
  5967  001B30  500A               	movf	(??___fladd+1)^0,w,c
  5968  001B32  E109               	bnz	u2640
  5969  001B34  0E1A               	movlw	26
  5970  001B36  5C09               	subwf	??___fladd^0,w,c
  5971  001B38  A0D8               	btfss	status,0,c
  5972  001B3A  EFA1  F00D         	goto	u2641
  5973  001B3E  EFA3  F00D         	goto	u2640
  5974  001B42                     u2641:
  5975  001B42  EFDA  F00D         	goto	l594
  5976  001B46                     u2640:
  5977  001B46  5001               	movf	___fladd@b^0,w,c
  5978  001B48  1002               	iorwf	(___fladd@b+1)^0,w,c
  5979  001B4A  1003               	iorwf	(___fladd@b+2)^0,w,c
  5980  001B4C  1004               	iorwf	(___fladd@b+3)^0,w,c
  5981  001B4E  A4D8               	btfss	status,2,c
  5982  001B50  EFAC  F00D         	goto	u2651
  5983  001B54  EFAF  F00D         	goto	u2650
  5984  001B58                     u2651:
  5985  001B58  0E01               	movlw	1
  5986  001B5A  EFB0  F00D         	goto	u2660
  5987  001B5E                     u2650:
  5988  001B5E  0E00               	movlw	0
  5989  001B60                     u2660:
  5990  001B60  6E10               	movwf	___fladd@grs^0,c
  5991  001B62  0E00               	movlw	0
  5992  001B64  6E01               	movwf	___fladd@b^0,c
  5993  001B66  0E00               	movlw	0
  5994  001B68  6E02               	movwf	(___fladd@b+1)^0,c
  5995  001B6A  0E00               	movlw	0
  5996  001B6C  6E03               	movwf	(___fladd@b+2)^0,c
  5997  001B6E  0E00               	movlw	0
  5998  001B70  6E04               	movwf	(___fladd@b+3)^0,c
  5999  001B72  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6000  001B76  EFE3  F00D         	goto	l593
  6001  001B7A                     l595:
  6002  001B7A  A010               	btfss	___fladd@grs^0,0,c
  6003  001B7C  EFC2  F00D         	goto	u2671
  6004  001B80  EFC4  F00D         	goto	u2670
  6005  001B84                     u2671:
  6006  001B84  EFCA  F00D         	goto	l2591
  6007  001B88                     u2670:
  6008  001B88  90D8               	bcf	status,0,c
  6009  001B8A  3010               	rrcf	___fladd@grs^0,w,c
  6010  001B8C  0901               	iorlw	1
  6011  001B8E  6E10               	movwf	___fladd@grs^0,c
  6012  001B90  EFCC  F00D         	goto	l2593
  6013  001B94                     l2591:
  6014  001B94  90D8               	bcf	status,0,c
  6015  001B96  3210               	rrcf	___fladd@grs^0,f,c
  6016  001B98                     l2593:
  6017  001B98  A001               	btfss	___fladd@b^0,0,c
  6018  001B9A  EFD1  F00D         	goto	u2681
  6019  001B9E  EFD3  F00D         	goto	u2680
  6020  001BA2                     u2681:
  6021  001BA2  EFD4  F00D         	goto	l2597
  6022  001BA6                     u2680:
  6023  001BA6  8E10               	bsf	___fladd@grs^0,7,c
  6024  001BA8                     l2597:
  6025  001BA8  3404               	rlcf	(___fladd@b+3)^0,w,c
  6026  001BAA  3204               	rrcf	(___fladd@b+3)^0,f,c
  6027  001BAC  3203               	rrcf	(___fladd@b+2)^0,f,c
  6028  001BAE  3202               	rrcf	(___fladd@b+1)^0,f,c
  6029  001BB0  3201               	rrcf	___fladd@b^0,f,c
  6030  001BB2  2A0F               	incf	___fladd@bexp^0,f,c
  6031  001BB4                     l594:
  6032  001BB4  500E               	movf	___fladd@aexp^0,w,c
  6033  001BB6  5C0F               	subwf	___fladd@bexp^0,w,c
  6034  001BB8  A0D8               	btfss	status,0,c
  6035  001BBA  EFE1  F00D         	goto	u2691
  6036  001BBE  EFE3  F00D         	goto	u2690
  6037  001BC2                     u2691:
  6038  001BC2  EFBD  F00D         	goto	l595
  6039  001BC6                     u2690:
  6040  001BC6                     l593:
  6041  001BC6  BC0D               	btfsc	___fladd@signs^0,6,c
  6042  001BC8  EFE8  F00D         	goto	u2701
  6043  001BCC  EFEA  F00D         	goto	u2700
  6044  001BD0                     u2701:
  6045  001BD0  EF2A  F00E         	goto	l2625
  6046  001BD4                     u2700:
  6047  001BD4  500F               	movf	___fladd@bexp^0,w,c
  6048  001BD6  A4D8               	btfss	status,2,c
  6049  001BD8  EFF0  F00D         	goto	u2711
  6050  001BDC  EFF2  F00D         	goto	u2710
  6051  001BE0                     u2711:
  6052  001BE0  EFFC  F00D         	goto	l2607
  6053  001BE4                     u2710:
  6054  001BE4  0E00               	movlw	0
  6055  001BE6  6E01               	movwf	?___fladd^0,c
  6056  001BE8  0E00               	movlw	0
  6057  001BEA  6E02               	movwf	(?___fladd+1)^0,c
  6058  001BEC  0E00               	movlw	0
  6059  001BEE  6E03               	movwf	(?___fladd+2)^0,c
  6060  001BF0  0E00               	movlw	0
  6061  001BF2  6E04               	movwf	(?___fladd+3)^0,c
  6062  001BF4  EF4B  F00F         	goto	l602
  6063  001BF8                     l2607:
  6064  001BF8  5005               	movf	___fladd@a^0,w,c
  6065  001BFA  2601               	addwf	___fladd@b^0,f,c
  6066  001BFC  5006               	movf	(___fladd@a+1)^0,w,c
  6067  001BFE  2202               	addwfc	(___fladd@b+1)^0,f,c
  6068  001C00  5007               	movf	(___fladd@a+2)^0,w,c
  6069  001C02  2203               	addwfc	(___fladd@b+2)^0,f,c
  6070  001C04  5008               	movf	(___fladd@a+3)^0,w,c
  6071  001C06  2204               	addwfc	(___fladd@b+3)^0,f,c
  6072  001C08  A004               	btfss	(___fladd@b+3)^0,0,c
  6073  001C0A  EF09  F00E         	goto	u2721
  6074  001C0E  EF0B  F00E         	goto	u2720
  6075  001C12                     u2721:
  6076  001C12  EFB7  F00E         	goto	l2661
  6077  001C16                     u2720:
  6078  001C16  A010               	btfss	___fladd@grs^0,0,c
  6079  001C18  EF10  F00E         	goto	u2731
  6080  001C1C  EF12  F00E         	goto	u2730
  6081  001C20                     u2731:
  6082  001C20  EF18  F00E         	goto	l2615
  6083  001C24                     u2730:
  6084  001C24  90D8               	bcf	status,0,c
  6085  001C26  3010               	rrcf	___fladd@grs^0,w,c
  6086  001C28  0901               	iorlw	1
  6087  001C2A  6E10               	movwf	___fladd@grs^0,c
  6088  001C2C  EF1A  F00E         	goto	l2617
  6089  001C30                     l2615:
  6090  001C30  90D8               	bcf	status,0,c
  6091  001C32  3210               	rrcf	___fladd@grs^0,f,c
  6092  001C34                     l2617:
  6093  001C34  A001               	btfss	___fladd@b^0,0,c
  6094  001C36  EF1F  F00E         	goto	u2741
  6095  001C3A  EF21  F00E         	goto	u2740
  6096  001C3E                     u2741:
  6097  001C3E  EF22  F00E         	goto	l2621
  6098  001C42                     u2740:
  6099  001C42  8E10               	bsf	___fladd@grs^0,7,c
  6100  001C44                     l2621:
  6101  001C44  3404               	rlcf	(___fladd@b+3)^0,w,c
  6102  001C46  3204               	rrcf	(___fladd@b+3)^0,f,c
  6103  001C48  3203               	rrcf	(___fladd@b+2)^0,f,c
  6104  001C4A  3202               	rrcf	(___fladd@b+1)^0,f,c
  6105  001C4C  3201               	rrcf	___fladd@b^0,f,c
  6106  001C4E  2A0F               	incf	___fladd@bexp^0,f,c
  6107  001C50  EFB7  F00E         	goto	l2661
  6108  001C54                     l2625:
  6109  001C54  5005               	movf	___fladd@a^0,w,c
  6110  001C56  5C01               	subwf	___fladd@b^0,w,c
  6111  001C58  5006               	movf	(___fladd@a+1)^0,w,c
  6112  001C5A  5802               	subwfb	(___fladd@b+1)^0,w,c
  6113  001C5C  5007               	movf	(___fladd@a+2)^0,w,c
  6114  001C5E  5803               	subwfb	(___fladd@b+2)^0,w,c
  6115  001C60  5004               	movf	(___fladd@b+3)^0,w,c
  6116  001C62  0A80               	xorlw	128
  6117  001C64  6E09               	movwf	??___fladd^0,c
  6118  001C66  5008               	movf	(___fladd@a+3)^0,w,c
  6119  001C68  0A80               	xorlw	128
  6120  001C6A  5809               	subwfb	??___fladd^0,w,c
  6121  001C6C  B0D8               	btfsc	status,0,c
  6122  001C6E  EF3B  F00E         	goto	u2751
  6123  001C72  EF3D  F00E         	goto	u2750
  6124  001C76                     u2751:
  6125  001C76  EF68  F00E         	goto	l2635
  6126  001C7A                     u2750:
  6127  001C7A  5001               	movf	___fladd@b^0,w,c
  6128  001C7C  5C05               	subwf	___fladd@a^0,w,c
  6129  001C7E  6E09               	movwf	??___fladd^0,c
  6130  001C80  5002               	movf	(___fladd@b+1)^0,w,c
  6131  001C82  5806               	subwfb	(___fladd@a+1)^0,w,c
  6132  001C84  6E0A               	movwf	(??___fladd+1)^0,c
  6133  001C86  5003               	movf	(___fladd@b+2)^0,w,c
  6134  001C88  5807               	subwfb	(___fladd@a+2)^0,w,c
  6135  001C8A  6E0B               	movwf	(??___fladd+2)^0,c
  6136  001C8C  5004               	movf	(___fladd@b+3)^0,w,c
  6137  001C8E  5808               	subwfb	(___fladd@a+3)^0,w,c
  6138  001C90  6E0C               	movwf	(??___fladd+3)^0,c
  6139  001C92  0EFF               	movlw	255
  6140  001C94  2409               	addwf	??___fladd^0,w,c
  6141  001C96  6E01               	movwf	___fladd@b^0,c
  6142  001C98  0EFF               	movlw	255
  6143  001C9A  200A               	addwfc	(??___fladd+1)^0,w,c
  6144  001C9C  6E02               	movwf	(___fladd@b+1)^0,c
  6145  001C9E  0EFF               	movlw	255
  6146  001CA0  200B               	addwfc	(??___fladd+2)^0,w,c
  6147  001CA2  6E03               	movwf	(___fladd@b+2)^0,c
  6148  001CA4  0EFF               	movlw	255
  6149  001CA6  200C               	addwfc	(??___fladd+3)^0,w,c
  6150  001CA8  6E04               	movwf	(___fladd@b+3)^0,c
  6151  001CAA  0E80               	movlw	128
  6152  001CAC  1A0D               	xorwf	___fladd@signs^0,f,c
  6153  001CAE  6C10               	negf	___fladd@grs^0,c
  6154  001CB0  5010               	movf	___fladd@grs^0,w,c
  6155  001CB2  A4D8               	btfss	status,2,c
  6156  001CB4  EF5E  F00E         	goto	u2761
  6157  001CB8  EF60  F00E         	goto	u2760
  6158  001CBC                     u2761:
  6159  001CBC  EF70  F00E         	goto	l610
  6160  001CC0                     u2760:
  6161  001CC0  0E01               	movlw	1
  6162  001CC2  2601               	addwf	___fladd@b^0,f,c
  6163  001CC4  0E00               	movlw	0
  6164  001CC6  2202               	addwfc	(___fladd@b+1)^0,f,c
  6165  001CC8  2203               	addwfc	(___fladd@b+2)^0,f,c
  6166  001CCA  2204               	addwfc	(___fladd@b+3)^0,f,c
  6167  001CCC  EF70  F00E         	goto	l610
  6168  001CD0                     l2635:
  6169  001CD0  5005               	movf	___fladd@a^0,w,c
  6170  001CD2  5E01               	subwf	___fladd@b^0,f,c
  6171  001CD4  5006               	movf	(___fladd@a+1)^0,w,c
  6172  001CD6  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6173  001CD8  5007               	movf	(___fladd@a+2)^0,w,c
  6174  001CDA  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6175  001CDC  5008               	movf	(___fladd@a+3)^0,w,c
  6176  001CDE  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6177  001CE0                     l610:
  6178  001CE0  5001               	movf	___fladd@b^0,w,c
  6179  001CE2  1002               	iorwf	(___fladd@b+1)^0,w,c
  6180  001CE4  1003               	iorwf	(___fladd@b+2)^0,w,c
  6181  001CE6  1004               	iorwf	(___fladd@b+3)^0,w,c
  6182  001CE8  A4D8               	btfss	status,2,c
  6183  001CEA  EF79  F00E         	goto	u2771
  6184  001CEE  EF7B  F00E         	goto	u2770
  6185  001CF2                     u2771:
  6186  001CF2  EFB0  F00E         	goto	l2659
  6187  001CF6                     u2770:
  6188  001CF6  5010               	movf	___fladd@grs^0,w,c
  6189  001CF8  A4D8               	btfss	status,2,c
  6190  001CFA  EF81  F00E         	goto	u2781
  6191  001CFE  EF83  F00E         	goto	u2780
  6192  001D02                     u2781:
  6193  001D02  EFB0  F00E         	goto	l2659
  6194  001D06                     u2780:
  6195  001D06  0E00               	movlw	0
  6196  001D08  6E01               	movwf	?___fladd^0,c
  6197  001D0A  0E00               	movlw	0
  6198  001D0C  6E02               	movwf	(?___fladd+1)^0,c
  6199  001D0E  0E00               	movlw	0
  6200  001D10  6E03               	movwf	(?___fladd+2)^0,c
  6201  001D12  0E00               	movlw	0
  6202  001D14  6E04               	movwf	(?___fladd+3)^0,c
  6203  001D16  EF4B  F00F         	goto	l602
  6204  001D1A                     l2643:
  6205  001D1A  90D8               	bcf	status,0,c
  6206  001D1C  3601               	rlcf	___fladd@b^0,f,c
  6207  001D1E  3602               	rlcf	(___fladd@b+1)^0,f,c
  6208  001D20  3603               	rlcf	(___fladd@b+2)^0,f,c
  6209  001D22  3604               	rlcf	(___fladd@b+3)^0,f,c
  6210  001D24  AE10               	btfss	___fladd@grs^0,7,c
  6211  001D26  EF97  F00E         	goto	u2791
  6212  001D2A  EF99  F00E         	goto	u2790
  6213  001D2E                     u2791:
  6214  001D2E  EF9A  F00E         	goto	l2649
  6215  001D32                     u2790:
  6216  001D32  8001               	bsf	___fladd@b^0,0,c
  6217  001D34                     l2649:
  6218  001D34  A010               	btfss	___fladd@grs^0,0,c
  6219  001D36  EF9F  F00E         	goto	u2801
  6220  001D3A  EFA1  F00E         	goto	u2800
  6221  001D3E                     u2801:
  6222  001D3E  EFA5  F00E         	goto	l2653
  6223  001D42                     u2800:
  6224  001D42  80D8               	bsf	status,0,c
  6225  001D44  3610               	rlcf	___fladd@grs^0,f,c
  6226  001D46  EFA7  F00E         	goto	l2655
  6227  001D4A                     l2653:
  6228  001D4A  90D8               	bcf	status,0,c
  6229  001D4C  3610               	rlcf	___fladd@grs^0,f,c
  6230  001D4E                     l2655:
  6231  001D4E  500F               	movf	___fladd@bexp^0,w,c
  6232  001D50  B4D8               	btfsc	status,2,c
  6233  001D52  EFAD  F00E         	goto	u2811
  6234  001D56  EFAF  F00E         	goto	u2810
  6235  001D5A                     u2811:
  6236  001D5A  EFB0  F00E         	goto	l2659
  6237  001D5E                     u2810:
  6238  001D5E  060F               	decf	___fladd@bexp^0,f,c
  6239  001D60                     l2659:
  6240  001D60  AE03               	btfss	(___fladd@b+2)^0,7,c
  6241  001D62  EFB5  F00E         	goto	u2821
  6242  001D66  EFB7  F00E         	goto	u2820
  6243  001D6A                     u2821:
  6244  001D6A  EF8D  F00E         	goto	l2643
  6245  001D6E                     u2820:
  6246  001D6E                     l2661:
  6247  001D6E  0E00               	movlw	0
  6248  001D70  6E0E               	movwf	___fladd@aexp^0,c
  6249  001D72  AE10               	btfss	___fladd@grs^0,7,c
  6250  001D74  EFBE  F00E         	goto	u2831
  6251  001D78  EFC0  F00E         	goto	u2830
  6252  001D7C                     u2831:
  6253  001D7C  EFD8  F00E         	goto	l619
  6254  001D80                     u2830:
  6255  001D80  C010  F009         	movff	___fladd@grs,??___fladd
  6256  001D84  0E7F               	movlw	127
  6257  001D86  1609               	andwf	??___fladd^0,f,c
  6258  001D88  B4D8               	btfsc	status,2,c
  6259  001D8A  EFC9  F00E         	goto	u2841
  6260  001D8E  EFCB  F00E         	goto	u2840
  6261  001D92                     u2841:
  6262  001D92  EFCF  F00E         	goto	l620
  6263  001D96                     u2840:
  6264  001D96                     l2667:
  6265  001D96  0E01               	movlw	1
  6266  001D98  6E0E               	movwf	___fladd@aexp^0,c
  6267  001D9A  EFD8  F00E         	goto	l619
  6268  001D9E                     l620:
  6269  001D9E  A001               	btfss	___fladd@b^0,0,c
  6270  001DA0  EFD4  F00E         	goto	u2851
  6271  001DA4  EFD6  F00E         	goto	u2850
  6272  001DA8                     u2851:
  6273  001DA8  EFD8  F00E         	goto	l619
  6274  001DAC                     u2850:
  6275  001DAC  EFCB  F00E         	goto	l2667
  6276  001DB0                     l619:
  6277  001DB0  500E               	movf	___fladd@aexp^0,w,c
  6278  001DB2  B4D8               	btfsc	status,2,c
  6279  001DB4  EFDE  F00E         	goto	u2861
  6280  001DB8  EFE0  F00E         	goto	u2860
  6281  001DBC                     u2861:
  6282  001DBC  EF0B  F00F         	goto	l2679
  6283  001DC0                     u2860:
  6284  001DC0  0E01               	movlw	1
  6285  001DC2  2601               	addwf	___fladd@b^0,f,c
  6286  001DC4  0E00               	movlw	0
  6287  001DC6  2202               	addwfc	(___fladd@b+1)^0,f,c
  6288  001DC8  2203               	addwfc	(___fladd@b+2)^0,f,c
  6289  001DCA  2204               	addwfc	(___fladd@b+3)^0,f,c
  6290  001DCC  A004               	btfss	(___fladd@b+3)^0,0,c
  6291  001DCE  EFEB  F00E         	goto	u2871
  6292  001DD2  EFED  F00E         	goto	u2870
  6293  001DD6                     u2871:
  6294  001DD6  EF0B  F00F         	goto	l2679
  6295  001DDA                     u2870:
  6296  001DDA  C001  F009         	movff	___fladd@b,??___fladd
  6297  001DDE  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6298  001DE2  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6299  001DE6  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6300  001DEA  340C               	rlcf	(??___fladd+3)^0,w,c
  6301  001DEC  320C               	rrcf	(??___fladd+3)^0,f,c
  6302  001DEE  320B               	rrcf	(??___fladd+2)^0,f,c
  6303  001DF0  320A               	rrcf	(??___fladd+1)^0,f,c
  6304  001DF2  3209               	rrcf	??___fladd^0,f,c
  6305  001DF4  C009  F001         	movff	??___fladd,___fladd@b
  6306  001DF8  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6307  001DFC  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6308  001E00  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6309  001E04  280F               	incf	___fladd@bexp^0,w,c
  6310  001E06  B4D8               	btfsc	status,2,c
  6311  001E08  EF08  F00F         	goto	u2881
  6312  001E0C  EF0A  F00F         	goto	u2880
  6313  001E10                     u2881:
  6314  001E10  EF0B  F00F         	goto	l2679
  6315  001E14                     u2880:
  6316  001E14  2A0F               	incf	___fladd@bexp^0,f,c
  6317  001E16                     l2679:
  6318  001E16  280F               	incf	___fladd@bexp^0,w,c
  6319  001E18  B4D8               	btfsc	status,2,c
  6320  001E1A  EF11  F00F         	goto	u2891
  6321  001E1E  EF13  F00F         	goto	u2890
  6322  001E22                     u2891:
  6323  001E22  EF1B  F00F         	goto	l2683
  6324  001E26                     u2890:
  6325  001E26  500F               	movf	___fladd@bexp^0,w,c
  6326  001E28  A4D8               	btfss	status,2,c
  6327  001E2A  EF19  F00F         	goto	u2901
  6328  001E2E  EF1B  F00F         	goto	u2900
  6329  001E32                     u2901:
  6330  001E32  EF2D  F00F         	goto	l2687
  6331  001E36                     u2900:
  6332  001E36                     l2683:
  6333  001E36  0E00               	movlw	0
  6334  001E38  6E01               	movwf	___fladd@b^0,c
  6335  001E3A  0E00               	movlw	0
  6336  001E3C  6E02               	movwf	(___fladd@b+1)^0,c
  6337  001E3E  0E00               	movlw	0
  6338  001E40  6E03               	movwf	(___fladd@b+2)^0,c
  6339  001E42  0E00               	movlw	0
  6340  001E44  6E04               	movwf	(___fladd@b+3)^0,c
  6341  001E46  500F               	movf	___fladd@bexp^0,w,c
  6342  001E48  A4D8               	btfss	status,2,c
  6343  001E4A  EF29  F00F         	goto	u2911
  6344  001E4E  EF2B  F00F         	goto	u2910
  6345  001E52                     u2911:
  6346  001E52  EF2D  F00F         	goto	l2687
  6347  001E56                     u2910:
  6348  001E56  0E00               	movlw	0
  6349  001E58  6E0D               	movwf	___fladd@signs^0,c
  6350  001E5A                     l2687:
  6351  001E5A  A00F               	btfss	___fladd@bexp^0,0,c
  6352  001E5C  EF32  F00F         	goto	u2921
  6353  001E60  EF34  F00F         	goto	u2920
  6354  001E64                     u2921:
  6355  001E64  EF37  F00F         	goto	l2691
  6356  001E68                     u2920:
  6357  001E68  8E03               	bsf	(___fladd@b+2)^0,7,c
  6358  001E6A  EF38  F00F         	goto	l2693
  6359  001E6E                     l2691:
  6360  001E6E  9E03               	bcf	(___fladd@b+2)^0,7,c
  6361  001E70                     l2693:
  6362  001E70  90D8               	bcf	status,0,c
  6363  001E72  300F               	rrcf	___fladd@bexp^0,w,c
  6364  001E74  6E04               	movwf	(___fladd@b+3)^0,c
  6365  001E76  AE0D               	btfss	___fladd@signs^0,7,c
  6366  001E78  EF40  F00F         	goto	u2931
  6367  001E7C  EF42  F00F         	goto	u2930
  6368  001E80                     u2931:
  6369  001E80  EF43  F00F         	goto	l2699
  6370  001E84                     u2930:
  6371  001E84  8E04               	bsf	(___fladd@b+3)^0,7,c
  6372  001E86                     l2699:
  6373  001E86  C001  F001         	movff	___fladd@b,?___fladd
  6374  001E8A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6375  001E8E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6376  001E92  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6377  001E96                     l602:
  6378  001E96  0012               	return		;funcret
  6379  001E98                     __end_of___fladd:
  6380                           	callstack 0
  6381                           
  6382 ;; *************** function ___flneg *****************
  6383 ;; Defined at:
  6384 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;  f1              4    0[COMRAM] unsigned char 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  4    0[COMRAM] unsigned char 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6398 ;;      Params:         4       0       0       0       0       0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6401 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6402 ;;Total ram usage:        4 bytes
  6403 ;; Hardware stack levels used: 1
  6404 ;; This function calls:
  6405 ;;		Nothing
  6406 ;; This function is called by:
  6407 ;;		_efgtoa
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           	psect	text24
  6412  00388E                     __ptext24:
  6413                           	callstack 0
  6414  00388E                     ___flneg:
  6415                           	callstack 26
  6416  00388E  5001               	movf	___flneg@f1^0,w,c
  6417  003890  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6418  003892  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6419  003894  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6420  003896  B4D8               	btfsc	status,2,c
  6421  003898  EF50  F01C         	goto	u3591
  6422  00389C  EF52  F01C         	goto	u3590
  6423  0038A0                     u3591:
  6424  0038A0  EF5A  F01C         	goto	l3117
  6425  0038A4                     u3590:
  6426  0038A4  0E00               	movlw	0
  6427  0038A6  1A01               	xorwf	___flneg@f1^0,f,c
  6428  0038A8  0E00               	movlw	0
  6429  0038AA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6430  0038AC  0E00               	movlw	0
  6431  0038AE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6432  0038B0  0E80               	movlw	128
  6433  0038B2  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6434  0038B4                     l3117:
  6435  0038B4  C001  F001         	movff	___flneg@f1,?___flneg
  6436  0038B8  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6437  0038BC  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6438  0038C0  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6439  0038C4  0012               	return		;funcret
  6440  0038C6                     __end_of___flneg:
  6441                           	callstack 0
  6442                           
  6443 ;; *************** function ___flmul *****************
  6444 ;; Defined at:
  6445 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  b               4    0[COMRAM] unsigned char 
  6448 ;;  a               4    4[COMRAM] unsigned char 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;  prod            4   19[COMRAM] struct .
  6451 ;;  grs             4   13[COMRAM] unsigned long 
  6452 ;;  temp            2   23[COMRAM] struct .
  6453 ;;  bexp            1   18[COMRAM] unsigned char 
  6454 ;;  aexp            1   17[COMRAM] unsigned char 
  6455 ;;  sign            1   12[COMRAM] unsigned char 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  4    0[COMRAM] unsigned char 
  6458 ;; Registers used:
  6459 ;;		wreg, status,2, status,0, prodl, prodh
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6465 ;;      Params:         8       0       0       0       0       0       0       0       0
  6466 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6467 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6468 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6469 ;;Total ram usage:       25 bytes
  6470 ;; Hardware stack levels used: 1
  6471 ;; This function calls:
  6472 ;;		Nothing
  6473 ;; This function is called by:
  6474 ;;		_efgtoa
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           	psect	text25
  6479  001E98                     __ptext25:
  6480                           	callstack 0
  6481  001E98                     ___flmul:
  6482                           	callstack 26
  6483  001E98  5004               	movf	(___flmul@b+3)^0,w,c
  6484  001E9A  0B80               	andlw	128
  6485  001E9C  6E0D               	movwf	___flmul@sign^0,c
  6486  001E9E  5004               	movf	(___flmul@b+3)^0,w,c
  6487  001EA0  2404               	addwf	(___flmul@b+3)^0,w,c
  6488  001EA2  6E13               	movwf	___flmul@bexp^0,c
  6489  001EA4  AE03               	btfss	(___flmul@b+2)^0,7,c
  6490  001EA6  EF57  F00F         	goto	u3201
  6491  001EAA  EF59  F00F         	goto	u3200
  6492  001EAE                     u3201:
  6493  001EAE  EF5A  F00F         	goto	l2865
  6494  001EB2                     u3200:
  6495  001EB2  8013               	bsf	___flmul@bexp^0,0,c
  6496  001EB4                     l2865:
  6497  001EB4  5013               	movf	___flmul@bexp^0,w,c
  6498  001EB6  B4D8               	btfsc	status,2,c
  6499  001EB8  EF60  F00F         	goto	u3211
  6500  001EBC  EF62  F00F         	goto	u3210
  6501  001EC0                     u3211:
  6502  001EC0  EF75  F00F         	goto	l2873
  6503  001EC4                     u3210:
  6504  001EC4  2813               	incf	___flmul@bexp^0,w,c
  6505  001EC6  A4D8               	btfss	status,2,c
  6506  001EC8  EF68  F00F         	goto	u3221
  6507  001ECC  EF6A  F00F         	goto	u3220
  6508  001ED0                     u3221:
  6509  001ED0  EF72  F00F         	goto	l2871
  6510  001ED4                     u3220:
  6511  001ED4  0E00               	movlw	0
  6512  001ED6  6E01               	movwf	___flmul@b^0,c
  6513  001ED8  0E00               	movlw	0
  6514  001EDA  6E02               	movwf	(___flmul@b+1)^0,c
  6515  001EDC  0E00               	movlw	0
  6516  001EDE  6E03               	movwf	(___flmul@b+2)^0,c
  6517  001EE0  0E00               	movlw	0
  6518  001EE2  6E04               	movwf	(___flmul@b+3)^0,c
  6519  001EE4                     l2871:
  6520  001EE4  8E03               	bsf	(___flmul@b+2)^0,7,c
  6521  001EE6  EF7D  F00F         	goto	l2875
  6522  001EEA                     l2873:
  6523  001EEA  0E00               	movlw	0
  6524  001EEC  6E01               	movwf	___flmul@b^0,c
  6525  001EEE  0E00               	movlw	0
  6526  001EF0  6E02               	movwf	(___flmul@b+1)^0,c
  6527  001EF2  0E00               	movlw	0
  6528  001EF4  6E03               	movwf	(___flmul@b+2)^0,c
  6529  001EF6  0E00               	movlw	0
  6530  001EF8  6E04               	movwf	(___flmul@b+3)^0,c
  6531  001EFA                     l2875:
  6532  001EFA  5008               	movf	(___flmul@a+3)^0,w,c
  6533  001EFC  0B80               	andlw	128
  6534  001EFE  1A0D               	xorwf	___flmul@sign^0,f,c
  6535  001F00  5008               	movf	(___flmul@a+3)^0,w,c
  6536  001F02  2408               	addwf	(___flmul@a+3)^0,w,c
  6537  001F04  6E12               	movwf	___flmul@aexp^0,c
  6538  001F06  AE07               	btfss	(___flmul@a+2)^0,7,c
  6539  001F08  EF88  F00F         	goto	u3231
  6540  001F0C  EF8A  F00F         	goto	u3230
  6541  001F10                     u3231:
  6542  001F10  EF8B  F00F         	goto	l2883
  6543  001F14                     u3230:
  6544  001F14  8012               	bsf	___flmul@aexp^0,0,c
  6545  001F16                     l2883:
  6546  001F16  5012               	movf	___flmul@aexp^0,w,c
  6547  001F18  B4D8               	btfsc	status,2,c
  6548  001F1A  EF91  F00F         	goto	u3241
  6549  001F1E  EF93  F00F         	goto	u3240
  6550  001F22                     u3241:
  6551  001F22  EFA6  F00F         	goto	l2891
  6552  001F26                     u3240:
  6553  001F26  2812               	incf	___flmul@aexp^0,w,c
  6554  001F28  A4D8               	btfss	status,2,c
  6555  001F2A  EF99  F00F         	goto	u3251
  6556  001F2E  EF9B  F00F         	goto	u3250
  6557  001F32                     u3251:
  6558  001F32  EFA3  F00F         	goto	l2889
  6559  001F36                     u3250:
  6560  001F36  0E00               	movlw	0
  6561  001F38  6E05               	movwf	___flmul@a^0,c
  6562  001F3A  0E00               	movlw	0
  6563  001F3C  6E06               	movwf	(___flmul@a+1)^0,c
  6564  001F3E  0E00               	movlw	0
  6565  001F40  6E07               	movwf	(___flmul@a+2)^0,c
  6566  001F42  0E00               	movlw	0
  6567  001F44  6E08               	movwf	(___flmul@a+3)^0,c
  6568  001F46                     l2889:
  6569  001F46  8E07               	bsf	(___flmul@a+2)^0,7,c
  6570  001F48  EFAE  F00F         	goto	l679
  6571  001F4C                     l2891:
  6572  001F4C  0E00               	movlw	0
  6573  001F4E  6E05               	movwf	___flmul@a^0,c
  6574  001F50  0E00               	movlw	0
  6575  001F52  6E06               	movwf	(___flmul@a+1)^0,c
  6576  001F54  0E00               	movlw	0
  6577  001F56  6E07               	movwf	(___flmul@a+2)^0,c
  6578  001F58  0E00               	movlw	0
  6579  001F5A  6E08               	movwf	(___flmul@a+3)^0,c
  6580  001F5C                     l679:
  6581  001F5C  5012               	movf	___flmul@aexp^0,w,c
  6582  001F5E  B4D8               	btfsc	status,2,c
  6583  001F60  EFB4  F00F         	goto	u3261
  6584  001F64  EFB6  F00F         	goto	u3260
  6585  001F68                     u3261:
  6586  001F68  EFBE  F00F         	goto	l2895
  6587  001F6C                     u3260:
  6588  001F6C  5013               	movf	___flmul@bexp^0,w,c
  6589  001F6E  A4D8               	btfss	status,2,c
  6590  001F70  EFBC  F00F         	goto	u3271
  6591  001F74  EFBE  F00F         	goto	u3270
  6592  001F78                     u3271:
  6593  001F78  EFC8  F00F         	goto	l2899
  6594  001F7C                     u3270:
  6595  001F7C                     l2895:
  6596  001F7C  0E00               	movlw	0
  6597  001F7E  6E01               	movwf	?___flmul^0,c
  6598  001F80  0E00               	movlw	0
  6599  001F82  6E02               	movwf	(?___flmul+1)^0,c
  6600  001F84  0E00               	movlw	0
  6601  001F86  6E03               	movwf	(?___flmul+2)^0,c
  6602  001F88  0E00               	movlw	0
  6603  001F8A  6E04               	movwf	(?___flmul+3)^0,c
  6604  001F8C  EF60  F011         	goto	l683
  6605  001F90                     l2899:
  6606  001F90  5007               	movf	(___flmul@a+2)^0,w,c
  6607  001F92  0201               	mulwf	___flmul@b^0,c
  6608  001F94  CFF3 F018          	movff	prodl,___flmul@temp
  6609  001F98  CFF4 F019          	movff	prodh,___flmul@temp+1
  6610  001F9C  5018               	movf	___flmul@temp^0,w,c
  6611  001F9E  6E0E               	movwf	___flmul@grs^0,c
  6612  001FA0  6A0F               	clrf	(___flmul@grs+1)^0,c
  6613  001FA2  6A10               	clrf	(___flmul@grs+2)^0,c
  6614  001FA4  6A11               	clrf	(___flmul@grs+3)^0,c
  6615  001FA6  5019               	movf	(___flmul@temp+1)^0,w,c
  6616  001FA8  6E14               	movwf	___flmul@prod^0,c
  6617  001FAA  6A15               	clrf	(___flmul@prod+1)^0,c
  6618  001FAC  6A16               	clrf	(___flmul@prod+2)^0,c
  6619  001FAE  6A17               	clrf	(___flmul@prod+3)^0,c
  6620  001FB0  5006               	movf	(___flmul@a+1)^0,w,c
  6621  001FB2  0202               	mulwf	(___flmul@b+1)^0,c
  6622  001FB4  CFF3 F018          	movff	prodl,___flmul@temp
  6623  001FB8  CFF4 F019          	movff	prodh,___flmul@temp+1
  6624  001FBC  5018               	movf	___flmul@temp^0,w,c
  6625  001FBE  260E               	addwf	___flmul@grs^0,f,c
  6626  001FC0  0E00               	movlw	0
  6627  001FC2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6628  001FC4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6629  001FC6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6630  001FC8  5019               	movf	(___flmul@temp+1)^0,w,c
  6631  001FCA  2614               	addwf	___flmul@prod^0,f,c
  6632  001FCC  0E00               	movlw	0
  6633  001FCE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6634  001FD0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6635  001FD2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6636  001FD4  5005               	movf	___flmul@a^0,w,c
  6637  001FD6  0203               	mulwf	(___flmul@b+2)^0,c
  6638  001FD8  CFF3 F018          	movff	prodl,___flmul@temp
  6639  001FDC  CFF4 F019          	movff	prodh,___flmul@temp+1
  6640  001FE0  5018               	movf	___flmul@temp^0,w,c
  6641  001FE2  260E               	addwf	___flmul@grs^0,f,c
  6642  001FE4  0E00               	movlw	0
  6643  001FE6  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6644  001FE8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6645  001FEA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6646  001FEC  5019               	movf	(___flmul@temp+1)^0,w,c
  6647  001FEE  2614               	addwf	___flmul@prod^0,f,c
  6648  001FF0  0E00               	movlw	0
  6649  001FF2  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6650  001FF4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6651  001FF6  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6652  001FF8  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6653  001FFC  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6654  002000  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6655  002004  6A0E               	clrf	___flmul@grs^0,c
  6656  002006  5005               	movf	___flmul@a^0,w,c
  6657  002008  0202               	mulwf	(___flmul@b+1)^0,c
  6658  00200A  CFF3 F018          	movff	prodl,___flmul@temp
  6659  00200E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6660  002012  5018               	movf	___flmul@temp^0,w,c
  6661  002014  260E               	addwf	___flmul@grs^0,f,c
  6662  002016  5019               	movf	(___flmul@temp+1)^0,w,c
  6663  002018  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6664  00201A  0E00               	movlw	0
  6665  00201C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6666  00201E  0E00               	movlw	0
  6667  002020  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6668  002022  5006               	movf	(___flmul@a+1)^0,w,c
  6669  002024  0201               	mulwf	___flmul@b^0,c
  6670  002026  CFF3 F018          	movff	prodl,___flmul@temp
  6671  00202A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6672  00202E  5018               	movf	___flmul@temp^0,w,c
  6673  002030  260E               	addwf	___flmul@grs^0,f,c
  6674  002032  5019               	movf	(___flmul@temp+1)^0,w,c
  6675  002034  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6676  002036  0E00               	movlw	0
  6677  002038  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6678  00203A  0E00               	movlw	0
  6679  00203C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6680  00203E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6681  002042  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6682  002046  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6683  00204A  6A0E               	clrf	___flmul@grs^0,c
  6684  00204C  5005               	movf	___flmul@a^0,w,c
  6685  00204E  0201               	mulwf	___flmul@b^0,c
  6686  002050  CFF3 F018          	movff	prodl,___flmul@temp
  6687  002054  CFF4 F019          	movff	prodh,___flmul@temp+1
  6688  002058  5018               	movf	___flmul@temp^0,w,c
  6689  00205A  260E               	addwf	___flmul@grs^0,f,c
  6690  00205C  5019               	movf	(___flmul@temp+1)^0,w,c
  6691  00205E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6692  002060  0E00               	movlw	0
  6693  002062  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6694  002064  0E00               	movlw	0
  6695  002066  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6696  002068  5007               	movf	(___flmul@a+2)^0,w,c
  6697  00206A  0202               	mulwf	(___flmul@b+1)^0,c
  6698  00206C  CFF3 F018          	movff	prodl,___flmul@temp
  6699  002070  CFF4 F019          	movff	prodh,___flmul@temp+1
  6700  002074  5018               	movf	___flmul@temp^0,w,c
  6701  002076  2614               	addwf	___flmul@prod^0,f,c
  6702  002078  5019               	movf	(___flmul@temp+1)^0,w,c
  6703  00207A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6704  00207C  0E00               	movlw	0
  6705  00207E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6706  002080  0E00               	movlw	0
  6707  002082  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6708  002084  5006               	movf	(___flmul@a+1)^0,w,c
  6709  002086  0203               	mulwf	(___flmul@b+2)^0,c
  6710  002088  CFF3 F018          	movff	prodl,___flmul@temp
  6711  00208C  CFF4 F019          	movff	prodh,___flmul@temp+1
  6712  002090  5018               	movf	___flmul@temp^0,w,c
  6713  002092  2614               	addwf	___flmul@prod^0,f,c
  6714  002094  5019               	movf	(___flmul@temp+1)^0,w,c
  6715  002096  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6716  002098  0E00               	movlw	0
  6717  00209A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6718  00209C  0E00               	movlw	0
  6719  00209E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6720  0020A0  5007               	movf	(___flmul@a+2)^0,w,c
  6721  0020A2  0203               	mulwf	(___flmul@b+2)^0,c
  6722  0020A4  CFF3 F018          	movff	prodl,___flmul@temp
  6723  0020A8  CFF4 F019          	movff	prodh,___flmul@temp+1
  6724  0020AC  5018               	movf	___flmul@temp^0,w,c
  6725  0020AE  6E09               	movwf	??___flmul^0,c
  6726  0020B0  5019               	movf	(___flmul@temp+1)^0,w,c
  6727  0020B2  6E0A               	movwf	(??___flmul+1)^0,c
  6728  0020B4  6A0B               	clrf	(??___flmul+2)^0,c
  6729  0020B6  6A0C               	clrf	(??___flmul+3)^0,c
  6730  0020B8  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6731  0020BC  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6732  0020C0  C009  F00A         	movff	??___flmul,??___flmul+1
  6733  0020C4  6A09               	clrf	??___flmul^0,c
  6734  0020C6  5009               	movf	??___flmul^0,w,c
  6735  0020C8  2614               	addwf	___flmul@prod^0,f,c
  6736  0020CA  500A               	movf	(??___flmul+1)^0,w,c
  6737  0020CC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6738  0020CE  500B               	movf	(??___flmul+2)^0,w,c
  6739  0020D0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6740  0020D2  500C               	movf	(??___flmul+3)^0,w,c
  6741  0020D4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6742  0020D6  C00E  F009         	movff	___flmul@grs,??___flmul
  6743  0020DA  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6744  0020DE  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6745  0020E2  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6746  0020E6  0E19               	movlw	25
  6747  0020E8  EF7B  F010         	goto	u3280
  6748  0020EC                     u3285:
  6749  0020EC  90D8               	bcf	status,0,c
  6750  0020EE  320C               	rrcf	(??___flmul+3)^0,f,c
  6751  0020F0  320B               	rrcf	(??___flmul+2)^0,f,c
  6752  0020F2  320A               	rrcf	(??___flmul+1)^0,f,c
  6753  0020F4  3209               	rrcf	??___flmul^0,f,c
  6754  0020F6                     u3280:
  6755  0020F6  2EE8               	decfsz	wreg,f,c
  6756  0020F8  EF76  F010         	goto	u3285
  6757  0020FC  5009               	movf	??___flmul^0,w,c
  6758  0020FE  2614               	addwf	___flmul@prod^0,f,c
  6759  002100  500A               	movf	(??___flmul+1)^0,w,c
  6760  002102  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6761  002104  500B               	movf	(??___flmul+2)^0,w,c
  6762  002106  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6763  002108  500C               	movf	(??___flmul+3)^0,w,c
  6764  00210A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6765  00210C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6766  002110  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6767  002114  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6768  002118  6A0E               	clrf	___flmul@grs^0,c
  6769  00211A  5012               	movf	___flmul@aexp^0,w,c
  6770  00211C  C013  F009         	movff	___flmul@bexp,??___flmul
  6771  002120  6A0A               	clrf	(??___flmul+1)^0,c
  6772  002122  2609               	addwf	??___flmul^0,f,c
  6773  002124  0E00               	movlw	0
  6774  002126  220A               	addwfc	(??___flmul+1)^0,f,c
  6775  002128  0E82               	movlw	130
  6776  00212A  2409               	addwf	??___flmul^0,w,c
  6777  00212C  6E18               	movwf	___flmul@temp^0,c
  6778  00212E  0EFF               	movlw	255
  6779  002130  200A               	addwfc	(??___flmul+1)^0,w,c
  6780  002132  6E19               	movwf	(___flmul@temp+1)^0,c
  6781  002134  EFB1  F010         	goto	l2947
  6782  002138                     l2941:
  6783  002138  90D8               	bcf	status,0,c
  6784  00213A  3614               	rlcf	___flmul@prod^0,f,c
  6785  00213C  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6786  00213E  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6787  002140  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6788  002142  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6789  002144  EFA6  F010         	goto	u3291
  6790  002148  EFA8  F010         	goto	u3290
  6791  00214C                     u3291:
  6792  00214C  EFA9  F010         	goto	l686
  6793  002150                     u3290:
  6794  002150  8014               	bsf	___flmul@prod^0,0,c
  6795  002152                     l686:
  6796  002152  90D8               	bcf	status,0,c
  6797  002154  360E               	rlcf	___flmul@grs^0,f,c
  6798  002156  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6799  002158  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6800  00215A  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6801  00215C  0618               	decf	___flmul@temp^0,f,c
  6802  00215E  A0D8               	btfss	status,0,c
  6803  002160  0619               	decf	(___flmul@temp+1)^0,f,c
  6804  002162                     l2947:
  6805  002162  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6806  002164  EFB6  F010         	goto	u3301
  6807  002168  EFB8  F010         	goto	u3300
  6808  00216C                     u3301:
  6809  00216C  EF9C  F010         	goto	l2941
  6810  002170                     u3300:
  6811  002170  0E00               	movlw	0
  6812  002172  6E12               	movwf	___flmul@aexp^0,c
  6813  002174  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6814  002176  EFBF  F010         	goto	u3311
  6815  00217A  EFC1  F010         	goto	u3310
  6816  00217E                     u3311:
  6817  00217E  EFE5  F010         	goto	l688
  6818  002182                     u3310:
  6819  002182  0EFF               	movlw	255
  6820  002184  140E               	andwf	___flmul@grs^0,w,c
  6821  002186  6E09               	movwf	??___flmul^0,c
  6822  002188  0EFF               	movlw	255
  6823  00218A  140F               	andwf	(___flmul@grs+1)^0,w,c
  6824  00218C  6E0A               	movwf	(??___flmul+1)^0,c
  6825  00218E  0EFF               	movlw	255
  6826  002190  1410               	andwf	(___flmul@grs+2)^0,w,c
  6827  002192  6E0B               	movwf	(??___flmul+2)^0,c
  6828  002194  0E7F               	movlw	127
  6829  002196  1411               	andwf	(___flmul@grs+3)^0,w,c
  6830  002198  6E0C               	movwf	(??___flmul+3)^0,c
  6831  00219A  5009               	movf	??___flmul^0,w,c
  6832  00219C  100A               	iorwf	(??___flmul+1)^0,w,c
  6833  00219E  100B               	iorwf	(??___flmul+2)^0,w,c
  6834  0021A0  100C               	iorwf	(??___flmul+3)^0,w,c
  6835  0021A2  B4D8               	btfsc	status,2,c
  6836  0021A4  EFD6  F010         	goto	u3321
  6837  0021A8  EFD8  F010         	goto	u3320
  6838  0021AC                     u3321:
  6839  0021AC  EFDC  F010         	goto	l689
  6840  0021B0                     u3320:
  6841  0021B0                     l2955:
  6842  0021B0  0E01               	movlw	1
  6843  0021B2  6E12               	movwf	___flmul@aexp^0,c
  6844  0021B4  EFE5  F010         	goto	l688
  6845  0021B8                     l689:
  6846  0021B8  A014               	btfss	___flmul@prod^0,0,c
  6847  0021BA  EFE1  F010         	goto	u3331
  6848  0021BE  EFE3  F010         	goto	u3330
  6849  0021C2                     u3331:
  6850  0021C2  EFE5  F010         	goto	l688
  6851  0021C6                     u3330:
  6852  0021C6  EFD8  F010         	goto	l2955
  6853  0021CA                     l688:
  6854  0021CA  5012               	movf	___flmul@aexp^0,w,c
  6855  0021CC  B4D8               	btfsc	status,2,c
  6856  0021CE  EFEB  F010         	goto	u3341
  6857  0021D2  EFED  F010         	goto	u3340
  6858  0021D6                     u3341:
  6859  0021D6  EF11  F011         	goto	l2967
  6860  0021DA                     u3340:
  6861  0021DA  0E01               	movlw	1
  6862  0021DC  2614               	addwf	___flmul@prod^0,f,c
  6863  0021DE  0E00               	movlw	0
  6864  0021E0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6865  0021E2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6866  0021E4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6867  0021E6  A017               	btfss	(___flmul@prod+3)^0,0,c
  6868  0021E8  EFF8  F010         	goto	u3351
  6869  0021EC  EFFA  F010         	goto	u3350
  6870  0021F0                     u3351:
  6871  0021F0  EF11  F011         	goto	l2967
  6872  0021F4                     u3350:
  6873  0021F4  C014  F009         	movff	___flmul@prod,??___flmul
  6874  0021F8  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6875  0021FC  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6876  002200  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6877  002204  340C               	rlcf	(??___flmul+3)^0,w,c
  6878  002206  320C               	rrcf	(??___flmul+3)^0,f,c
  6879  002208  320B               	rrcf	(??___flmul+2)^0,f,c
  6880  00220A  320A               	rrcf	(??___flmul+1)^0,f,c
  6881  00220C  3209               	rrcf	??___flmul^0,f,c
  6882  00220E  C009  F014         	movff	??___flmul,___flmul@prod
  6883  002212  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6884  002216  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6885  00221A  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6886  00221E  4A18               	infsnz	___flmul@temp^0,f,c
  6887  002220  2A19               	incf	(___flmul@temp+1)^0,f,c
  6888  002222                     l2967:
  6889  002222  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6890  002224  EF1C  F011         	goto	u3361
  6891  002228  5019               	movf	(___flmul@temp+1)^0,w,c
  6892  00222A  E108               	bnz	u3360
  6893  00222C  2818               	incf	___flmul@temp^0,w,c
  6894  00222E  A0D8               	btfss	status,0,c
  6895  002230  EF1C  F011         	goto	u3361
  6896  002234  EF1E  F011         	goto	u3360
  6897  002238                     u3361:
  6898  002238  EF28  F011         	goto	l2971
  6899  00223C                     u3360:
  6900  00223C  0E00               	movlw	0
  6901  00223E  6E14               	movwf	___flmul@prod^0,c
  6902  002240  0E00               	movlw	0
  6903  002242  6E15               	movwf	(___flmul@prod+1)^0,c
  6904  002244  0E80               	movlw	128
  6905  002246  6E16               	movwf	(___flmul@prod+2)^0,c
  6906  002248  0E7F               	movlw	127
  6907  00224A  6E17               	movwf	(___flmul@prod+3)^0,c
  6908  00224C  EF56  F011         	goto	l2983
  6909  002250                     l2971:
  6910  002250  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6911  002252  EF35  F011         	goto	u3370
  6912  002256  5019               	movf	(___flmul@temp+1)^0,w,c
  6913  002258  E106               	bnz	u3371
  6914  00225A  0418               	decf	___flmul@temp^0,w,c
  6915  00225C  B0D8               	btfsc	status,0,c
  6916  00225E  EF33  F011         	goto	u3371
  6917  002262  EF35  F011         	goto	u3370
  6918  002266                     u3371:
  6919  002266  EF41  F011         	goto	l696
  6920  00226A                     u3370:
  6921  00226A  0E00               	movlw	0
  6922  00226C  6E14               	movwf	___flmul@prod^0,c
  6923  00226E  0E00               	movlw	0
  6924  002270  6E15               	movwf	(___flmul@prod+1)^0,c
  6925  002272  0E00               	movlw	0
  6926  002274  6E16               	movwf	(___flmul@prod+2)^0,c
  6927  002276  0E00               	movlw	0
  6928  002278  6E17               	movwf	(___flmul@prod+3)^0,c
  6929  00227A  0E00               	movlw	0
  6930  00227C  6E0D               	movwf	___flmul@sign^0,c
  6931  00227E  EF56  F011         	goto	l2983
  6932  002282                     l696:
  6933  002282  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6934  002286  0EFF               	movlw	255
  6935  002288  1614               	andwf	___flmul@prod^0,f,c
  6936  00228A  0EFF               	movlw	255
  6937  00228C  1615               	andwf	(___flmul@prod+1)^0,f,c
  6938  00228E  0E7F               	movlw	127
  6939  002290  1616               	andwf	(___flmul@prod+2)^0,f,c
  6940  002292  0E00               	movlw	0
  6941  002294  1617               	andwf	(___flmul@prod+3)^0,f,c
  6942  002296  A013               	btfss	___flmul@bexp^0,0,c
  6943  002298  EF50  F011         	goto	u3381
  6944  00229C  EF52  F011         	goto	u3380
  6945  0022A0                     u3381:
  6946  0022A0  EF53  F011         	goto	l2981
  6947  0022A4                     u3380:
  6948  0022A4  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6949  0022A6                     l2981:
  6950  0022A6  90D8               	bcf	status,0,c
  6951  0022A8  3013               	rrcf	___flmul@bexp^0,w,c
  6952  0022AA  6E17               	movwf	(___flmul@prod+3)^0,c
  6953  0022AC                     l2983:
  6954  0022AC  500D               	movf	___flmul@sign^0,w,c
  6955  0022AE  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6956  0022B0  C014  F001         	movff	___flmul@prod,?___flmul
  6957  0022B4  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6958  0022B8  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6959  0022BC  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6960  0022C0                     l683:
  6961  0022C0  0012               	return		;funcret
  6962  0022C2                     __end_of___flmul:
  6963                           	callstack 0
  6964                           
  6965 ;; *************** function ___flge *****************
  6966 ;; Defined at:
  6967 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;  ff1             4   25[COMRAM] unsigned char 
  6970 ;;  ff2             4   29[COMRAM] unsigned char 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;		None
  6973 ;; Return value:  Size  Location     Type
  6974 ;;		None               void
  6975 ;; Registers used:
  6976 ;;		wreg, status,2, status,0
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6982 ;;      Params:         8       0       0       0       0       0       0       0       0
  6983 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6984 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6985 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6986 ;;Total ram usage:       12 bytes
  6987 ;; Hardware stack levels used: 1
  6988 ;; This function calls:
  6989 ;;		Nothing
  6990 ;; This function is called by:
  6991 ;;		_verificaTensao
  6992 ;;		_main
  6993 ;;		_efgtoa
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text26
  6998  002E70                     __ptext26:
  6999                           	callstack 0
  7000  002E70                     ___flge:
  7001                           	callstack 29
  7002  002E70  0E00               	movlw	0
  7003  002E72  141A               	andwf	___flge@ff1^0,w,c
  7004  002E74  6E22               	movwf	??___flge^0,c
  7005  002E76  0E00               	movlw	0
  7006  002E78  141B               	andwf	(___flge@ff1+1)^0,w,c
  7007  002E7A  6E23               	movwf	(??___flge+1)^0,c
  7008  002E7C  0E80               	movlw	128
  7009  002E7E  141C               	andwf	(___flge@ff1+2)^0,w,c
  7010  002E80  6E24               	movwf	(??___flge+2)^0,c
  7011  002E82  0E7F               	movlw	127
  7012  002E84  141D               	andwf	(___flge@ff1+3)^0,w,c
  7013  002E86  6E25               	movwf	(??___flge+3)^0,c
  7014  002E88  5022               	movf	??___flge^0,w,c
  7015  002E8A  1023               	iorwf	(??___flge+1)^0,w,c
  7016  002E8C  1024               	iorwf	(??___flge+2)^0,w,c
  7017  002E8E  1025               	iorwf	(??___flge+3)^0,w,c
  7018  002E90  A4D8               	btfss	status,2,c
  7019  002E92  EF4D  F017         	goto	u3541
  7020  002E96  EF4F  F017         	goto	u3540
  7021  002E9A                     u3541:
  7022  002E9A  EF57  F017         	goto	l3095
  7023  002E9E                     u3540:
  7024  002E9E  0E00               	movlw	0
  7025  002EA0  6E1A               	movwf	___flge@ff1^0,c
  7026  002EA2  0E00               	movlw	0
  7027  002EA4  6E1B               	movwf	(___flge@ff1+1)^0,c
  7028  002EA6  0E00               	movlw	0
  7029  002EA8  6E1C               	movwf	(___flge@ff1+2)^0,c
  7030  002EAA  0E00               	movlw	0
  7031  002EAC  6E1D               	movwf	(___flge@ff1+3)^0,c
  7032  002EAE                     l3095:
  7033  002EAE  0E00               	movlw	0
  7034  002EB0  141E               	andwf	___flge@ff2^0,w,c
  7035  002EB2  6E22               	movwf	??___flge^0,c
  7036  002EB4  0E00               	movlw	0
  7037  002EB6  141F               	andwf	(___flge@ff2+1)^0,w,c
  7038  002EB8  6E23               	movwf	(??___flge+1)^0,c
  7039  002EBA  0E80               	movlw	128
  7040  002EBC  1420               	andwf	(___flge@ff2+2)^0,w,c
  7041  002EBE  6E24               	movwf	(??___flge+2)^0,c
  7042  002EC0  0E7F               	movlw	127
  7043  002EC2  1421               	andwf	(___flge@ff2+3)^0,w,c
  7044  002EC4  6E25               	movwf	(??___flge+3)^0,c
  7045  002EC6  5022               	movf	??___flge^0,w,c
  7046  002EC8  1023               	iorwf	(??___flge+1)^0,w,c
  7047  002ECA  1024               	iorwf	(??___flge+2)^0,w,c
  7048  002ECC  1025               	iorwf	(??___flge+3)^0,w,c
  7049  002ECE  A4D8               	btfss	status,2,c
  7050  002ED0  EF6C  F017         	goto	u3551
  7051  002ED4  EF6E  F017         	goto	u3550
  7052  002ED8                     u3551:
  7053  002ED8  EF76  F017         	goto	l3099
  7054  002EDC                     u3550:
  7055  002EDC  0E00               	movlw	0
  7056  002EDE  6E1E               	movwf	___flge@ff2^0,c
  7057  002EE0  0E00               	movlw	0
  7058  002EE2  6E1F               	movwf	(___flge@ff2+1)^0,c
  7059  002EE4  0E00               	movlw	0
  7060  002EE6  6E20               	movwf	(___flge@ff2+2)^0,c
  7061  002EE8  0E00               	movlw	0
  7062  002EEA  6E21               	movwf	(___flge@ff2+3)^0,c
  7063  002EEC                     l3099:
  7064  002EEC  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  7065  002EEE  EF7B  F017         	goto	u3561
  7066  002EF2  EF7D  F017         	goto	u3560
  7067  002EF6                     u3561:
  7068  002EF6  EF86  F017         	goto	l3103
  7069  002EFA                     u3560:
  7070  002EFA  6C1A               	negf	___flge@ff1^0,c
  7071  002EFC  1E1B               	comf	(___flge@ff1+1)^0,f,c
  7072  002EFE  B0D8               	btfsc	status,0,c
  7073  002F00  2A1B               	incf	(___flge@ff1+1)^0,f,c
  7074  002F02  1E1C               	comf	(___flge@ff1+2)^0,f,c
  7075  002F04  B0D8               	btfsc	status,0,c
  7076  002F06  2A1C               	incf	(___flge@ff1+2)^0,f,c
  7077  002F08  0E80               	movlw	128
  7078  002F0A  561D               	subfwb	(___flge@ff1+3)^0,f,c
  7079  002F0C                     l3103:
  7080  002F0C  AE21               	btfss	(___flge@ff2+3)^0,7,c
  7081  002F0E  EF8B  F017         	goto	u3571
  7082  002F12  EF8D  F017         	goto	u3570
  7083  002F16                     u3571:
  7084  002F16  EF96  F017         	goto	l330
  7085  002F1A                     u3570:
  7086  002F1A  6C1E               	negf	___flge@ff2^0,c
  7087  002F1C  1E1F               	comf	(___flge@ff2+1)^0,f,c
  7088  002F1E  B0D8               	btfsc	status,0,c
  7089  002F20  2A1F               	incf	(___flge@ff2+1)^0,f,c
  7090  002F22  1E20               	comf	(___flge@ff2+2)^0,f,c
  7091  002F24  B0D8               	btfsc	status,0,c
  7092  002F26  2A20               	incf	(___flge@ff2+2)^0,f,c
  7093  002F28  0E80               	movlw	128
  7094  002F2A  5621               	subfwb	(___flge@ff2+3)^0,f,c
  7095  002F2C                     l330:
  7096  002F2C  0E00               	movlw	0
  7097  002F2E  1A1A               	xorwf	___flge@ff1^0,f,c
  7098  002F30  0E00               	movlw	0
  7099  002F32  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  7100  002F34  0E00               	movlw	0
  7101  002F36  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  7102  002F38  0E80               	movlw	128
  7103  002F3A  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  7104  002F3C  0E00               	movlw	0
  7105  002F3E  1A1E               	xorwf	___flge@ff2^0,f,c
  7106  002F40  0E00               	movlw	0
  7107  002F42  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  7108  002F44  0E00               	movlw	0
  7109  002F46  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  7110  002F48  0E80               	movlw	128
  7111  002F4A  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  7112  002F4C  501E               	movf	___flge@ff2^0,w,c
  7113  002F4E  5C1A               	subwf	___flge@ff1^0,w,c
  7114  002F50  501F               	movf	(___flge@ff2+1)^0,w,c
  7115  002F52  581B               	subwfb	(___flge@ff1+1)^0,w,c
  7116  002F54  5020               	movf	(___flge@ff2+2)^0,w,c
  7117  002F56  581C               	subwfb	(___flge@ff1+2)^0,w,c
  7118  002F58  5021               	movf	(___flge@ff2+3)^0,w,c
  7119  002F5A  581D               	subwfb	(___flge@ff1+3)^0,w,c
  7120  002F5C  B0D8               	btfsc	status,0,c
  7121  002F5E  EFB3  F017         	goto	u3581
  7122  002F62  EFB5  F017         	goto	u3580
  7123  002F66                     u3581:
  7124  002F66  EFB8  F017         	goto	l3109
  7125  002F6A                     u3580:
  7126  002F6A  90D8               	bcf	status,0,c
  7127  002F6C  EFB9  F017         	goto	l335
  7128  002F70                     l3109:
  7129  002F70  80D8               	bsf	status,0,c
  7130  002F72                     l335:
  7131  002F72  0012               	return		;funcret
  7132  002F74                     __end_of___flge:
  7133                           	callstack 0
  7134                           
  7135 ;; *************** function ___fleq *****************
  7136 ;; Defined at:
  7137 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;  ff1             4    0[COMRAM] unsigned char 
  7140 ;;  ff2             4    4[COMRAM] unsigned char 
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;		None
  7143 ;; Return value:  Size  Location     Type
  7144 ;;		None               void
  7145 ;; Registers used:
  7146 ;;		wreg, status,2, status,0
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7152 ;;      Params:         8       0       0       0       0       0       0       0       0
  7153 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7154 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7155 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7156 ;;Total ram usage:       12 bytes
  7157 ;; Hardware stack levels used: 1
  7158 ;; This function calls:
  7159 ;;		Nothing
  7160 ;; This function is called by:
  7161 ;;		_efgtoa
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           	psect	text27
  7166  003448                     __ptext27:
  7167                           	callstack 0
  7168  003448                     ___fleq:
  7169                           	callstack 26
  7170  003448  0E00               	movlw	0
  7171  00344A  1401               	andwf	___fleq@ff1^0,w,c
  7172  00344C  6E09               	movwf	??___fleq^0,c
  7173  00344E  0E00               	movlw	0
  7174  003450  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7175  003452  6E0A               	movwf	(??___fleq+1)^0,c
  7176  003454  0E80               	movlw	128
  7177  003456  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7178  003458  6E0B               	movwf	(??___fleq+2)^0,c
  7179  00345A  0E7F               	movlw	127
  7180  00345C  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7181  00345E  6E0C               	movwf	(??___fleq+3)^0,c
  7182  003460  5009               	movf	??___fleq^0,w,c
  7183  003462  100A               	iorwf	(??___fleq+1)^0,w,c
  7184  003464  100B               	iorwf	(??___fleq+2)^0,w,c
  7185  003466  100C               	iorwf	(??___fleq+3)^0,w,c
  7186  003468  A4D8               	btfss	status,2,c
  7187  00346A  EF39  F01A         	goto	u3511
  7188  00346E  EF3B  F01A         	goto	u3510
  7189  003472                     u3511:
  7190  003472  EF43  F01A         	goto	l3079
  7191  003476                     u3510:
  7192  003476  0E00               	movlw	0
  7193  003478  6E01               	movwf	___fleq@ff1^0,c
  7194  00347A  0E00               	movlw	0
  7195  00347C  6E02               	movwf	(___fleq@ff1+1)^0,c
  7196  00347E  0E00               	movlw	0
  7197  003480  6E03               	movwf	(___fleq@ff1+2)^0,c
  7198  003482  0E00               	movlw	0
  7199  003484  6E04               	movwf	(___fleq@ff1+3)^0,c
  7200  003486                     l3079:
  7201  003486  0E00               	movlw	0
  7202  003488  1405               	andwf	___fleq@ff2^0,w,c
  7203  00348A  6E09               	movwf	??___fleq^0,c
  7204  00348C  0E00               	movlw	0
  7205  00348E  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7206  003490  6E0A               	movwf	(??___fleq+1)^0,c
  7207  003492  0E80               	movlw	128
  7208  003494  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7209  003496  6E0B               	movwf	(??___fleq+2)^0,c
  7210  003498  0E7F               	movlw	127
  7211  00349A  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7212  00349C  6E0C               	movwf	(??___fleq+3)^0,c
  7213  00349E  5009               	movf	??___fleq^0,w,c
  7214  0034A0  100A               	iorwf	(??___fleq+1)^0,w,c
  7215  0034A2  100B               	iorwf	(??___fleq+2)^0,w,c
  7216  0034A4  100C               	iorwf	(??___fleq+3)^0,w,c
  7217  0034A6  A4D8               	btfss	status,2,c
  7218  0034A8  EF58  F01A         	goto	u3521
  7219  0034AC  EF5A  F01A         	goto	u3520
  7220  0034B0                     u3521:
  7221  0034B0  EF62  F01A         	goto	l3083
  7222  0034B4                     u3520:
  7223  0034B4  0E00               	movlw	0
  7224  0034B6  6E05               	movwf	___fleq@ff2^0,c
  7225  0034B8  0E00               	movlw	0
  7226  0034BA  6E06               	movwf	(___fleq@ff2+1)^0,c
  7227  0034BC  0E00               	movlw	0
  7228  0034BE  6E07               	movwf	(___fleq@ff2+2)^0,c
  7229  0034C0  0E00               	movlw	0
  7230  0034C2  6E08               	movwf	(___fleq@ff2+3)^0,c
  7231  0034C4                     l3083:
  7232  0034C4  5005               	movf	___fleq@ff2^0,w,c
  7233  0034C6  1801               	xorwf	___fleq@ff1^0,w,c
  7234  0034C8  E10F               	bnz	u3530
  7235  0034CA  5006               	movf	(___fleq@ff2+1)^0,w,c
  7236  0034CC  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7237  0034CE  E10C               	bnz	u3530
  7238  0034D0  5007               	movf	(___fleq@ff2+2)^0,w,c
  7239  0034D2  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7240  0034D4  E109               	bnz	u3530
  7241  0034D6  5008               	movf	(___fleq@ff2+3)^0,w,c
  7242  0034D8  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7243  0034DA  B4D8               	btfsc	status,2,c
  7244  0034DC  EF72  F01A         	goto	u3531
  7245  0034E0  EF74  F01A         	goto	u3530
  7246  0034E4                     u3531:
  7247  0034E4  EF77  F01A         	goto	l3087
  7248  0034E8                     u3530:
  7249  0034E8  90D8               	bcf	status,0,c
  7250  0034EA  EF78  F01A         	goto	l324
  7251  0034EE                     l3087:
  7252  0034EE  80D8               	bsf	status,0,c
  7253  0034F0                     l324:
  7254  0034F0  0012               	return		;funcret
  7255  0034F2                     __end_of___fleq:
  7256                           	callstack 0
  7257                           
  7258 ;; *************** function ___fldiv *****************
  7259 ;; Defined at:
  7260 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;  b               4    0[COMRAM] unsigned char 
  7263 ;;  a               4    4[COMRAM] unsigned char 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  grs             4   19[COMRAM] unsigned long 
  7266 ;;  rem             4   12[COMRAM] unsigned long 
  7267 ;;  new_exp         2   17[COMRAM] short 
  7268 ;;  aexp            1   24[COMRAM] unsigned char 
  7269 ;;  bexp            1   23[COMRAM] unsigned char 
  7270 ;;  sign            1   16[COMRAM] unsigned char 
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  4    0[COMRAM] unsigned char 
  7273 ;; Registers used:
  7274 ;;		wreg, status,2, status,0
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7280 ;;      Params:         8       0       0       0       0       0       0       0       0
  7281 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7282 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7283 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7284 ;;Total ram usage:       25 bytes
  7285 ;; Hardware stack levels used: 1
  7286 ;; This function calls:
  7287 ;;		Nothing
  7288 ;; This function is called by:
  7289 ;;		_efgtoa
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           	psect	text28
  7294  0022C2                     __ptext28:
  7295                           	callstack 0
  7296  0022C2                     ___fldiv:
  7297                           	callstack 26
  7298  0022C2  5004               	movf	(___fldiv@b+3)^0,w,c
  7299  0022C4  0B80               	andlw	128
  7300  0022C6  6E11               	movwf	___fldiv@sign^0,c
  7301  0022C8  5004               	movf	(___fldiv@b+3)^0,w,c
  7302  0022CA  2404               	addwf	(___fldiv@b+3)^0,w,c
  7303  0022CC  6E18               	movwf	___fldiv@bexp^0,c
  7304  0022CE  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7305  0022D0  EF6C  F011         	goto	u2971
  7306  0022D4  EF6E  F011         	goto	u2970
  7307  0022D8                     u2971:
  7308  0022D8  EF6F  F011         	goto	l2727
  7309  0022DC                     u2970:
  7310  0022DC  8018               	bsf	___fldiv@bexp^0,0,c
  7311  0022DE                     l2727:
  7312  0022DE  5018               	movf	___fldiv@bexp^0,w,c
  7313  0022E0  B4D8               	btfsc	status,2,c
  7314  0022E2  EF75  F011         	goto	u2981
  7315  0022E6  EF77  F011         	goto	u2980
  7316  0022EA                     u2981:
  7317  0022EA  EF8C  F011         	goto	l2737
  7318  0022EE                     u2980:
  7319  0022EE  2818               	incf	___fldiv@bexp^0,w,c
  7320  0022F0  A4D8               	btfss	status,2,c
  7321  0022F2  EF7D  F011         	goto	u2991
  7322  0022F6  EF7F  F011         	goto	u2990
  7323  0022FA                     u2991:
  7324  0022FA  EF87  F011         	goto	l2733
  7325  0022FE                     u2990:
  7326  0022FE  0E00               	movlw	0
  7327  002300  6E01               	movwf	___fldiv@b^0,c
  7328  002302  0E00               	movlw	0
  7329  002304  6E02               	movwf	(___fldiv@b+1)^0,c
  7330  002306  0E00               	movlw	0
  7331  002308  6E03               	movwf	(___fldiv@b+2)^0,c
  7332  00230A  0E00               	movlw	0
  7333  00230C  6E04               	movwf	(___fldiv@b+3)^0,c
  7334  00230E                     l2733:
  7335  00230E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7336  002310  0E00               	movlw	0
  7337  002312  6E04               	movwf	(___fldiv@b+3)^0,c
  7338  002314  EF94  F011         	goto	l2739
  7339  002318                     l2737:
  7340  002318  0E00               	movlw	0
  7341  00231A  6E01               	movwf	___fldiv@b^0,c
  7342  00231C  0E00               	movlw	0
  7343  00231E  6E02               	movwf	(___fldiv@b+1)^0,c
  7344  002320  0E00               	movlw	0
  7345  002322  6E03               	movwf	(___fldiv@b+2)^0,c
  7346  002324  0E00               	movlw	0
  7347  002326  6E04               	movwf	(___fldiv@b+3)^0,c
  7348  002328                     l2739:
  7349  002328  5008               	movf	(___fldiv@a+3)^0,w,c
  7350  00232A  0B80               	andlw	128
  7351  00232C  1A11               	xorwf	___fldiv@sign^0,f,c
  7352  00232E  5008               	movf	(___fldiv@a+3)^0,w,c
  7353  002330  2408               	addwf	(___fldiv@a+3)^0,w,c
  7354  002332  6E19               	movwf	___fldiv@aexp^0,c
  7355  002334  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7356  002336  EF9F  F011         	goto	u3001
  7357  00233A  EFA1  F011         	goto	u3000
  7358  00233E                     u3001:
  7359  00233E  EFA2  F011         	goto	l2747
  7360  002342                     u3000:
  7361  002342  8019               	bsf	___fldiv@aexp^0,0,c
  7362  002344                     l2747:
  7363  002344  5019               	movf	___fldiv@aexp^0,w,c
  7364  002346  B4D8               	btfsc	status,2,c
  7365  002348  EFA8  F011         	goto	u3011
  7366  00234C  EFAA  F011         	goto	u3010
  7367  002350                     u3011:
  7368  002350  EFBF  F011         	goto	l2757
  7369  002354                     u3010:
  7370  002354  2819               	incf	___fldiv@aexp^0,w,c
  7371  002356  A4D8               	btfss	status,2,c
  7372  002358  EFB0  F011         	goto	u3021
  7373  00235C  EFB2  F011         	goto	u3020
  7374  002360                     u3021:
  7375  002360  EFBA  F011         	goto	l2753
  7376  002364                     u3020:
  7377  002364  0E00               	movlw	0
  7378  002366  6E05               	movwf	___fldiv@a^0,c
  7379  002368  0E00               	movlw	0
  7380  00236A  6E06               	movwf	(___fldiv@a+1)^0,c
  7381  00236C  0E00               	movlw	0
  7382  00236E  6E07               	movwf	(___fldiv@a+2)^0,c
  7383  002370  0E00               	movlw	0
  7384  002372  6E08               	movwf	(___fldiv@a+3)^0,c
  7385  002374                     l2753:
  7386  002374  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7387  002376  0E00               	movlw	0
  7388  002378  6E08               	movwf	(___fldiv@a+3)^0,c
  7389  00237A  EFC7  F011         	goto	l2759
  7390  00237E                     l2757:
  7391  00237E  0E00               	movlw	0
  7392  002380  6E05               	movwf	___fldiv@a^0,c
  7393  002382  0E00               	movlw	0
  7394  002384  6E06               	movwf	(___fldiv@a+1)^0,c
  7395  002386  0E00               	movlw	0
  7396  002388  6E07               	movwf	(___fldiv@a+2)^0,c
  7397  00238A  0E00               	movlw	0
  7398  00238C  6E08               	movwf	(___fldiv@a+3)^0,c
  7399  00238E                     l2759:
  7400  00238E  5005               	movf	___fldiv@a^0,w,c
  7401  002390  1006               	iorwf	(___fldiv@a+1)^0,w,c
  7402  002392  1007               	iorwf	(___fldiv@a+2)^0,w,c
  7403  002394  1008               	iorwf	(___fldiv@a+3)^0,w,c
  7404  002396  A4D8               	btfss	status,2,c
  7405  002398  EFD0  F011         	goto	u3031
  7406  00239C  EFD2  F011         	goto	u3030
  7407  0023A0                     u3031:
  7408  0023A0  EFEA  F011         	goto	l2771
  7409  0023A4                     u3030:
  7410  0023A4  0E00               	movlw	0
  7411  0023A6  6E01               	movwf	___fldiv@b^0,c
  7412  0023A8  0E00               	movlw	0
  7413  0023AA  6E02               	movwf	(___fldiv@b+1)^0,c
  7414  0023AC  0E00               	movlw	0
  7415  0023AE  6E03               	movwf	(___fldiv@b+2)^0,c
  7416  0023B0  0E00               	movlw	0
  7417  0023B2  6E04               	movwf	(___fldiv@b+3)^0,c
  7418  0023B4  0E80               	movlw	128
  7419  0023B6  1203               	iorwf	(___fldiv@b+2)^0,f,c
  7420  0023B8  0E7F               	movlw	127
  7421  0023BA  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7422  0023BC                     l2765:
  7423  0023BC  5011               	movf	___fldiv@sign^0,w,c
  7424  0023BE  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7425  0023C0  C001  F001         	movff	___fldiv@b,?___fldiv
  7426  0023C4  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7427  0023C8  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7428  0023CC  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7429  0023D0  EF2D  F013         	goto	l647
  7430  0023D4                     l2771:
  7431  0023D4  5018               	movf	___fldiv@bexp^0,w,c
  7432  0023D6  A4D8               	btfss	status,2,c
  7433  0023D8  EFF0  F011         	goto	u3041
  7434  0023DC  EFF2  F011         	goto	u3040
  7435  0023E0                     u3041:
  7436  0023E0  EFFC  F011         	goto	l2779
  7437  0023E4                     u3040:
  7438  0023E4  0E00               	movlw	0
  7439  0023E6  6E01               	movwf	?___fldiv^0,c
  7440  0023E8  0E00               	movlw	0
  7441  0023EA  6E02               	movwf	(?___fldiv+1)^0,c
  7442  0023EC  0E00               	movlw	0
  7443  0023EE  6E03               	movwf	(?___fldiv+2)^0,c
  7444  0023F0  0E00               	movlw	0
  7445  0023F2  6E04               	movwf	(?___fldiv+3)^0,c
  7446  0023F4  EF2D  F013         	goto	l647
  7447  0023F8                     l2779:
  7448  0023F8  5019               	movf	___fldiv@aexp^0,w,c
  7449  0023FA  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7450  0023FE  6A0A               	clrf	(??___fldiv+1)^0,c
  7451  002400  5E09               	subwf	??___fldiv^0,f,c
  7452  002402  0E00               	movlw	0
  7453  002404  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  7454  002406  0E7F               	movlw	127
  7455  002408  2409               	addwf	??___fldiv^0,w,c
  7456  00240A  6E12               	movwf	___fldiv@new_exp^0,c
  7457  00240C  0E00               	movlw	0
  7458  00240E  200A               	addwfc	(??___fldiv+1)^0,w,c
  7459  002410  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7460  002412  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7461  002416  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7462  00241A  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7463  00241E  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7464  002422  0E00               	movlw	0
  7465  002424  6E01               	movwf	___fldiv@b^0,c
  7466  002426  0E00               	movlw	0
  7467  002428  6E02               	movwf	(___fldiv@b+1)^0,c
  7468  00242A  0E00               	movlw	0
  7469  00242C  6E03               	movwf	(___fldiv@b+2)^0,c
  7470  00242E  0E00               	movlw	0
  7471  002430  6E04               	movwf	(___fldiv@b+3)^0,c
  7472  002432  0E00               	movlw	0
  7473  002434  6E14               	movwf	___fldiv@grs^0,c
  7474  002436  0E00               	movlw	0
  7475  002438  6E15               	movwf	(___fldiv@grs+1)^0,c
  7476  00243A  0E00               	movlw	0
  7477  00243C  6E16               	movwf	(___fldiv@grs+2)^0,c
  7478  00243E  0E00               	movlw	0
  7479  002440  6E17               	movwf	(___fldiv@grs+3)^0,c
  7480  002442  0E00               	movlw	0
  7481  002444  6E19               	movwf	___fldiv@aexp^0,c
  7482  002446  EF5D  F012         	goto	l649
  7483  00244A                     l2789:
  7484  00244A  5019               	movf	___fldiv@aexp^0,w,c
  7485  00244C  B4D8               	btfsc	status,2,c
  7486  00244E  EF2B  F012         	goto	u3051
  7487  002452  EF2D  F012         	goto	u3050
  7488  002456                     u3051:
  7489  002456  EF44  F012         	goto	l2797
  7490  00245A                     u3050:
  7491  00245A  90D8               	bcf	status,0,c
  7492  00245C  360D               	rlcf	___fldiv@rem^0,f,c
  7493  00245E  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  7494  002460  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  7495  002462  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  7496  002464  90D8               	bcf	status,0,c
  7497  002466  3601               	rlcf	___fldiv@b^0,f,c
  7498  002468  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7499  00246A  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7500  00246C  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7501  00246E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7502  002470  EF3C  F012         	goto	u3061
  7503  002474  EF3E  F012         	goto	u3060
  7504  002478                     u3061:
  7505  002478  EF3F  F012         	goto	l652
  7506  00247C                     u3060:
  7507  00247C  8001               	bsf	___fldiv@b^0,0,c
  7508  00247E                     l652:
  7509  00247E  90D8               	bcf	status,0,c
  7510  002480  3614               	rlcf	___fldiv@grs^0,f,c
  7511  002482  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7512  002484  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7513  002486  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7514  002488                     l2797:
  7515  002488  5005               	movf	___fldiv@a^0,w,c
  7516  00248A  5C0D               	subwf	___fldiv@rem^0,w,c
  7517  00248C  5006               	movf	(___fldiv@a+1)^0,w,c
  7518  00248E  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  7519  002490  5007               	movf	(___fldiv@a+2)^0,w,c
  7520  002492  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  7521  002494  5008               	movf	(___fldiv@a+3)^0,w,c
  7522  002496  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  7523  002498  A0D8               	btfss	status,0,c
  7524  00249A  EF51  F012         	goto	u3071
  7525  00249E  EF53  F012         	goto	u3070
  7526  0024A2                     u3071:
  7527  0024A2  EF5C  F012         	goto	l2803
  7528  0024A6                     u3070:
  7529  0024A6  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  7530  0024A8  5005               	movf	___fldiv@a^0,w,c
  7531  0024AA  5E0D               	subwf	___fldiv@rem^0,f,c
  7532  0024AC  5006               	movf	(___fldiv@a+1)^0,w,c
  7533  0024AE  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  7534  0024B0  5007               	movf	(___fldiv@a+2)^0,w,c
  7535  0024B2  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  7536  0024B4  5008               	movf	(___fldiv@a+3)^0,w,c
  7537  0024B6  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  7538  0024B8                     l2803:
  7539  0024B8  2A19               	incf	___fldiv@aexp^0,f,c
  7540  0024BA                     l649:
  7541  0024BA  0E19               	movlw	25
  7542  0024BC  6419               	cpfsgt	___fldiv@aexp^0,c
  7543  0024BE  EF63  F012         	goto	u3081
  7544  0024C2  EF65  F012         	goto	u3080
  7545  0024C6                     u3081:
  7546  0024C6  EF25  F012         	goto	l2789
  7547  0024CA                     u3080:
  7548  0024CA  500D               	movf	___fldiv@rem^0,w,c
  7549  0024CC  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  7550  0024CE  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  7551  0024D0  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  7552  0024D2  B4D8               	btfsc	status,2,c
  7553  0024D4  EF6E  F012         	goto	u3091
  7554  0024D8  EF70  F012         	goto	u3090
  7555  0024DC                     u3091:
  7556  0024DC  EF88  F012         	goto	l2815
  7557  0024E0                     u3090:
  7558  0024E0  8014               	bsf	___fldiv@grs^0,0,c
  7559  0024E2  EF88  F012         	goto	l2815
  7560  0024E6                     l2809:
  7561  0024E6  90D8               	bcf	status,0,c
  7562  0024E8  3601               	rlcf	___fldiv@b^0,f,c
  7563  0024EA  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7564  0024EC  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7565  0024EE  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7566  0024F0  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7567  0024F2  EF7D  F012         	goto	u3101
  7568  0024F6  EF7F  F012         	goto	u3100
  7569  0024FA                     u3101:
  7570  0024FA  EF80  F012         	goto	l658
  7571  0024FE                     u3100:
  7572  0024FE  8001               	bsf	___fldiv@b^0,0,c
  7573  002500                     l658:
  7574  002500  90D8               	bcf	status,0,c
  7575  002502  3614               	rlcf	___fldiv@grs^0,f,c
  7576  002504  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7577  002506  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7578  002508  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7579  00250A  0612               	decf	___fldiv@new_exp^0,f,c
  7580  00250C  A0D8               	btfss	status,0,c
  7581  00250E  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  7582  002510                     l2815:
  7583  002510  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7584  002512  EF8D  F012         	goto	u3111
  7585  002516  EF8F  F012         	goto	u3110
  7586  00251A                     u3111:
  7587  00251A  EF73  F012         	goto	l2809
  7588  00251E                     u3110:
  7589  00251E  0E00               	movlw	0
  7590  002520  6E19               	movwf	___fldiv@aexp^0,c
  7591  002522  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7592  002524  EF96  F012         	goto	u3121
  7593  002528  EF98  F012         	goto	u3120
  7594  00252C                     u3121:
  7595  00252C  EFBC  F012         	goto	l660
  7596  002530                     u3120:
  7597  002530  0EFF               	movlw	255
  7598  002532  1414               	andwf	___fldiv@grs^0,w,c
  7599  002534  6E09               	movwf	??___fldiv^0,c
  7600  002536  0EFF               	movlw	255
  7601  002538  1415               	andwf	(___fldiv@grs+1)^0,w,c
  7602  00253A  6E0A               	movwf	(??___fldiv+1)^0,c
  7603  00253C  0EFF               	movlw	255
  7604  00253E  1416               	andwf	(___fldiv@grs+2)^0,w,c
  7605  002540  6E0B               	movwf	(??___fldiv+2)^0,c
  7606  002542  0E7F               	movlw	127
  7607  002544  1417               	andwf	(___fldiv@grs+3)^0,w,c
  7608  002546  6E0C               	movwf	(??___fldiv+3)^0,c
  7609  002548  5009               	movf	??___fldiv^0,w,c
  7610  00254A  100A               	iorwf	(??___fldiv+1)^0,w,c
  7611  00254C  100B               	iorwf	(??___fldiv+2)^0,w,c
  7612  00254E  100C               	iorwf	(??___fldiv+3)^0,w,c
  7613  002550  B4D8               	btfsc	status,2,c
  7614  002552  EFAD  F012         	goto	u3131
  7615  002556  EFAF  F012         	goto	u3130
  7616  00255A                     u3131:
  7617  00255A  EFB3  F012         	goto	l661
  7618  00255E                     u3130:
  7619  00255E                     l2823:
  7620  00255E  0E01               	movlw	1
  7621  002560  6E19               	movwf	___fldiv@aexp^0,c
  7622  002562  EFBC  F012         	goto	l660
  7623  002566                     l661:
  7624  002566  A001               	btfss	___fldiv@b^0,0,c
  7625  002568  EFB8  F012         	goto	u3141
  7626  00256C  EFBA  F012         	goto	u3140
  7627  002570                     u3141:
  7628  002570  EFBC  F012         	goto	l660
  7629  002574                     u3140:
  7630  002574  EFAF  F012         	goto	l2823
  7631  002578                     l660:
  7632  002578  5019               	movf	___fldiv@aexp^0,w,c
  7633  00257A  B4D8               	btfsc	status,2,c
  7634  00257C  EFC2  F012         	goto	u3151
  7635  002580  EFC4  F012         	goto	u3150
  7636  002584                     u3151:
  7637  002584  EFE8  F012         	goto	l2835
  7638  002588                     u3150:
  7639  002588  0E01               	movlw	1
  7640  00258A  2601               	addwf	___fldiv@b^0,f,c
  7641  00258C  0E00               	movlw	0
  7642  00258E  2202               	addwfc	(___fldiv@b+1)^0,f,c
  7643  002590  2203               	addwfc	(___fldiv@b+2)^0,f,c
  7644  002592  2204               	addwfc	(___fldiv@b+3)^0,f,c
  7645  002594  A004               	btfss	(___fldiv@b+3)^0,0,c
  7646  002596  EFCF  F012         	goto	u3161
  7647  00259A  EFD1  F012         	goto	u3160
  7648  00259E                     u3161:
  7649  00259E  EFE8  F012         	goto	l2835
  7650  0025A2                     u3160:
  7651  0025A2  C001  F009         	movff	___fldiv@b,??___fldiv
  7652  0025A6  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7653  0025AA  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7654  0025AE  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7655  0025B2  340C               	rlcf	(??___fldiv+3)^0,w,c
  7656  0025B4  320C               	rrcf	(??___fldiv+3)^0,f,c
  7657  0025B6  320B               	rrcf	(??___fldiv+2)^0,f,c
  7658  0025B8  320A               	rrcf	(??___fldiv+1)^0,f,c
  7659  0025BA  3209               	rrcf	??___fldiv^0,f,c
  7660  0025BC  C009  F001         	movff	??___fldiv,___fldiv@b
  7661  0025C0  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7662  0025C4  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7663  0025C8  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7664  0025CC  4A12               	infsnz	___fldiv@new_exp^0,f,c
  7665  0025CE  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  7666  0025D0                     l2835:
  7667  0025D0  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7668  0025D2  EFF3  F012         	goto	u3171
  7669  0025D6  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7670  0025D8  E108               	bnz	u3170
  7671  0025DA  2812               	incf	___fldiv@new_exp^0,w,c
  7672  0025DC  A0D8               	btfss	status,0,c
  7673  0025DE  EFF3  F012         	goto	u3171
  7674  0025E2  EFF5  F012         	goto	u3170
  7675  0025E6                     u3171:
  7676  0025E6  EF00  F013         	goto	l2839
  7677  0025EA                     u3170:
  7678  0025EA  0E00               	movlw	0
  7679  0025EC  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7680  0025EE  6812               	setf	___fldiv@new_exp^0,c
  7681  0025F0  0E00               	movlw	0
  7682  0025F2  6E01               	movwf	___fldiv@b^0,c
  7683  0025F4  0E00               	movlw	0
  7684  0025F6  6E02               	movwf	(___fldiv@b+1)^0,c
  7685  0025F8  0E00               	movlw	0
  7686  0025FA  6E03               	movwf	(___fldiv@b+2)^0,c
  7687  0025FC  0E00               	movlw	0
  7688  0025FE  6E04               	movwf	(___fldiv@b+3)^0,c
  7689  002600                     l2839:
  7690  002600  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7691  002602  EF0D  F013         	goto	u3180
  7692  002606  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7693  002608  E106               	bnz	u3181
  7694  00260A  0412               	decf	___fldiv@new_exp^0,w,c
  7695  00260C  B0D8               	btfsc	status,0,c
  7696  00260E  EF0B  F013         	goto	u3181
  7697  002612  EF0D  F013         	goto	u3180
  7698  002616                     u3181:
  7699  002616  EF1B  F013         	goto	l2843
  7700  00261A                     u3180:
  7701  00261A  0E00               	movlw	0
  7702  00261C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7703  00261E  0E00               	movlw	0
  7704  002620  6E12               	movwf	___fldiv@new_exp^0,c
  7705  002622  0E00               	movlw	0
  7706  002624  6E01               	movwf	___fldiv@b^0,c
  7707  002626  0E00               	movlw	0
  7708  002628  6E02               	movwf	(___fldiv@b+1)^0,c
  7709  00262A  0E00               	movlw	0
  7710  00262C  6E03               	movwf	(___fldiv@b+2)^0,c
  7711  00262E  0E00               	movlw	0
  7712  002630  6E04               	movwf	(___fldiv@b+3)^0,c
  7713  002632  0E00               	movlw	0
  7714  002634  6E11               	movwf	___fldiv@sign^0,c
  7715  002636                     l2843:
  7716  002636  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7717  00263A  A018               	btfss	___fldiv@bexp^0,0,c
  7718  00263C  EF22  F013         	goto	u3191
  7719  002640  EF24  F013         	goto	u3190
  7720  002644                     u3191:
  7721  002644  EF27  F013         	goto	l2849
  7722  002648                     u3190:
  7723  002648  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7724  00264A  EF28  F013         	goto	l2851
  7725  00264E                     l2849:
  7726  00264E  9E03               	bcf	(___fldiv@b+2)^0,7,c
  7727  002650                     l2851:
  7728  002650  90D8               	bcf	status,0,c
  7729  002652  3018               	rrcf	___fldiv@bexp^0,w,c
  7730  002654  6E04               	movwf	(___fldiv@b+3)^0,c
  7731  002656  EFDE  F011         	goto	l2765
  7732  00265A                     l647:
  7733  00265A  0012               	return		;funcret
  7734  00265C                     __end_of___fldiv:
  7735                           	callstack 0
  7736                           
  7737 ;; *************** function ___awmod *****************
  7738 ;; Defined at:
  7739 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;  dividend        2    0[COMRAM] int 
  7742 ;;  divisor         2    2[COMRAM] int 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;  sign            1    5[COMRAM] unsigned char 
  7745 ;;  counter         1    4[COMRAM] unsigned char 
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  2    0[COMRAM] int 
  7748 ;; Registers used:
  7749 ;;		wreg, status,2, status,0
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7755 ;;      Params:         4       0       0       0       0       0       0       0       0
  7756 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7758 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7759 ;;Total ram usage:        6 bytes
  7760 ;; Hardware stack levels used: 1
  7761 ;; This function calls:
  7762 ;;		Nothing
  7763 ;; This function is called by:
  7764 ;;		_efgtoa
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text29
  7769  003398                     __ptext29:
  7770                           	callstack 0
  7771  003398                     ___awmod:
  7772                           	callstack 26
  7773  003398  0E00               	movlw	0
  7774  00339A  6E06               	movwf	___awmod@sign^0,c
  7775  00339C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7776  00339E  EFD5  F019         	goto	u3450
  7777  0033A2  EFD3  F019         	goto	u3451
  7778  0033A6                     u3451:
  7779  0033A6  EFDB  F019         	goto	l3047
  7780  0033AA                     u3450:
  7781  0033AA  6C01               	negf	___awmod@dividend^0,c
  7782  0033AC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7783  0033AE  B0D8               	btfsc	status,0,c
  7784  0033B0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7785  0033B2  0E01               	movlw	1
  7786  0033B4  6E06               	movwf	___awmod@sign^0,c
  7787  0033B6                     l3047:
  7788  0033B6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7789  0033B8  EFE2  F019         	goto	u3460
  7790  0033BC  EFE0  F019         	goto	u3461
  7791  0033C0                     u3461:
  7792  0033C0  EFE6  F019         	goto	l3051
  7793  0033C4                     u3460:
  7794  0033C4  6C03               	negf	___awmod@divisor^0,c
  7795  0033C6  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7796  0033C8  B0D8               	btfsc	status,0,c
  7797  0033CA  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7798  0033CC                     l3051:
  7799  0033CC  5003               	movf	___awmod@divisor^0,w,c
  7800  0033CE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7801  0033D0  B4D8               	btfsc	status,2,c
  7802  0033D2  EFED  F019         	goto	u3471
  7803  0033D6  EFEF  F019         	goto	u3470
  7804  0033DA                     u3471:
  7805  0033DA  EF13  F01A         	goto	l3067
  7806  0033DE                     u3470:
  7807  0033DE  0E01               	movlw	1
  7808  0033E0  6E05               	movwf	___awmod@counter^0,c
  7809  0033E2  EFF7  F019         	goto	l3057
  7810  0033E6                     l3055:
  7811  0033E6  90D8               	bcf	status,0,c
  7812  0033E8  3603               	rlcf	___awmod@divisor^0,f,c
  7813  0033EA  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7814  0033EC  2A05               	incf	___awmod@counter^0,f,c
  7815  0033EE                     l3057:
  7816  0033EE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7817  0033F0  EFFC  F019         	goto	u3481
  7818  0033F4  EFFE  F019         	goto	u3480
  7819  0033F8                     u3481:
  7820  0033F8  EFF3  F019         	goto	l3055
  7821  0033FC                     u3480:
  7822  0033FC                     l3059:
  7823  0033FC  5003               	movf	___awmod@divisor^0,w,c
  7824  0033FE  5C01               	subwf	___awmod@dividend^0,w,c
  7825  003400  5004               	movf	(___awmod@divisor+1)^0,w,c
  7826  003402  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7827  003404  A0D8               	btfss	status,0,c
  7828  003406  EF07  F01A         	goto	u3491
  7829  00340A  EF09  F01A         	goto	u3490
  7830  00340E                     u3491:
  7831  00340E  EF0D  F01A         	goto	l3063
  7832  003412                     u3490:
  7833  003412  5003               	movf	___awmod@divisor^0,w,c
  7834  003414  5E01               	subwf	___awmod@dividend^0,f,c
  7835  003416  5004               	movf	(___awmod@divisor+1)^0,w,c
  7836  003418  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7837  00341A                     l3063:
  7838  00341A  90D8               	bcf	status,0,c
  7839  00341C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7840  00341E  3203               	rrcf	___awmod@divisor^0,f,c
  7841  003420  2E05               	decfsz	___awmod@counter^0,f,c
  7842  003422  EFFE  F019         	goto	l3059
  7843  003426                     l3067:
  7844  003426  5006               	movf	___awmod@sign^0,w,c
  7845  003428  B4D8               	btfsc	status,2,c
  7846  00342A  EF19  F01A         	goto	u3501
  7847  00342E  EF1B  F01A         	goto	u3500
  7848  003432                     u3501:
  7849  003432  EF1F  F01A         	goto	l3071
  7850  003436                     u3500:
  7851  003436  6C01               	negf	___awmod@dividend^0,c
  7852  003438  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7853  00343A  B0D8               	btfsc	status,0,c
  7854  00343C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7855  00343E                     l3071:
  7856  00343E  C001  F001         	movff	___awmod@dividend,?___awmod
  7857  003442  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7858  003446  0012               	return		;funcret
  7859  003448                     __end_of___awmod:
  7860                           	callstack 0
  7861                           
  7862 ;; *************** function ___awdiv *****************
  7863 ;; Defined at:
  7864 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;  dividend        2    0[COMRAM] int 
  7867 ;;  divisor         2    2[COMRAM] int 
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;  quotient        2    6[COMRAM] int 
  7870 ;;  sign            1    5[COMRAM] unsigned char 
  7871 ;;  counter         1    4[COMRAM] unsigned char 
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  2    0[COMRAM] int 
  7874 ;; Registers used:
  7875 ;;		wreg, status,2, status,0
  7876 ;; Tracked objects:
  7877 ;;		On entry : 0/0
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7881 ;;      Params:         4       0       0       0       0       0       0       0       0
  7882 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7883 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7884 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7885 ;;Total ram usage:        8 bytes
  7886 ;; Hardware stack levels used: 1
  7887 ;; This function calls:
  7888 ;;		Nothing
  7889 ;; This function is called by:
  7890 ;;		_efgtoa
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text30
  7895  003212                     __ptext30:
  7896                           	callstack 0
  7897  003212                     ___awdiv:
  7898                           	callstack 26
  7899  003212  0E00               	movlw	0
  7900  003214  6E06               	movwf	___awdiv@sign^0,c
  7901  003216  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7902  003218  EF12  F019         	goto	u3390
  7903  00321C  EF10  F019         	goto	u3391
  7904  003220                     u3391:
  7905  003220  EF18  F019         	goto	l3003
  7906  003224                     u3390:
  7907  003224  6C03               	negf	___awdiv@divisor^0,c
  7908  003226  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7909  003228  B0D8               	btfsc	status,0,c
  7910  00322A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7911  00322C  0E01               	movlw	1
  7912  00322E  6E06               	movwf	___awdiv@sign^0,c
  7913  003230                     l3003:
  7914  003230  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7915  003232  EF1F  F019         	goto	u3400
  7916  003236  EF1D  F019         	goto	u3401
  7917  00323A                     u3401:
  7918  00323A  EF25  F019         	goto	l3009
  7919  00323E                     u3400:
  7920  00323E  6C01               	negf	___awdiv@dividend^0,c
  7921  003240  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7922  003242  B0D8               	btfsc	status,0,c
  7923  003244  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7924  003246  0E01               	movlw	1
  7925  003248  1A06               	xorwf	___awdiv@sign^0,f,c
  7926  00324A                     l3009:
  7927  00324A  0E00               	movlw	0
  7928  00324C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7929  00324E  0E00               	movlw	0
  7930  003250  6E07               	movwf	___awdiv@quotient^0,c
  7931  003252  5003               	movf	___awdiv@divisor^0,w,c
  7932  003254  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7933  003256  B4D8               	btfsc	status,2,c
  7934  003258  EF30  F019         	goto	u3411
  7935  00325C  EF32  F019         	goto	u3410
  7936  003260                     u3411:
  7937  003260  EF5A  F019         	goto	l3031
  7938  003264                     u3410:
  7939  003264  0E01               	movlw	1
  7940  003266  6E05               	movwf	___awdiv@counter^0,c
  7941  003268  EF3A  F019         	goto	l3017
  7942  00326C                     l3015:
  7943  00326C  90D8               	bcf	status,0,c
  7944  00326E  3603               	rlcf	___awdiv@divisor^0,f,c
  7945  003270  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7946  003272  2A05               	incf	___awdiv@counter^0,f,c
  7947  003274                     l3017:
  7948  003274  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7949  003276  EF3F  F019         	goto	u3421
  7950  00327A  EF41  F019         	goto	u3420
  7951  00327E                     u3421:
  7952  00327E  EF36  F019         	goto	l3015
  7953  003282                     u3420:
  7954  003282                     l3019:
  7955  003282  90D8               	bcf	status,0,c
  7956  003284  3607               	rlcf	___awdiv@quotient^0,f,c
  7957  003286  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7958  003288  5003               	movf	___awdiv@divisor^0,w,c
  7959  00328A  5C01               	subwf	___awdiv@dividend^0,w,c
  7960  00328C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7961  00328E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7962  003290  A0D8               	btfss	status,0,c
  7963  003292  EF4D  F019         	goto	u3431
  7964  003296  EF4F  F019         	goto	u3430
  7965  00329A                     u3431:
  7966  00329A  EF54  F019         	goto	l3027
  7967  00329E                     u3430:
  7968  00329E  5003               	movf	___awdiv@divisor^0,w,c
  7969  0032A0  5E01               	subwf	___awdiv@dividend^0,f,c
  7970  0032A2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7971  0032A4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7972  0032A6  8007               	bsf	___awdiv@quotient^0,0,c
  7973  0032A8                     l3027:
  7974  0032A8  90D8               	bcf	status,0,c
  7975  0032AA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7976  0032AC  3203               	rrcf	___awdiv@divisor^0,f,c
  7977  0032AE  2E05               	decfsz	___awdiv@counter^0,f,c
  7978  0032B0  EF41  F019         	goto	l3019
  7979  0032B4                     l3031:
  7980  0032B4  5006               	movf	___awdiv@sign^0,w,c
  7981  0032B6  B4D8               	btfsc	status,2,c
  7982  0032B8  EF60  F019         	goto	u3441
  7983  0032BC  EF62  F019         	goto	u3440
  7984  0032C0                     u3441:
  7985  0032C0  EF66  F019         	goto	l3035
  7986  0032C4                     u3440:
  7987  0032C4  6C07               	negf	___awdiv@quotient^0,c
  7988  0032C6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7989  0032C8  B0D8               	btfsc	status,0,c
  7990  0032CA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7991  0032CC                     l3035:
  7992  0032CC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7993  0032D0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7994  0032D4  0012               	return		;funcret
  7995  0032D6                     __end_of___awdiv:
  7996                           	callstack 0
  7997                           
  7998 ;; *************** function _atoi *****************
  7999 ;; Defined at:
  8000 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8003 ;;		 -> STR_2(6), 
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;  n               2   20[COMRAM] int 
  8006 ;;  neg             2   13[COMRAM] int 
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  2    7[COMRAM] int 
  8009 ;; Registers used:
  8010 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8016 ;;      Params:         2       0       0       0       0       0       0       0       0
  8017 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8018 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8019 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8020 ;;Total ram usage:       15 bytes
  8021 ;; Hardware stack levels used: 1
  8022 ;; Hardware stack levels required when called: 1
  8023 ;; This function calls:
  8024 ;;		___wmul
  8025 ;;		_isdigit
  8026 ;;		_isspace
  8027 ;; This function is called by:
  8028 ;;		_vfpfcnvrt
  8029 ;; This function uses a non-reentrant model
  8030 ;;
  8031                           
  8032                           	psect	text31
  8033  002AD0                     __ptext31:
  8034                           	callstack 0
  8035  002AD0                     _atoi:
  8036                           	callstack 26
  8037  002AD0  0E00               	movlw	0
  8038  002AD2  6E16               	movwf	(atoi@n+1)^0,c
  8039  002AD4  0E00               	movlw	0
  8040  002AD6  6E15               	movwf	atoi@n^0,c
  8041  002AD8  0E00               	movlw	0
  8042  002ADA  6E0F               	movwf	(atoi@neg+1)^0,c
  8043  002ADC  0E00               	movlw	0
  8044  002ADE  6E0E               	movwf	atoi@neg^0,c
  8045  002AE0  EF74  F015         	goto	l3579
  8046  002AE4                     l3577:
  8047  002AE4  4A08               	infsnz	atoi@s^0,f,c
  8048  002AE6  2A09               	incf	(atoi@s+1)^0,f,c
  8049  002AE8                     l3579:
  8050  002AE8  0E01               	movlw	1
  8051  002AEA  6E14               	movwf	_atoi$988^0,c
  8052  002AEC  C008  FFF6         	movff	atoi@s,tblptrl
  8053  002AF0  C009  FFF7         	movff	atoi@s+1,tblptrh
  8054  002AF4                     	if	0	;tblptru may be non-zero
  8055  002AF4                     	endif
  8056  002AF4                     	if	0	;tblptru may be non-zero
  8057  002AF4                     	endif
  8058  002AF4  0008               	tblrd		*
  8059  002AF6  50F5               	movf	tablat,w,c
  8060  002AF8  0A20               	xorlw	32
  8061  002AFA  B4D8               	btfsc	status,2,c
  8062  002AFC  EF82  F015         	goto	u4511
  8063  002B00  EF84  F015         	goto	u4510
  8064  002B04                     u4511:
  8065  002B04  EFA1  F015         	goto	l3587
  8066  002B08                     u4510:
  8067  002B08  0EF7               	movlw	247
  8068  002B0A  6E0A               	movwf	??_atoi^0,c
  8069  002B0C  0EFF               	movlw	255
  8070  002B0E  6E0B               	movwf	(??_atoi+1)^0,c
  8071  002B10  C008  FFF6         	movff	atoi@s,tblptrl
  8072  002B14  C009  FFF7         	movff	atoi@s+1,tblptrh
  8073  002B18                     	if	0	;tblptru may be non-zero
  8074  002B18                     	endif
  8075  002B18                     	if	0	;tblptru may be non-zero
  8076  002B18                     	endif
  8077  002B18  0008               	tblrd		*
  8078  002B1A  50F5               	movf	tablat,w,c
  8079  002B1C  6E0C               	movwf	(??_atoi+2)^0,c
  8080  002B1E  6A0D               	clrf	(??_atoi+3)^0,c
  8081  002B20  500A               	movf	??_atoi^0,w,c
  8082  002B22  260C               	addwf	(??_atoi+2)^0,f,c
  8083  002B24  500B               	movf	(??_atoi+1)^0,w,c
  8084  002B26  220D               	addwfc	(??_atoi+3)^0,f,c
  8085  002B28  500D               	movf	(??_atoi+3)^0,w,c
  8086  002B2A  E109               	bnz	u4520
  8087  002B2C  0E05               	movlw	5
  8088  002B2E  5C0C               	subwf	(??_atoi+2)^0,w,c
  8089  002B30  A0D8               	btfss	status,0,c
  8090  002B32  EF9D  F015         	goto	u4521
  8091  002B36  EF9F  F015         	goto	u4520
  8092  002B3A                     u4521:
  8093  002B3A  EFA1  F015         	goto	l3587
  8094  002B3E                     u4520:
  8095  002B3E  0E00               	movlw	0
  8096  002B40  6E14               	movwf	_atoi$988^0,c
  8097  002B42                     l3587:
  8098  002B42  C014  F010         	movff	_atoi$988,_atoi$987
  8099  002B46  6A11               	clrf	(_atoi$987+1)^0,c
  8100  002B48  5010               	movf	_atoi$987^0,w,c
  8101  002B4A  1011               	iorwf	(_atoi$987+1)^0,w,c
  8102  002B4C  A4D8               	btfss	status,2,c
  8103  002B4E  EFAB  F015         	goto	u4531
  8104  002B52  EFAD  F015         	goto	u4530
  8105  002B56                     u4531:
  8106  002B56  EF72  F015         	goto	l3577
  8107  002B5A                     u4530:
  8108  002B5A  EFB7  F015         	goto	l3597
  8109  002B5E                     l3593:
  8110  002B5E  0E00               	movlw	0
  8111  002B60  6E0F               	movwf	(atoi@neg+1)^0,c
  8112  002B62  0E01               	movlw	1
  8113  002B64  6E0E               	movwf	atoi@neg^0,c
  8114  002B66                     l3595:
  8115  002B66  4A08               	infsnz	atoi@s^0,f,c
  8116  002B68  2A09               	incf	(atoi@s+1)^0,f,c
  8117  002B6A  EFEC  F015         	goto	l3603
  8118  002B6E                     l3597:
  8119  002B6E  C008  FFF6         	movff	atoi@s,tblptrl
  8120  002B72  C009  FFF7         	movff	atoi@s+1,tblptrh
  8121  002B76                     	if	0	;tblptru may be non-zero
  8122  002B76                     	endif
  8123  002B76                     	if	0	;tblptru may be non-zero
  8124  002B76                     	endif
  8125  002B76  0008               	tblrd		*
  8126  002B78  50F5               	movf	tablat,w,c
  8127  002B7A  6E0A               	movwf	??_atoi^0,c
  8128  002B7C  6A0B               	clrf	(??_atoi+1)^0,c
  8129                           
  8130                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8131                           ; Switch size 1, requested type "simple"
  8132                           ; Number of cases is 1, Range of values is 0 to 0
  8133                           ; switch strategies available:
  8134                           ; Name         Instructions Cycles
  8135                           ; simple_byte            4     3 (average)
  8136                           ;	Chosen strategy is simple_byte
  8137  002B7E  500B               	movf	(??_atoi+1)^0,w,c
  8138  002B80  0A00               	xorlw	0	; case 0
  8139  002B82  B4D8               	btfsc	status,2,c
  8140  002B84  EFC6  F015         	goto	l3897
  8141  002B88  EFEC  F015         	goto	l3603
  8142  002B8C                     l3897:
  8143                           
  8144                           ; Switch size 1, requested type "simple"
  8145                           ; Number of cases is 2, Range of values is 43 to 45
  8146                           ; switch strategies available:
  8147                           ; Name         Instructions Cycles
  8148                           ; simple_byte            7     4 (average)
  8149                           ;	Chosen strategy is simple_byte
  8150  002B8C  500A               	movf	??_atoi^0,w,c
  8151  002B8E  0A2B               	xorlw	43	; case 43
  8152  002B90  B4D8               	btfsc	status,2,c
  8153  002B92  EFB3  F015         	goto	l3595
  8154  002B96  0A06               	xorlw	6	; case 45
  8155  002B98  B4D8               	btfsc	status,2,c
  8156  002B9A  EFAF  F015         	goto	l3593
  8157  002B9E  EFEC  F015         	goto	l3603
  8158  002BA2                     l3599:
  8159  002BA2  C015  F001         	movff	atoi@n,___wmul@multiplier
  8160  002BA6  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8161  002BAA  0E00               	movlw	0
  8162  002BAC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8163  002BAE  0E0A               	movlw	10
  8164  002BB0  6E03               	movwf	___wmul@multiplicand^0,c
  8165  002BB2  EC7F  F01C         	call	___wmul	;wreg free
  8166  002BB6  C008  FFF6         	movff	atoi@s,tblptrl
  8167  002BBA  C009  FFF7         	movff	atoi@s+1,tblptrh
  8168  002BBE                     	if	0	;tblptru may be non-zero
  8169  002BBE                     	endif
  8170  002BBE                     	if	0	;tblptru may be non-zero
  8171  002BBE                     	endif
  8172  002BBE  0008               	tblrd		*
  8173  002BC0  50F5               	movf	tablat,w,c
  8174  002BC2  5E01               	subwf	?___wmul^0,f,c
  8175  002BC4  0E00               	movlw	0
  8176  002BC6  5A02               	subwfb	(?___wmul+1)^0,f,c
  8177  002BC8  0E30               	movlw	48
  8178  002BCA  2401               	addwf	?___wmul^0,w,c
  8179  002BCC  6E15               	movwf	atoi@n^0,c
  8180  002BCE  0E00               	movlw	0
  8181  002BD0  2002               	addwfc	(?___wmul+1)^0,w,c
  8182  002BD2  6E16               	movwf	(atoi@n+1)^0,c
  8183  002BD4  EFB3  F015         	goto	l3595
  8184  002BD8                     l3603:
  8185  002BD8  0ED0               	movlw	208
  8186  002BDA  6E0A               	movwf	??_atoi^0,c
  8187  002BDC  0EFF               	movlw	255
  8188  002BDE  6E0B               	movwf	(??_atoi+1)^0,c
  8189  002BE0  C008  FFF6         	movff	atoi@s,tblptrl
  8190  002BE4  C009  FFF7         	movff	atoi@s+1,tblptrh
  8191  002BE8                     	if	0	;tblptru may be non-zero
  8192  002BE8                     	endif
  8193  002BE8                     	if	0	;tblptru may be non-zero
  8194  002BE8                     	endif
  8195  002BE8  0008               	tblrd		*
  8196  002BEA  50F5               	movf	tablat,w,c
  8197  002BEC  6E0C               	movwf	(??_atoi+2)^0,c
  8198  002BEE  6A0D               	clrf	(??_atoi+3)^0,c
  8199  002BF0  500A               	movf	??_atoi^0,w,c
  8200  002BF2  260C               	addwf	(??_atoi+2)^0,f,c
  8201  002BF4  500B               	movf	(??_atoi+1)^0,w,c
  8202  002BF6  220D               	addwfc	(??_atoi+3)^0,f,c
  8203  002BF8  500D               	movf	(??_atoi+3)^0,w,c
  8204  002BFA  E10A               	bnz	u4540
  8205  002BFC  0E0A               	movlw	10
  8206  002BFE  5C0C               	subwf	(??_atoi+2)^0,w,c
  8207  002C00  A0D8               	btfss	status,0,c
  8208  002C02  EF05  F016         	goto	u4541
  8209  002C06  EF08  F016         	goto	u4540
  8210  002C0A                     u4541:
  8211  002C0A  0E01               	movlw	1
  8212  002C0C  EF09  F016         	goto	u4550
  8213  002C10                     u4540:
  8214  002C10  0E00               	movlw	0
  8215  002C12                     u4550:
  8216  002C12  6E12               	movwf	_atoi$989^0,c
  8217  002C14  6A13               	clrf	(_atoi$989+1)^0,c
  8218  002C16  5012               	movf	_atoi$989^0,w,c
  8219  002C18  1013               	iorwf	(_atoi$989+1)^0,w,c
  8220  002C1A  A4D8               	btfss	status,2,c
  8221  002C1C  EF12  F016         	goto	u4561
  8222  002C20  EF14  F016         	goto	u4560
  8223  002C24                     u4561:
  8224  002C24  EFD1  F015         	goto	l3599
  8225  002C28                     u4560:
  8226  002C28  500E               	movf	atoi@neg^0,w,c
  8227  002C2A  100F               	iorwf	(atoi@neg+1)^0,w,c
  8228  002C2C  A4D8               	btfss	status,2,c
  8229  002C2E  EF1B  F016         	goto	u4571
  8230  002C32  EF1D  F016         	goto	u4570
  8231  002C36                     u4571:
  8232  002C36  EF2B  F016         	goto	l962
  8233  002C3A                     u4570:
  8234  002C3A  C015  F00A         	movff	atoi@n,??_atoi
  8235  002C3E  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8236  002C42  1E0A               	comf	??_atoi^0,f,c
  8237  002C44  1E0B               	comf	(??_atoi+1)^0,f,c
  8238  002C46  4A0A               	infsnz	??_atoi^0,f,c
  8239  002C48  2A0B               	incf	(??_atoi+1)^0,f,c
  8240  002C4A  C00A  F008         	movff	??_atoi,?_atoi
  8241  002C4E  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8242  002C52  EF2F  F016         	goto	l965
  8243  002C56                     l962:
  8244  002C56  C015  F008         	movff	atoi@n,?_atoi
  8245  002C5A  C016  F009         	movff	atoi@n+1,?_atoi+1
  8246  002C5E                     l965:
  8247  002C5E  0012               	return		;funcret
  8248  002C60                     __end_of_atoi:
  8249                           	callstack 0
  8250                           
  8251 ;; *************** function _isspace *****************
  8252 ;; Defined at:
  8253 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;  c               2    0[COMRAM] int 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;		None
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  2    0[COMRAM] int 
  8260 ;; Registers used:
  8261 ;;		wreg, status,2, status,0
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8267 ;;      Params:         2       0       0       0       0       0       0       0       0
  8268 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8269 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8270 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8271 ;;Total ram usage:        7 bytes
  8272 ;; Hardware stack levels used: 1
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_atoi
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text32
  8281  0036DE                     __ptext32:
  8282                           	callstack 0
  8283  0036DE                     _isspace:
  8284                           	callstack 26
  8285  0036DE  0E01               	movlw	1
  8286  0036E0  6E07               	movwf	_isspace$1018^0,c
  8287  0036E2  0E20               	movlw	32
  8288  0036E4  1801               	xorwf	isspace@c^0,w,c
  8289  0036E6  1002               	iorwf	(isspace@c+1)^0,w,c
  8290  0036E8  B4D8               	btfsc	status,2,c
  8291  0036EA  EF79  F01B         	goto	u3951
  8292  0036EE  EF7B  F01B         	goto	u3950
  8293  0036F2                     u3951:
  8294  0036F2  EF94  F01B         	goto	l3263
  8295  0036F6                     u3950:
  8296  0036F6  0EF7               	movlw	247
  8297  0036F8  6E03               	movwf	??_isspace^0,c
  8298  0036FA  0EFF               	movlw	255
  8299  0036FC  6E04               	movwf	(??_isspace+1)^0,c
  8300  0036FE  C001  F005         	movff	isspace@c,??_isspace+2
  8301  003702  C002  F006         	movff	isspace@c+1,??_isspace+3
  8302  003706  5003               	movf	??_isspace^0,w,c
  8303  003708  2605               	addwf	(??_isspace+2)^0,f,c
  8304  00370A  5004               	movf	(??_isspace+1)^0,w,c
  8305  00370C  2206               	addwfc	(??_isspace+3)^0,f,c
  8306  00370E  5006               	movf	(??_isspace+3)^0,w,c
  8307  003710  E109               	bnz	u3960
  8308  003712  0E05               	movlw	5
  8309  003714  5C05               	subwf	(??_isspace+2)^0,w,c
  8310  003716  A0D8               	btfss	status,0,c
  8311  003718  EF90  F01B         	goto	u3961
  8312  00371C  EF92  F01B         	goto	u3960
  8313  003720                     u3961:
  8314  003720  EF94  F01B         	goto	l3263
  8315  003724                     u3960:
  8316  003724  0E00               	movlw	0
  8317  003726  6E07               	movwf	_isspace$1018^0,c
  8318  003728                     l3263:
  8319  003728  C007  F001         	movff	_isspace$1018,?_isspace
  8320  00372C  6A02               	clrf	(?_isspace+1)^0,c
  8321  00372E  0012               	return		;funcret
  8322  003730                     __end_of_isspace:
  8323                           	callstack 0
  8324                           
  8325 ;; *************** function _isdigit *****************
  8326 ;; Defined at:
  8327 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  c               2    0[COMRAM] int 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;		None
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  2    0[COMRAM] int 
  8334 ;; Registers used:
  8335 ;;		wreg, status,2, status,0
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8341 ;;      Params:         2       0       0       0       0       0       0       0       0
  8342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8343 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8344 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8345 ;;Total ram usage:        6 bytes
  8346 ;; Hardware stack levels used: 1
  8347 ;; This function calls:
  8348 ;;		Nothing
  8349 ;; This function is called by:
  8350 ;;		_vfpfcnvrt
  8351 ;;		_atoi
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           	psect	text33
  8356  0038C6                     __ptext33:
  8357                           	callstack 0
  8358  0038C6                     _isdigit:
  8359                           	callstack 27
  8360  0038C6  0ED0               	movlw	208
  8361  0038C8  6E03               	movwf	??_isdigit^0,c
  8362  0038CA  0EFF               	movlw	255
  8363  0038CC  6E04               	movwf	(??_isdigit+1)^0,c
  8364  0038CE  C001  F005         	movff	isdigit@c,??_isdigit+2
  8365  0038D2  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8366  0038D6  5003               	movf	??_isdigit^0,w,c
  8367  0038D8  2605               	addwf	(??_isdigit+2)^0,f,c
  8368  0038DA  5004               	movf	(??_isdigit+1)^0,w,c
  8369  0038DC  2206               	addwfc	(??_isdigit+3)^0,f,c
  8370  0038DE  5006               	movf	(??_isdigit+3)^0,w,c
  8371  0038E0  E10A               	bnz	u3930
  8372  0038E2  0E0A               	movlw	10
  8373  0038E4  5C05               	subwf	(??_isdigit+2)^0,w,c
  8374  0038E6  A0D8               	btfss	status,0,c
  8375  0038E8  EF78  F01C         	goto	u3931
  8376  0038EC  EF7B  F01C         	goto	u3930
  8377  0038F0                     u3931:
  8378  0038F0  0E01               	movlw	1
  8379  0038F2  EF7C  F01C         	goto	u3940
  8380  0038F6                     u3930:
  8381  0038F6  0E00               	movlw	0
  8382  0038F8                     u3940:
  8383  0038F8  6E01               	movwf	?_isdigit^0,c
  8384  0038FA  6A02               	clrf	(?_isdigit+1)^0,c
  8385  0038FC  0012               	return		;funcret
  8386  0038FE                     __end_of_isdigit:
  8387                           	callstack 0
  8388                           
  8389 ;; *************** function ___wmul *****************
  8390 ;; Defined at:
  8391 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  8392 ;; Parameters:    Size  Location     Type
  8393 ;;  multiplier      2    0[COMRAM] unsigned int 
  8394 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  product         2    4[COMRAM] unsigned int 
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  2    0[COMRAM] unsigned int 
  8399 ;; Registers used:
  8400 ;;		wreg, status,2, status,0, prodl, prodh
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8406 ;;      Params:         4       0       0       0       0       0       0       0       0
  8407 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8409 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8410 ;;Total ram usage:        6 bytes
  8411 ;; Hardware stack levels used: 1
  8412 ;; This function calls:
  8413 ;;		Nothing
  8414 ;; This function is called by:
  8415 ;;		_atoi
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text34
  8420  0038FE                     __ptext34:
  8421                           	callstack 0
  8422  0038FE                     ___wmul:
  8423                           	callstack 26
  8424  0038FE  5001               	movf	___wmul@multiplier^0,w,c
  8425  003900  0203               	mulwf	___wmul@multiplicand^0,c
  8426  003902  CFF3 F005          	movff	prodl,___wmul@product
  8427  003906  CFF4 F006          	movff	prodh,___wmul@product+1
  8428  00390A  5001               	movf	___wmul@multiplier^0,w,c
  8429  00390C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8430  00390E  50F3               	movf	243,w,c
  8431  003910  2606               	addwf	(___wmul@product+1)^0,f,c
  8432  003912  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8433  003914  0203               	mulwf	___wmul@multiplicand^0,c
  8434  003916  50F3               	movf	243,w,c
  8435  003918  2606               	addwf	(___wmul@product+1)^0,f,c
  8436  00391A  C005  F001         	movff	___wmul@product,?___wmul
  8437  00391E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8438  003922  0012               	return		;funcret
  8439  003924                     __end_of___wmul:
  8440                           	callstack 0
  8441                           
  8442                           	psect	rparam
  8443  0000                     
  8444                           	psect	idloc
  8445                           
  8446                           ;Config register IDLOC0 @ 0x200000
  8447                           ;	unspecified, using default values
  8448  200000                     	org	2097152
  8449  200000  FF                 	db	255
  8450                           
  8451                           ;Config register IDLOC1 @ 0x200001
  8452                           ;	unspecified, using default values
  8453  200001                     	org	2097153
  8454  200001  FF                 	db	255
  8455                           
  8456                           ;Config register IDLOC2 @ 0x200002
  8457                           ;	unspecified, using default values
  8458  200002                     	org	2097154
  8459  200002  FF                 	db	255
  8460                           
  8461                           ;Config register IDLOC3 @ 0x200003
  8462                           ;	unspecified, using default values
  8463  200003                     	org	2097155
  8464  200003  FF                 	db	255
  8465                           
  8466                           ;Config register IDLOC4 @ 0x200004
  8467                           ;	unspecified, using default values
  8468  200004                     	org	2097156
  8469  200004  FF                 	db	255
  8470                           
  8471                           ;Config register IDLOC5 @ 0x200005
  8472                           ;	unspecified, using default values
  8473  200005                     	org	2097157
  8474  200005  FF                 	db	255
  8475                           
  8476                           ;Config register IDLOC6 @ 0x200006
  8477                           ;	unspecified, using default values
  8478  200006                     	org	2097158
  8479  200006  FF                 	db	255
  8480                           
  8481                           ;Config register IDLOC7 @ 0x200007
  8482                           ;	unspecified, using default values
  8483  200007                     	org	2097159
  8484  200007  FF                 	db	255
  8485                           
  8486                           	psect	config
  8487                           
  8488                           ;Config register CONFIG1L @ 0x300000
  8489                           ;	unspecified, using default values
  8490                           ;	PLL Prescaler Selection bits
  8491                           ;	PLLDIV = 0x0, unprogrammed default
  8492                           ;	System Clock Postscaler Selection bits
  8493                           ;	CPUDIV = 0x0, unprogrammed default
  8494                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8495                           ;	USBDIV = 0x0, unprogrammed default
  8496  300000                     	org	3145728
  8497  300000  00                 	db	0
  8498                           
  8499                           ;Config register CONFIG1H @ 0x300001
  8500                           ;	Oscillator Selection bits
  8501                           ;	FOSC = HS, HS oscillator (HS)
  8502                           ;	Fail-Safe Clock Monitor Enable bit
  8503                           ;	FCMEN = 0x0, unprogrammed default
  8504                           ;	Internal/External Oscillator Switchover bit
  8505                           ;	IESO = 0x0, unprogrammed default
  8506  300001                     	org	3145729
  8507  300001  0C                 	db	12
  8508                           
  8509                           ;Config register CONFIG2L @ 0x300002
  8510                           ;	unspecified, using default values
  8511                           ;	Power-up Timer Enable bit
  8512                           ;	PWRT = 0x1, unprogrammed default
  8513                           ;	Brown-out Reset Enable bits
  8514                           ;	BOR = 0x3, unprogrammed default
  8515                           ;	Brown-out Reset Voltage bits
  8516                           ;	BORV = 0x3, unprogrammed default
  8517                           ;	USB Voltage Regulator Enable bit
  8518                           ;	VREGEN = 0x0, unprogrammed default
  8519  300002                     	org	3145730
  8520  300002  1F                 	db	31
  8521                           
  8522                           ;Config register CONFIG2H @ 0x300003
  8523                           ;	Watchdog Timer Enable bit
  8524                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8525                           ;	Watchdog Timer Postscale Select bits
  8526                           ;	WDTPS = 0xF, unprogrammed default
  8527  300003                     	org	3145731
  8528  300003  1E                 	db	30
  8529                           
  8530                           ; Padding undefined space
  8531  300004                     	org	3145732
  8532  300004  FF                 	db	255
  8533                           
  8534                           ;Config register CONFIG3H @ 0x300005
  8535                           ;	CCP2 MUX bit
  8536                           ;	CCP2MX = 0x1, unprogrammed default
  8537                           ;	PORTB A/D Enable bit
  8538                           ;	PBADEN = 0x1, unprogrammed default
  8539                           ;	Low-Power Timer 1 Oscillator Enable bit
  8540                           ;	LPT1OSC = 0x0, unprogrammed default
  8541                           ;	MCLR Pin Enable bit
  8542                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8543  300005                     	org	3145733
  8544  300005  83                 	db	131
  8545                           
  8546                           ;Config register CONFIG4L @ 0x300006
  8547                           ;	unspecified, using default values
  8548                           ;	Stack Full/Underflow Reset Enable bit
  8549                           ;	STVREN = 0x1, unprogrammed default
  8550                           ;	Single-Supply ICSP Enable bit
  8551                           ;	LVP = 0x1, unprogrammed default
  8552                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8553                           ;	ICPRT = 0x0, unprogrammed default
  8554                           ;	Extended Instruction Set Enable bit
  8555                           ;	XINST = 0x0, unprogrammed default
  8556                           ;	Background Debugger Enable bit
  8557                           ;	DEBUG = 0x1, unprogrammed default
  8558  300006                     	org	3145734
  8559  300006  85                 	db	133
  8560                           
  8561                           ; Padding undefined space
  8562  300007                     	org	3145735
  8563  300007  FF                 	db	255
  8564                           
  8565                           ;Config register CONFIG5L @ 0x300008
  8566                           ;	unspecified, using default values
  8567                           ;	Code Protection bit
  8568                           ;	CP0 = 0x1, unprogrammed default
  8569                           ;	Code Protection bit
  8570                           ;	CP1 = 0x1, unprogrammed default
  8571                           ;	Code Protection bit
  8572                           ;	CP2 = 0x1, unprogrammed default
  8573                           ;	Code Protection bit
  8574                           ;	CP3 = 0x1, unprogrammed default
  8575  300008                     	org	3145736
  8576  300008  0F                 	db	15
  8577                           
  8578                           ;Config register CONFIG5H @ 0x300009
  8579                           ;	unspecified, using default values
  8580                           ;	Boot Block Code Protection bit
  8581                           ;	CPB = 0x1, unprogrammed default
  8582                           ;	Data EEPROM Code Protection bit
  8583                           ;	CPD = 0x1, unprogrammed default
  8584  300009                     	org	3145737
  8585  300009  C0                 	db	192
  8586                           
  8587                           ;Config register CONFIG6L @ 0x30000A
  8588                           ;	unspecified, using default values
  8589                           ;	Write Protection bit
  8590                           ;	WRT0 = 0x1, unprogrammed default
  8591                           ;	Write Protection bit
  8592                           ;	WRT1 = 0x1, unprogrammed default
  8593                           ;	Write Protection bit
  8594                           ;	WRT2 = 0x1, unprogrammed default
  8595                           ;	Write Protection bit
  8596                           ;	WRT3 = 0x1, unprogrammed default
  8597  30000A                     	org	3145738
  8598  30000A  0F                 	db	15
  8599                           
  8600                           ;Config register CONFIG6H @ 0x30000B
  8601                           ;	unspecified, using default values
  8602                           ;	Configuration Register Write Protection bit
  8603                           ;	WRTC = 0x1, unprogrammed default
  8604                           ;	Boot Block Write Protection bit
  8605                           ;	WRTB = 0x1, unprogrammed default
  8606                           ;	Data EEPROM Write Protection bit
  8607                           ;	WRTD = 0x1, unprogrammed default
  8608  30000B                     	org	3145739
  8609  30000B  E0                 	db	224
  8610                           
  8611                           ;Config register CONFIG7L @ 0x30000C
  8612                           ;	unspecified, using default values
  8613                           ;	Table Read Protection bit
  8614                           ;	EBTR0 = 0x1, unprogrammed default
  8615                           ;	Table Read Protection bit
  8616                           ;	EBTR1 = 0x1, unprogrammed default
  8617                           ;	Table Read Protection bit
  8618                           ;	EBTR2 = 0x1, unprogrammed default
  8619                           ;	Table Read Protection bit
  8620                           ;	EBTR3 = 0x1, unprogrammed default
  8621  30000C                     	org	3145740
  8622  30000C  0F                 	db	15
  8623                           
  8624                           ;Config register CONFIG7H @ 0x30000D
  8625                           ;	unspecified, using default values
  8626                           ;	Boot Block Table Read Protection bit
  8627                           ;	EBTRB = 0x1, unprogrammed default
  8628  30000D                     	org	3145741
  8629  30000D  40                 	db	64
  8630                           tosu	equ	0xFFF
  8631                           tosh	equ	0xFFE
  8632                           tosl	equ	0xFFD
  8633                           stkptr	equ	0xFFC
  8634                           pclatu	equ	0xFFB
  8635                           pclath	equ	0xFFA
  8636                           pcl	equ	0xFF9
  8637                           tblptru	equ	0xFF8
  8638                           tblptrh	equ	0xFF7
  8639                           tblptrl	equ	0xFF6
  8640                           tablat	equ	0xFF5
  8641                           prodh	equ	0xFF4
  8642                           prodl	equ	0xFF3
  8643                           indf0	equ	0xFEF
  8644                           postinc0	equ	0xFEE
  8645                           postdec0	equ	0xFED
  8646                           preinc0	equ	0xFEC
  8647                           plusw0	equ	0xFEB
  8648                           fsr0h	equ	0xFEA
  8649                           fsr0l	equ	0xFE9
  8650                           wreg	equ	0xFE8
  8651                           indf1	equ	0xFE7
  8652                           postinc1	equ	0xFE6
  8653                           postdec1	equ	0xFE5
  8654                           preinc1	equ	0xFE4
  8655                           plusw1	equ	0xFE3
  8656                           fsr1h	equ	0xFE2
  8657                           fsr1l	equ	0xFE1
  8658                           bsr	equ	0xFE0
  8659                           indf2	equ	0xFDF
  8660                           postinc2	equ	0xFDE
  8661                           postdec2	equ	0xFDD
  8662                           preinc2	equ	0xFDC
  8663                           plusw2	equ	0xFDB
  8664                           fsr2h	equ	0xFDA
  8665                           fsr2l	equ	0xFD9
  8666                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        20
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      95
    BANK0           160    106     136
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), main@V(BANK0[8]), STR_1(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), main@V(BANK0[8]), STR_1(CODE[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> main@V(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> main@V(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S801_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> main@V(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> main@V(BANK0[8]), 

    verificaTensao@V	PTR unsigned char  size(2) Largest target is 8
		 -> main@V(BANK0[8]), 

    imprime_lcd@frase	PTR unsigned char  size(2) Largest target is 9
		 -> main@V(BANK0[8]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _verificaTensao->___flge
    _limpa_lcd->_comando_lcd
    _imprime_lcd->_strlen
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0   38019
                                             72 BANK0     34    34      0
                             ___flge
                        _comando_lcd
                        _imprime_lcd
                            _sprintf
                     _verificaTensao
 ---------------------------------------------------------------------------------
 (1) _verificaTensao                                       7     1      6    4103
                                             37 COMRAM     7     1      6
                             ___flge
                        _imprime_lcd
                          _limpa_lcd
 ---------------------------------------------------------------------------------
 (2) _limpa_lcd                                            0     0      0     402
                        _comando_lcd
 ---------------------------------------------------------------------------------
 (3) _comando_lcd                                          3     1      2     402
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _imprime_lcd                                          9     7      2     909
                                              4 COMRAM     9     7      2
                           _dado_lcd
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _dado_lcd                                             3     1      2      98
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   30128
                                             56 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   29769
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   29389
                                             57 COMRAM    24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   23684
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3241
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    2310
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1304
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flge
     ___flmul (ARG)
   _comando_lcd
   _imprime_lcd
     _dado_lcd
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower
   _verificaTensao
     ___flge
     _imprime_lcd
     _limpa_lcd
       _comando_lcd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6A      88       5       85.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     137      20        0.0%
DATA                 0      0     137       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 27 23:43:02 2021

           ___fldiv@aexp 0019             ___fldiv@bexp 0018             ___fldiv@sign 0011  
                     l31 393C                       l34 3956                       l43 356C  
                     l51 28BC                       l37 3978                       l65 3922  
           ___awdiv@sign 0006      ___wmul@multiplicand 0003                      l330 2F2C  
                    l324 34F0                      l309 3446                      l335 2F72  
                    l610 1CE0                      l602 1E96                      l362 2E6E  
                    l339 38C4                      l620 1D9E                      l296 32D4  
                    l619 1DB0                      l635 3810                      l660 2578  
                    l652 247E                      l661 2566                      l647 265A  
                    l807 147C                      l743 36DC                      l649 24BA  
                    l593 1BC6                      l825 0C10                      l658 2500  
                    l594 1BB4                      l922 35C6                      l683 22C0  
                    l595 1B7A                      l923 35CE                      l916 1920  
                    l933 3070                      l853 1050                      l909 19D6  
                    l686 2152                      l679 1F5C                      l696 2282  
                    l688 21CA                      l784 331A                      l689 21B8  
                    l962 2C56                      l971 2ACE                      l787 335C  
                    l981 38FC                      l965 2C5E                      l789 3396  
                    l974 2A12                      l995 388C                      l989 372E  
                    _pad 32D6             ___awmod@sign 0006                      wreg 000FE8  
        ?_verificaTensao 0026             ___flmul@aexp 0012             ___flmul@bexp 0013  
           ___flmul@sign 000D             ___flmul@temp 0018             ___flmul@prod 0014  
           ___fltol@exp1 000A                     l1010 3210                     l1021 397A  
                   l1033 37CA                     l1018 3854                     l1027 368A  
                   l1052 362E                     l1037 3146                     l1047 3626  
                   l3001 322C                     l3011 3252                     l3003 3230  
                   l3021 3288                     l3013 3264                     l3005 323E  
                   l3101 2EFA                     l3023 329E                     l3015 326C  
                   l3031 32B4                     l3007 3246                     l3103 2F0C  
                   l3033 32C4                     l3025 32A6                     l3017 3274  
                   l3009 324A                     l3041 339C                     l3105 2F1A  
                   l3113 388E                     l3121 2D6A                     l3201 3024  
                   l3035 32CC                     l3027 32A8                     l3019 3282  
                   l3051 33CC                     l3043 33AA                     l3107 2F6A  
                   l3115 38A4                     l3131 2DC0                     l3123 2D80  
                   l3211 3640                     l3029 32AE                     l3061 3412  
                   l3053 33DE                     l3045 33B2                     l3109 2F70  
                   l3117 38B4                     l2501 19D8                     l3133 2DD0  
                   l3205 3068                     l3213 35D0                     l3071 343E  
                   l3063 341A                     l3055 33E6                     l3047 33B6  
                   l3039 3398                     l2511 1A14                     l2503 19E4  
                   l3143 2DFA                     l3135 2DD4                     l3127 2D94  
                   l3231 2956                     l3223 28BE                     l3311 098A  
                   l3303 093A                     l3065 3420                     l3057 33EE  
                   l3049 33C4                     l3081 34B4                     l2601 1BD4  
                   l2521 1A44                     l2513 1A24                     l2505 19F2  
                   l3161 2E5E                     l3153 2E22                     l3145 2E04  
                   l3137 2DE2                     l3129 2DBE                     l3241 2A72  
                   l3225 28DE                     l3209 3630                     l3217 3606  
                   l3401 0D2E                     l3321 0A0E                     l3305 094C  
                   l3251 38C6                     l3059 33FC                     l3067 3426  
                   l3083 34C4                     l3075 3448                     l3091 2E70  
                   l2611 1C16                     l2603 1BE4                     l2531 1A6E  
                   l2523 1A56                     l2515 1A26                     l2507 19F4  
                   l3155 2E2E                     l3147 2E0E                     l3243 2A86  
                   l3235 29C6                     l3227 2934                     l3171 3306  
                   l3219 3618                     l3411 0E16                     l3403 0D36  
                   l3323 0A20                     l3307 0968                     l3315 09B2  
                   l3261 3724                     l3069 3436                     l3085 34E8  
                   l3077 3476                     l3093 2E9E                     l2621 1C44  
                   l2613 1C24                     l2533 1A7E                     l2541 1AA8  
                   l2525 1A58                     l2509 1A04                     l2517 1A2E  
                   l3157 2E3E                     l3245 2AAE                     l3237 2A02  
                   l3229 2948                     l3181 336A                     l3173 3312  
                   l3165 32D6                     l3501 1282                     l3421 0ED4  
                   l3413 0E4A                     l3405 0D46                     l3341 0ADC  
                   l3325 0A3C                     l3317 09D8                     l3333 0A58  
                   l3309 0980                     l3263 3728                     l3255 36DE  
                   l3087 34EE                     l3079 3486                     l3095 2EAE  
                   l2631 1CB0                     l2623 1C4E                     l2615 1C30  
                   l2607 1BF8                     l2551 1AE0                     l2543 1AB8  
                   l2535 1A8E                     l2527 1A5E                     l2519 1A3E  
                   l3159 2E4E                     l3191 2FD2                     l3247 2ABE  
                   l3239 2A36                     l2703 3812                     l3183 337E  
                   l3175 3326                     l3167 32E4                     l2711 3856  
                   l3511 12C6                     l3503 1294                     l3431 0F70  
                   l3423 0EEA                     l3407 0D5A                     l3415 0E50  
                   l3343 0AE2                     l3351 0BAA                     l3335 0A72  
                   l3271 083E                     l3257 36E2                     l2801 24A8  
                   l2721 22C2                     l3097 2EDC                     l2633 1CC0  
                   l2617 1C34                     l2609 1C08                     l2625 1C54  
                   l2561 1AF4                     l2553 1AE4                     l2545 1ACA  
                   l2537 1A9E                     l2529 1A6C                     l3193 2FFA  
                   l2481 316C                     l2705 381E                     l3177 333A  
                   l3169 32F8                     l3521 1306                     l3513 12D8  
                   l3505 12A2                     l3433 0FC6                     l3441 1018  
                   l3425 0F1C                     l3417 0E6E                     l3409 0DBE  
                   l3361 0BEA                     l3353 0BBA                     l3345 0B3C  
                   l3281 088A                     l3273 084C                     l2715 38FE  
                   l3259 36F6                     l3611 2C3A                     l3603 2BD8  
                   l2811 24F0                     l2803 24B8                     l2731 22FE  
                   l2723 22CE                     l3099 2EEC                     l2651 1D42  
                   l2643 1D1A                     l2627 1C7A                     l2635 1CD0  
                   l2619 1C42                     l2571 1B08                     l2563 1AF8  
                   l2555 1AE8                     l2547 1AD8                     l2539 1AA0  
                   l3195 3006                     l3187 2F74                     l2483 3176  
                   l2707 3830                     l2491 377E                     l3179 333E  
                   l3531 134E                     l3523 130E                     l3515 12E0  
                   l3507 12B2                     l3451 10D0                     l3443 1028  
                   l3435 0FCC                     l3427 0F2C                     l3419 0EA2  
                   l3371 0C2E                     l3363 0C04                     l3355 0BBE  
                   l3347 0B70                     l3339 0AA8                     l3291 08D0  
                   l3283 089C                     l3275 0854                     l3267 0824  
                   l2717 391A                     l2821 2530                     l2813 24FE  
                   l2805 24CA                     l2741 232E                     l2733 230E  
                   l2725 22DC                     l2901 1F9C                     l2653 1D4A  
                   l2645 1D24                     l2637 1CF6                     l2629 1CAE  
                   l2661 1D6E                     l2581 1B1C                     l2573 1B0C  
                   l2565 1AFC                     l2557 1AEC                     l2549 1ADC  
                   l3189 2F94                     l2485 3194                     l2477 3148  
                   l2709 3834                     l2493 378A                     l3541 13A4  
                   l3533 136A                     l3525 1316                     l3517 12F0  
                   l3509 12B6                     l3453 10DE                     l3461 111A  
                   l3445 103C                     l3437 1000                     l3429 0F3C  
                   l3373 0C40                     l3381 0C9E                     l3357 0BD0  
                   l3365 0C1C                     l3349 0B78                     l3293 08D4  
                   l3285 08AA                     l3277 0878                     l3269 082E  
                   l3701 173E                     l3607 2C16                     l2831 25A2  
                   l2823 255E                     l2807 24E0                     l2815 2510  
                   l2751 2364                     l2743 2334                     l2735 2310  
                   l2727 22DE                     l2911 1FEC                     l2903 1FA6  
                   l2671 1DC0                     l2663 1D72                     l2655 1D4E  
                   l2647 1D32                     l2639 1D06                     l2591 1B94  
                   l2583 1B46                     l2575 1B10                     l2567 1B00  
                   l2559 1AF0                     l3199 3012                     l2487 31CA  
                   l2479 315A                     l2495 378E                     l3551 13E0  
                   l3543 13AA                     l3535 1372                     l3527 1322  
                   l3519 12F8                     l3471 1156                     l3463 112E  
                   l3455 10F2                     l3447 1048                     l3439 1014  
                   l3391 0CDC                     l3383 0CA6                     l3375 0C5C  
                   l3359 0BE2                     l3295 08D8                     l3287 08BC  
                   l3279 0882                     l3631 30FC                     l3623 30A8  
                   l3711 17B4                     l3703 174E                     l3609 2C28  
                   l2841 261A                     l2833 25CC                     l2817 251E  
                   l2809 24E6                     l2761 23A4                     l2753 2374  
                   l2745 2342                     l2729 22EE                     l2737 2318  
                   l2921 202E                     l2913 1FF8                     l2905 1FBC  
                   l2681 1E26                     l2673 1DCC                     l2665 1D80  
                   l2657 1D5E                     l2649 1D34                     l2593 1B98  
                   l2585 1B62                     l2577 1B14                     l2569 1B04  
                   l2497 37BE                     l3561 1432                     l3553 13E6  
                   l3545 13BC                     l3529 1328                     l3537 1378  
                   l3473 1162                     l3465 113C                     l3481 1182  
                   l3457 1104                     l3449 106C                     l3393 0CEE  
                   l3385 0CB8                     l3377 0C92                     l3289 08C8  
                   l3297 08DE                     l3633 3124                     l3625 30B6  
                   l3617 3072                     l3713 17E4                     l3705 177E  
                   l3641 393A                     l3801 279C                     l2851 2650  
                   l2843 2636                     l2827 2588                     l2835 25D0  
                   l2819 2522                     l2763 23B4                     l2771 23D4  
                   l2755 2376                     l2747 2344                     l2739 2328  
                   l2931 2090                     l2923 203E                     l2915 2006  
                   l2907 1FC8                     l2691 1E6E                     l2683 1E36  
                   l2675 1DDA                     l2667 1D96                     l2659 1D60  
                   l2595 1BA6                     l2587 1B72                     l2579 1B18  
                   l3563 143E                     l3555 13EC                     l3547 13C8  
                   l3539 138A                     l3491 1208                     l3483 1194  
                   l3475 1172                     l3467 114C                     l3459 1112  
                   l3395 0CFC                     l3387 0CCA                     l3379 0C9A  
                   l3299 0904                     l3627 30CE                     l3619 309C  
                   l3723 18AA                     l3707 1790                     l3651 14A2  
                   l3643 393E                     l3811 281C                     l3803 279E  
                   l3581 2AEC                     l2845 263A                     l2837 25EA  
                   l2829 2594                     l2781 2412                     l2773 23E4  
                   l2765 23BC                     l2749 2354                     l2757 237E  
                   l2941 2138                     l2933 20AC                     l2925 2058  
                   l2917 2012                     l2909 1FE0                     l2861 1EA4  
                   l2693 1E70                     l2685 1E56                     l2677 1E14  
                   l2597 1BA8                     l2589 1B88                     l3565 1446  
                   l3549 13D0                     l3493 123C                     l3485 11A6  
                   l3477 1176                     l3469 1150                     l3397 0D14  
                   l3389 0CD8                     l3629 30EA                     l3725 18BC  
                   l3733 1934                     l3709 17A6                     l3717 1810  
                   l3661 151E                     l3653 14B0                     l3645 3946  
                   l3637 3924                     l3821 289C                     l3813 281E  
                   l3805 27AA                     ?_pad 0011                     l3591 2B48  
                   l3583 2B08                     l3575 2AD0                     l2847 2648  
                   l2839 2600                     l2791 245A                     l2783 2422  
                   l2775 23E4                     l2767 23C0                     l2759 238E  
                   l2951 2174                     l2943 2142                     l2935 20D6  
                   l2927 2068                     l2919 2022                     l2871 1EE4  
                   l2863 1EB2                     l2695 1E76                     l2687 1E5A  
                   l2679 1E16                     l2599 1BB2                     l3567 1456  
                   l3559 1420                     l3495 1244                     l3487 11AA  
                   l3479 117C                     l3399 0D26                     l3751 19C4  
                   l3735 1958                     l3743 1986                     l3727 18F0  
                   l3719 183E                     l3663 152C                     l3655 14C0  
                   l3831 369E                     l3647 3954                     l3639 392C  
                   l3823 289E                     l3815 282A                     l3807 27B8  
                   l3593 2B5E                     l3585 2B3E                     l3577 2AE4  
                   l2849 264E                     l2793 246E                     l2785 2432  
                   l2961 21E6                     l2953 2182                     l2945 2150  
                   l2937 210C                     l2929 2084                     l2881 1F14  
                   l2873 1EEA                     l2865 1EB4                     l2697 1E84  
                   l2689 1E68                     l3569 145C                     l3489 11B0  
                   l3497 1248                     l3745 1994                     l3737 1966  
                   l3681 15FA                     l3673 15AE                     l3665 153A  
                   l3657 14C4                     l3649 147E                     l3833 36A6  
                   l3761 34FA                     l3825 28AA                     l3809 27EA  
                   l3817 2838                     l3841 2C60                     l3595 2B66  
                   l3587 2B42                     l3579 2AE8                     l2795 247C  
                   l2787 2442                     l2779 23F8                     l2971 2250  
                   l2963 21F4                     l2955 21B0                     l2947 2162  
                   l2939 211A                     l2891 1F4C                     l2883 1F16  
                   l2875 1EFA                     l2867 1EC4                     l2859 1E98  
                   l2699 1E86                     l3499 1266                     l3739 197A  
                   l3683 161E                     l3667 155A                     l3675 15C0  
                   l3659 14E8                     l3771 3576                     l3835 36AE  
                   l3763 3512                     l3819 286A                     l3827 28B8  
                   l3851 2C82                     l3843 2C64                     l3597 2B6E  
                   l2797 2488                     l2789 244A                     l2981 22A6  
                   l2973 226A                     l2965 221E                     l2949 2170  
                   l2893 1F6C                     l2885 1F26                     l2877 1F00  
                   l2869 1ED4                     l3693 16CC                     l3685 1658  
                   l3677 15E4                     l3669 1568                     l3749 19A0  
                   l3773 3584                     l3837 36CA                     l3829 368C  
                   l3765 354A                     l3757 396C                     l3781 269C  
                   l3861 2CC6                     l3853 2C8E                     l3845 2C7C  
                   l3599 2BA2                     l2799 24A6                     l2975 2286  
                   l2983 22AC                     l2959 21DA                     l2967 2222  
                   l2895 1F7C                     l2887 1F36                     l2879 1F06  
                   l2991 37DC                     l3687 1678                     l3679 15EC  
                   l3695 16DE                     l3775 35AA                     l3767 354E  
                   l3759 34F2                     l3791 271C                     l3783 269E  
                   l3871 2D14                     l3863 2CCA                     l3855 2C9A  
                   l3847 2C7E                     l2985 22B0                     l2977 2296  
                   l2969 223C                     l2889 1F46                     l3697 16FE  
                   l3689 1686                     l3769 356E                     l3793 271E  
                   l3785 26AA                     l3777 265C                     l3873 2D30  
                   l3865 2CD6                     l3857 2CAC                     l3849 2C80  
                   l2995 3212                     l2979 22A4                     l2899 1F90  
                   l3699 170E                     l3795 272A                     l3779 266A  
                   l3787 26B8                     l3875 2D62                     l3867 2CE2  
                   l3859 2CB6                     l2997 3216                     l2989 37CC  
                   l3789 26EA                     l3797 2738                     l3869 2CEE  
                   l2999 3224                     l3799 276A                     l3897 2B8C  
                   STR_1 0801                     STR_2 080A                     STR_3 0810  
                   STR_4 0818                     STR_7 0814                     STR_8 081C  
                   u3000 2342                     u3001 233E                     u3010 2354  
                   u3011 2350                     u3100 24FE                     u3020 2364  
                   u3101 24FA                     u3021 2360                     u3110 251E  
                   u3030 23A4                     u3111 251A                     u3031 23A0  
                   u3120 2530                     u3040 23E4                     u3200 1EB2  
                   u4000 08BC                     u3121 252C                     u3041 23E0  
                   u3201 1EAE                     u4001 08B8                     u3130 255E  
                   u3050 245A                     u3210 1EC4                     u4010 0904  
                   u3131 255A                     u3051 2456                     u3211 1EC0  
                   u4011 0900                     u3140 2574                     u3060 247C  
                   u3300 2170                     u3220 1ED4                     u2500 316C  
                   u4100 0B38                     u4020 0932                     u3141 2570  
                   u3061 2478                     u3301 216C                     u3221 1ED0  
                   u2501 3168                     u4101 0B34                     u4021 092C  
                   u3150 2588                     u3070 24A6                     u3310 2182  
                   u3230 1F14                     u2510 3194                     u4110 0BAA  
                   u4030 0934                     u3151 2584                     u3071 24A2  
                   u3311 217E                     u3231 1F10                     u2511 3190  
                   u4111 0BA6                     u3400 323E                     u3160 25A2  
                   u3080 24CA                     u3320 21B0                     u3240 1F26  
                   u2600 1A7E                     u2520 31CA                     u4200 0CCA  
                   u4120 0BD0                     u4040 094C                     u3401 323A  
                   u3161 259E                     u3081 24C6                     u3321 21AC  
                   u3241 1F22                     u2601 1A7A                     u2521 31C6  
                   u4201 0CC6                     u4121 0BCC                     u4041 0948  
                   u3410 3264                     u3170 25EA                     u3090 24E0  
                   u3330 21C6                     u3250 1F36                     u2610 1A8E  
                   u2530 37AE                     u4210 0CD8                     u4130 0BE2  
                   u4050 09D8                     u3411 3260                     u3171 25E6  
                   u3091 24DC                     u3331 21C2                     u3251 1F32  
                   u2611 1A8A                     u4211 0CD4                     u4131 0BDE  
                   u4051 09D4                     u3420 3282                     u3500 3436  
                   u3180 261A                     u3340 21DA                     u3260 1F6C  
                   u2700 1BD4                     u2620 1ACA                     u2540 37BE  
                   u4300 1014                     u4220 0CEE                     u4140 0C04  
                   u4060 0A06                     u3421 327E                     u3501 3432  
                   u3181 2616                     u3341 21D6                     u3261 1F68  
                   u2701 1BD0                     u2621 1AC6                     u2541 37BA  
                   u4301 1010                     u4221 0CEA                     u4141 0C00  
                   u4061 0A00                     u3430 329E                     u3190 2648  
                   u3510 3476                     u3350 21F4                     u3270 1F7C  
                   u2710 1BE4                     u2630 1AD8                     u2550 19F2  
                   u4310 103C                     u4230 0CFC                     u4150 0C2A  
                   u4070 0A08                     u3431 329A                     u3191 2644  
                   u3511 3472                     u3351 21F0                     u3271 1F78  
                   u2711 1BE0                     u2631 1AD4                     u2551 19EE  
                   u4311 1038                     u4231 0CF8                     u4151 0C26  
                   u5007 2830                     u3440 32C4                     u3520 34B4  
                   u3360 223C                     u3280 20F6                     u2800 1D42  
                   u2720 1C16                     u2640 1B46                     u2560 1A04  
                   u3600 2D80                     u4400 1282                     u4320 10DE  
                   u4240 0D26                     u4160 0C40                     u4080 0A20  
                   u3441 32C0                     u3521 34B0                     u3361 2238  
                   u2801 1D3E                     u2721 1C12                     u2641 1B42  
                   u2561 1A00                     u3601 2D7C                     u2537 37A4  
                   u4401 127E                     u4321 10DA                     u4241 0D22  
                   u4161 0C3C                     u4081 0A1C                     u5017 28B0  
                   u3450 33AA                     u3530 34E8                     u3370 226A  
                   u3290 2150                     u2810 1D5E                     u2730 1C24  
                   u2650 1B5E                     u2570 1A14                     u3610 2DB4  
                   u2490 315A                     u4410 1294                     u4330 10F2  
                   u4250 0E6E                     u4170 0C5C                     u4090 0AA4  
                   u3451 33A6                     u3531 34E4                     u3371 2266  
                   u3291 214C                     u2811 1D5A                     u2731 1C20  
                   u2651 1B58                     u2571 1A10                     u2491 3156  
                   u4411 1290                     u4331 10EE                     u4251 0E6A  
                   u4171 0C58                     u4091 0AA0                     u5027 3932  
                   u3460 33C4                     u3540 2E9E                     u3380 22A4  
                   u2900 1E36                     u2820 1D6E                     u2740 1C42  
                   u2660 1B60                     u2580 1A56                     u3620 2DE2  
                   u3700 336A                     u4500 1432                     u4420 12A2  
                   u4340 1104                     u4260 0ED4                     u4180 0C92  
                   u3461 33C0                     u3541 2E9A                     u3381 22A0  
                   u3285 20EC                     u2901 1E32                     u2821 1D6A  
                   u2741 1C3E                     u2581 1A52                     u3621 2DDE  
                   u3701 3366                     u4501 142E                     u4421 129E  
                   u4341 1100                     u4261 0ED0                     u4181 0C8E  
                   u5037 394C                     u4510 2B08                     u3390 3224  
                   u3470 33DE                     u3550 2EDC                     u2910 1E56  
                   u2830 1D80                     u2750 1C7A                     u2670 1B88  
                   u2590 1A6C                     u3630 2DF6                     u3710 2FB4  
                   u4430 12D8                     u4350 1112                     u4270 0F1C  
                   u4190 0CB8                     u4511 2B04                     u3391 3220  
                   u3471 33DA                     u3551 2ED8                     u2911 1E52  
                   u2831 1D7C                     u2751 1C76                     u2671 1B84  
                   u2591 1A68                     u3631 2DF2                     u3615 2DAA  
                   u4431 12D4                     u4351 110E                     u4271 0F18  
                   u4191 0CB4                     u4520 2B3E                     u3480 33FC  
                   u3560 2EFA                     u2920 1E68                     u2840 1D96  
                   u2760 1CC0                     u2680 1BA6                     u3640 2E1E  
                   u3720 2FD2                     u3800 3600                     u4440 1306  
                   u4360 112E                     u4280 0F2C                     u4600 30EA  
                   u4521 2B3A                     u3481 33F8                     u3561 2EF6  
                   u2921 1E64                     u2841 1D92                     u2761 1CBC  
                   u2681 1BA2                     u3641 2E1A                     u3721 2FCE  
                   u3801 35FA                     u4441 1302                     u4361 112A  
                   u4281 0F28                     u4601 30E6                     u4530 2B5A  
                   u3490 3412                     u3570 2F1A                     u2930 1E84  
                   u2850 1DAC                     u2770 1CF6                     u2690 1BC6  
                   u3650 2E3E                     u3730 2FFA                     u3810 3602  
                   u4450 138A                     u4370 113C                     u4290 0FC6  
                   u4610 30FC                     u4531 2B56                     u3491 340E  
                   u3571 2F16                     u2931 1E80                     u2851 1DA8  
                   u2771 1CF2                     u2691 1BC2                     u3651 2E3A  
                   u3731 2FF6                     u3715 2FAA                     u4451 1386  
                   u4371 1138                     u4291 0FC2                     u4611 30F8  
                   u4540 2C10                     u3580 2F6A                     u2860 1DC0  
                   u2780 1D06                     u3660 2E4E                     u3740 3024  
                   u3900 2A56                     u2940 3854                     u3820 3618  
                   u4460 13A4                     u4380 1194                     u4620 3124  
                   u4700 161E                     u4541 2C0A                     u3581 2F66  
                   u2861 1DBC                     u2781 1D02                     u3661 2E4A  
                   u3741 3020                     u2941 3850                     u3821 3614  
                   u4461 13A0                     u4381 1190                     u4621 3120  
                   u4701 161A                     u4550 2C12                     u3590 38A4  
                   u2870 1DDA                     u2790 1D32                     u3910 2A72  
                   u3830 2906                     u3670 32E4                     u2950 3886  
                   u4470 13BC                     u4390 1266                     u4710 16C6  
                   u4630 14A2                     u3591 38A0                     u2871 1DD6  
                   u2791 1D2E                     u3911 2A6E                     u3671 32E0  
                   u2951 3880                     u4471 13B8                     u4391 1262  
                   u4711 16C0                     u4631 149E                     u4560 2C28  
                   u2880 1E14                     u3760 305E                     u3920 2AAE  
                   u3840 2934                     u3680 3306                     u2960 3888  
                   u4480 141A                     u4800 18BC                     u4720 16C8  
                   u4640 14E8                     u4561 2C24                     u2881 1E10  
                   u3761 3058                     u3921 2AAA                     u3905 2A4C  
                   u3841 2930                     u3681 3302                     u4481 1414  
                   u4801 18B8                     u4641 14E4                     u3930 38F6  
                   u4570 2C3A                     u2970 22DC                     u2890 1E26  
                   u3770 3060                     u3850 2956                     u3690 335C  
                   u4490 141C                     u4810 1958                     u4730 16DE  
                   u4650 152C                     u3931 38F0                     u4571 2C36  
                   u2971 22D8                     u2891 1E22                     u3755 3036  
                   u3851 2952                     u3835 28FC                     u3691 3358  
                   u4811 1954                     u4731 16DA                     u4651 1528  
                   u3940 38F8                     u2980 22EE                     u3780 3678  
                   u4580 309C                     u4740 170E                     u4660 15A8  
                   u4820 353E                     u4900 279C                     u2981 22EA  
                   u4581 3098                     u4741 170A                     u4661 15A2  
                   u4901 2798                     u3950 36F6                     u2990 22FE  
                   u3870 29C2                     u3790 368A                     u4590 30CE  
                   u4750 174E                     u4670 15AA                     u4830 356C  
                   u4910 27EA                     u3951 36F2                     u2991 22FA  
                   u3871 29BE                     u3791 3686                     u4591 30CA  
                   u4751 174A                     u4831 3568                     u4911 27E6  
                   u3960 3724                     u3880 29E6                     u4760 1790  
                   u4680 15C0                     u4840 35C6                     u4920 281C  
                   u3961 3720                     u3865 296A                     u4761 178C  
                   u4681 15BC                     u4841 35C2                     u4921 2818  
                   u3890 2A02                     u3866 2974                     u3970 084C  
                   u4770 183E                     u4690 15E4                     u4930 286A  
                   u4850 266A                     u3891 29FE                     u3867 2984  
                   u3787 366E                     u3971 0848                     u4771 183A  
                   u4691 15E0                     u4827 3534                     u4931 2866  
                   u4851 2666                     u3980 089C                     u4780 18A4  
                   u4940 289C                     u4860 269C                     u3885 29DC  
                   u3981 0898                     u4781 189E                     u4941 2898  
                   u4861 2698                     u3990 08AA                     u4790 18A6  
                   u4870 26EA                     u3991 08A6                     u4871 26E6  
                   u4951 2CA4                     u4880 271C                     u4960 2D62  
                   u4881 2718                     u4961 2D5E                     u4890 276A  
                   u4891 2766                     u4977 26B0                     u4987 2730  
                   u4997 27B0                     _dbuf 0100                     _atoi 2AD0  
                   _main 2C60                     _prec 005C                     _nout 00E6  
                   pad@i 0018                     pad@p 0015                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
          ___fpclassifyf 2F74                     prodh 000FF4                     prodl 000FF3  
                   start 0000          ___fldiv@new_exp 0012             _tolower$1082 000D  
           ___param_bank 000000                    ??_pad 0017            ___fltol@sign1 0009  
                  ?_atoi 0008          __end_of___fladd 1E98                    ?_main 0001  
        __end_of___fldiv 265C          __end_of___awdiv 32D6          __end_of___flneg 38C6  
                  STR_11 0820                    STR_13 0820          __end_of___awmod 3448  
        __end_of___flmul 22C2          __end_of___flsub 3812          __end_of___fltol 2E70  
                  _T0CON 000FD5          ___awdiv@divisor 0003          ___awdiv@counter 0005  
           vfpfcnvrt@fmt 003C                    _TMR0L 000FD6                    _PORTD 000F83  
                  _TRISD 000F95                    _TRISE 000F96                    _flags 005E  
                  _fputc 3148                    _fputs 3812          __end_of_isdigit 38FE  
                  atoi@n 0015                    pad@fp 0011                    atoi@s 0008  
                  _width 005A                    main@V 00BC                    _putch 397A  
                  main@i 00C4          __end_of_isspace 3730          __end_of_isupper 388E  
                  tablat 000FF5                    plusw1 000FE3                    plusw2 000FDB  
           ?_imprime_lcd 0005                    status 000FD8          __end_of_sprintf 36DE  
         ?___fpclassifyf 0001          __end_of_tolower 3630          __end_of_strncmp 3148  
        __initialization 3730             __end_of_atoi 2C60             __end_of_main 2D6A  
                 ??_atoi 000A                   ??_main 005A            __activetblptr 000002  
                 _ADCON1 000FC1                   ?_fputc 0001                   ?_fputs 000A  
       ___awdiv@dividend 0001                   ?_putch 0001         __end_of_dado_lcd 3958  
   __size_of_comando_lcd 001A             vfprintf@cfmt 0058                   ___flge 2E70  
                 ___fleq 3448                ??___fladd 0009                   ___wmul 38FE  
              ??___fldiv 0009                ??___awdiv 0005                ??___flneg 0005  
              ??___awmod 0005                ??___flmul 0009                ??___flsub 0022  
              ??___fltol 0005                   _efgtoa 0824                   _floorf 28BE  
                 clear_0 3756                   clear_1 3762         ___awdiv@quotient 0007  
        ___awmod@divisor 0003                   isa$std 000001          ___awmod@counter 0005  
                 pad@buf 0013                   _strcpy 3630                   _strlen 377E  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_isdigit 0003          ___fpclassifyf@e 0009  
        ___fpclassifyf@u 000B          ___fpclassifyf@x 0001             __mediumconst 0000  
              ??_isspace 0003                   tblptrh 000FF7                ??_isupper 0003  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 35D0                ??_sprintf 005A                ??_tolower 0009  
              ??_strncmp 0007               ___flge@ff1 001A               ___flge@ff2 001E  
        ??___fpclassifyf 0005               ___fleq@ff1 0001               ___fleq@ff2 0005  
             __accesstop 0060  __end_of__initialization 3774               ___flneg@f1 0001  
          ___rparam_used 000001               ___fltol@f1 0001           __pcstackCOMRAM 0001  
           __pidataBANK0 3958            __end_of_fputc 3212            __end_of_fputs 3856  
          __end_of_putch 397C         ??_verificaTensao 002C                  ??_fputc 0005  
                ??_fputs 000E                  ??_putch 0001               __pbssBANK0 00DE  
             __pbssBANK1 0100     __size_of_imprime_lcd 007C       __size_of_limpa_lcd 000E  
             _efgtoa$922 0060               _efgtoa$923 0062               _efgtoa$932 0066  
             _efgtoa$933 0068               _efgtoa$934 006A               _efgtoa$928 0064  
                ?___flge 001A                  ?___fleq 0001                  ?___wmul 0001  
                ?_efgtoa 002E                  ?_floorf 001A                  ?_strcpy 0001  
                ?_strlen 0001                ?_dado_lcd 0001       __size_of_vfpfcnvrt 055A  
   verificaTensao@tensao 0026                  __Hparam 0000                  __Lparam 0000  
        __size_of___flge 0104          __size_of___fleq 00AA                  ___fladd 19D8  
                ___fldiv 22C2                  ___awdiv 3212                  ___flneg 388E  
                ___awmod 3398                  ___flmul 1E98                  ___flsub 37CC  
                ___fltol 2D6A          __size_of___wmul 0026                ?_vfprintf 0052  
           __psmallconst 0800          __size_of_efgtoa 0C5A          __size_of_floorf 0212  
                __pcinit 3730                  __ramtop 0800                  __ptext0 2C60  
                __ptext1 265C                  __ptext2 396C                  __ptext3 3924  
                __ptext4 34F2                  __ptext5 393E                  __ptext6 368C  
                __ptext7 356E                  __ptext8 147E                  __ptext9 3072  
        __size_of_strcpy 005C          __size_of_strlen 004E               ??_dado_lcd 0003  
           __size_of_pad 00C2                  _isdigit 38C6         ___awmod@dividend 0001  
      __end_of_limpa_lcd 397A                  _isspace 36DE                  _isupper 3856  
                efgtoa@c 0034                  efgtoa@d 0078                  efgtoa@e 0090  
                efgtoa@f 0030                  efgtoa@g 008C                  efgtoa@h 0082  
                efgtoa@i 008A                  efgtoa@l 0086                  efgtoa@m 0072  
                efgtoa@n 0092                  efgtoa@p 007C                  efgtoa@t 006C  
                efgtoa@u 0094                  efgtoa@w 007E                  atoi@neg 000E  
                _sprintf 368C                  _tolower 35D0                  _strncmp 3072  
   end_of_initialization 3774                  floorf@e 0028                  floorf@m 0024  
                floorf@u 002A                  floorf@x 001A                  fputc@fp 0003  
          __Lmediumconst 0000                  fputs@fp 000C        __end_of_vfpfcnvrt 19D8  
             efgtoa@mode 0081               efgtoa@sign 007A                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 0058                  strcpy@d 0009  
                strlen@a 0003                  strcpy@s 0007                  strlen@s 0001  
              _PORTDbits 000F83                _PORTEbits 000F84        imprime_lcd@indice 000C  
            ___fladd@grs 0010              ___fldiv@grs 0014              ___fldiv@rem 000D  
            ___flmul@grs 000E             dado_lcd@dado 0001            ??_comando_lcd 0003  
             main@tensao 00C6           __end_of___flge 2F74           __end_of___fleq 34F2  
            vfpfcnvrt@ap 003E              vfpfcnvrt@ct 004E              vfpfcnvrt@fp 003A  
         __end_of___wmul 3924           __end_of_efgtoa 147E           __end_of_floorf 2AD0  
             floorf@F527 00DE           __end_of_strcpy 368C           __end_of_strlen 37CC  
    start_initialization 3730              __end_of_pad 3398    __end_of___fpclassifyf 3072  
            vfprintf@fmt 0054                 ??___flge 0022                 ??___fleq 0009  
    __end_of_comando_lcd 393E                 ??___wmul 0005                 ??_efgtoa 0035  
            __pdataBANK0 00CA                 ??_floorf 001E                 ??_strcpy 0005  
               ??_strlen 0003                ___fladd@a 0005                ___fladd@b 0001  
              ___fldiv@a 0005                ___fldiv@b 0001                ___flmul@a 0005  
              ___flmul@b 0001              __pbssCOMRAM 005A                ___flsub@a 001E  
              ___flsub@b 001A            __pcstackBANK0 0060        __size_of_dado_lcd 001A  
          ??_imprime_lcd 0007       comando_lcd@comando 0001                 ?___fladd 0001  
               ?___fldiv 0001                 ?___awdiv 0001                 ?___flneg 0001  
               ?___awmod 0001                 ?___flmul 0001                 ?___flsub 001A  
               ?___fltol 0001        __size_of_vfprintf 0062              __smallconst 0800  
               ?_isdigit 0001                 ?_isspace 0001          verificaTensao@V 002A  
               ?_isupper 0001                 ?_sprintf 0098                 ?_tolower 0007  
__size_of_verificaTensao 0262           __size_of_fputc 00CA           __size_of_fputs 0044  
               ?_strncmp 0001                _limpa_lcd 396C           __size_of_putch 0002  
         ___wmul@product 0005              _comando_lcd 3924      __end_of_imprime_lcd 356E  
              main@F3660 00CA        main@vetorDeTensao 00A8         imprime_lcd@frase 0005  
              _vfpfcnvrt 147E        ___wmul@multiplier 0001             _isspace$1018 0007  
             vfpfcnvrt@c 0051               vfpfcnvrt@f 004A              _INTCON2bits 000FF1  
            _INTCON3bits 000FF0                copy_data0 3744               ?_limpa_lcd 0001  
               __Hrparam 0000               vfprintf@ap 0056                 __Lrparam 0000  
             vfprintf@fp 0052         __size_of___fladd 04C0         __size_of___fldiv 039A  
       __size_of___awdiv 00C4         __size_of___flneg 0038         __size_of___awmod 00B0  
       __size_of___flmul 042A         __size_of___flsub 0046         __size_of___fltol 0106  
             ?_vfpfcnvrt 003A       ___fpclassifyf@F465 00E2                 _dado_lcd 393E  
             sprintf@fmt 009A                 _atoi$987 0010                 _atoi$988 0014  
               _atoi$989 0012         __size_of_isdigit 0038         __size_of_isspace 0052  
               __ptext10 0824                 __ptext11 35D0                 __ptext20 2F74  
               __ptext12 3856                 __ptext21 2D6A                 __ptext13 3630  
               __ptext30 3212                 __ptext22 37CC                 __ptext14 32D6  
               __ptext31 2AD0                 __ptext23 19D8                 __ptext15 377E  
               __ptext32 36DE                 __ptext24 388E                 __ptext16 3812  
               __ptext33 38C6                 __ptext25 1E98                 __ptext17 3148  
               __ptext34 38FE                 __ptext26 2E70                 __ptext18 397A  
               __ptext27 3448                 __ptext19 28BE                 __ptext28 22C2  
               __ptext29 3398         __size_of_isupper 0038         __size_of_sprintf 0052  
       __size_of_tolower 0060               strcpy@dest 0001         __size_of_strncmp 00D6  
            _imprime_lcd 34F2            __size_of_atoi 0190            __size_of_main 010A  
               efgtoa@fp 002E                 efgtoa@ne 0070                 efgtoa@pp 006E  
               efgtoa@ou 0074                 isa$xinst 000000                 _vfprintf 356E  
             _INTCONbits 000FF2                 isdigit@c 0001           _verificaTensao 265C  
            ??_limpa_lcd 0004                sprintf@ap 00A0                 isspace@c 0001  
              strcpy@src 0003                 isupper@c 0001                strncmp@_l 0001  
              strncmp@_r 0003              efgtoa@nmode 0080              ??_vfpfcnvrt 0040  
          _vfpfcnvrt$953 0048            _vfpfcnvrt$948 0044            _vfpfcnvrt$949 0046  
               sprintf@f 00A2                 tolower@c 0007                 sprintf@s 0098  
 __size_of___fpclassifyf 00FE   __end_of_verificaTensao 28BE                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A            ___fladd@signs 000D  
     imprime_lcd@tamanho 000A             ___fladd@aexp 000E             ___fladd@bexp 000F  
           ?_comando_lcd 0001  
